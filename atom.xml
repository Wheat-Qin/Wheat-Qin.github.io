<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>喂：一二三</title>
  
  <subtitle>低调、踏实、前行。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://guohuaden.com/"/>
  <updated>2019-01-25T07:23:18.535Z</updated>
  <id>http://guohuaden.com/</id>
  
  <author>
    <name>Wheat</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>隐私协议</title>
    <link href="http://guohuaden.com/2019/01/20/PrivacyPolicy/"/>
    <id>http://guohuaden.com/2019/01/20/PrivacyPolicy/</id>
    <published>2019-01-20T07:19:56.000Z</published>
    <updated>2019-01-25T07:23:18.535Z</updated>
    
    <content type="html"><![CDATA[<p>本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。</p><h3 id="1-适用范围"><a href="#1-适用范围" class="headerlink" title="1.适用范围"></a>1.适用范围</h3><p>a.在您使用本软件网络服务，本软件自动接收并记录的您的手机上的信息，包括但不限于您的健康数据、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；</p><h3 id="2-信息的使用"><a href="#2-信息的使用" class="headerlink" title="2.信息的使用"></a>2.信息的使用</h3><p>a.在获得您的数据之后，本软件会将其上传至服务器，以生成您的排行榜数据，以便您能够更好地使用服务。</p><h3 id="3-信息披露"><a href="#3-信息披露" class="headerlink" title="3.信息披露"></a>3.信息披露</h3><p>a.本软件不会将您的信息披露给不受信任的第三方。</p><p>b.根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；</p><p>c.如您出现违反中国有关法律、法规或者相关规则的情况，需要向第三方披露；</p><h3 id="4-信息存储和交换"><a href="#4-信息存储和交换" class="headerlink" title="4.信息存储和交换"></a>4.信息存储和交换</h3><p>本软件收集的有关您的信息和资料将保存在本软件及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本软件收集信息和资料所在地的境外并在境外被访问、存储和展示。</p><h3 id="5-信息安全"><a href="#5-信息安全" class="headerlink" title="5.信息安全"></a>5.信息安全</h3><p>a.在使用本软件网络服务进行网上交易时，您不可避免的要向交易对方或潜在的交易对方披露自己的个人信息，如联络方式或者邮政地址。请您妥善保护自己的个人信息，仅在必要的情形下向他人提供。如您发现自己的个人信息泄密，请您立即联络本软件客服，以便本软件采取相应措施。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三
      
    
    </summary>
    
      <category term="隐私协议" scheme="http://guohuaden.com/categories/%E9%9A%90%E7%A7%81%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="隐私协议" scheme="http://guohuaden.com/tags/%E9%9A%90%E7%A7%81%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>算法七：二叉树遍历</title>
    <link href="http://guohuaden.com/2019/01/08/Arithmetic7-BinaryTreeTraverse/"/>
    <id>http://guohuaden.com/2019/01/08/Arithmetic7-BinaryTreeTraverse/</id>
    <published>2019-01-08T12:40:33.000Z</published>
    <updated>2019-01-15T07:44:33.644Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="http://guohuaden.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法六：K最近邻算法</title>
    <link href="http://guohuaden.com/2019/01/07/Arithmetic6-KNN/"/>
    <id>http://guohuaden.com/2019/01/07/Arithmetic6-KNN/</id>
    <published>2019-01-07T13:38:58.000Z</published>
    <updated>2019-01-15T07:43:37.612Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="http://guohuaden.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法五：迪克特斯拉算法</title>
    <link href="http://guohuaden.com/2019/01/06/Arithmetic5-Dijkstra/"/>
    <id>http://guohuaden.com/2019/01/06/Arithmetic5-Dijkstra/</id>
    <published>2019-01-06T14:38:27.000Z</published>
    <updated>2019-01-15T07:42:36.520Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="http://guohuaden.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法四：广度优先搜索和深度优先搜索</title>
    <link href="http://guohuaden.com/2019/01/05/Arithmetic4-BFSAndDFS/"/>
    <id>http://guohuaden.com/2019/01/05/Arithmetic4-BFSAndDFS/</id>
    <published>2019-01-05T13:37:34.000Z</published>
    <updated>2019-01-15T07:41:56.637Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="算法、基础算法" scheme="http://guohuaden.com/tags/%E7%AE%97%E6%B3%95%E3%80%81%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法三：动态规划</title>
    <link href="http://guohuaden.com/2019/01/03/Arithmetic3-DynamicProgramming/"/>
    <id>http://guohuaden.com/2019/01/03/Arithmetic3-DynamicProgramming/</id>
    <published>2019-01-03T13:32:21.000Z</published>
    <updated>2019-01-15T07:35:58.553Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="基础算法、算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E3%80%81%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基础算法：选择排序</title>
    <link href="http://guohuaden.com/2018/12/31/Arithmetic-Basice-SelectSort/"/>
    <id>http://guohuaden.com/2018/12/31/Arithmetic-Basice-SelectSort/</id>
    <published>2018-12-31T12:52:49.000Z</published>
    <updated>2019-01-15T07:58:28.548Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="基础算法" scheme="http://guohuaden.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="基础算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基础算法：插入排序</title>
    <link href="http://guohuaden.com/2018/12/30/Arithmetic-Basice-InsertSort/"/>
    <id>http://guohuaden.com/2018/12/30/Arithmetic-Basice-InsertSort/</id>
    <published>2018-12-30T13:10:56.000Z</published>
    <updated>2019-01-15T07:56:32.133Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="基础算法" scheme="http://guohuaden.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="基础算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法基础二：递归和for循环</title>
    <link href="http://guohuaden.com/2018/12/01/Arithmetic2-RecursionAndFor/"/>
    <id>http://guohuaden.com/2018/12/01/Arithmetic2-RecursionAndFor/</id>
    <published>2018-12-01T13:05:51.000Z</published>
    <updated>2019-01-15T07:36:13.468Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="基础算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基础算法：交换排序</title>
    <link href="http://guohuaden.com/2018/11/29/Arithmetic-Basice-ExchangeSort/"/>
    <id>http://guohuaden.com/2018/11/29/Arithmetic-Basice-ExchangeSort/</id>
    <published>2018-11-29T12:54:23.000Z</published>
    <updated>2019-01-15T07:55:49.911Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="基础算法" scheme="http://guohuaden.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="基础算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基础算法一：排序</title>
    <link href="http://guohuaden.com/2018/11/28/Arithmetic-basics/"/>
    <id>http://guohuaden.com/2018/11/28/Arithmetic-basics/</id>
    <published>2018-11-28T12:14:26.000Z</published>
    <updated>2019-01-15T07:17:41.450Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="算法" scheme="http://guohuaden.com/categories/algorithm/"/>
    
    
      <category term="基础算法" scheme="http://guohuaden.com/tags/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 七 （SDWebImageTransition）</title>
    <link href="http://guohuaden.com/2018/10/30/Read-SDWebImage-SDWebImageTransition/"/>
    <id>http://guohuaden.com/2018/10/30/Read-SDWebImage-SDWebImageTransition/</id>
    <published>2018-10-30T13:32:19.000Z</published>
    <updated>2018-11-02T08:04:14.448Z</updated>
    
    <content type="html"><![CDATA[<p>该类用于在视图类别加载图像完成后提供过渡动画。 </p><ol><li><p>在<code>UIVit + WebCache.h</code> 中的 <code>sd_imageTransition</code><br> 用于<code>UIKit(iOS和tvOS)</code>，使用<br> <code>+ [UIView transitionWithView：duration：options：animations：completion]</code> 进行过渡动画。 </p></li><li><p>对于<code>AppKit(macOS)</code><br>使用 <code>+ [NSAnimationContext runAnimationGroup：completionHandler：]</code>进行过渡动画。 我们可以调用<code>+ [NSAnimationContext currentContext]</code>来获取动画块中的上下文。 提供这些转换以用于基本用途。 </p></li></ol><ol start="3"><li>如果需要复杂的动画，可以考虑直接使用<code>Core Animation</code>或使用<code>SDWebImageAvoidAutoSetImage</code>并实现自己的后映像加载完成。<a id="more"></a></li></ol><h3 id="动画选项"><a href="#动画选项" class="headerlink" title="动画选项"></a>动画选项</h3><p>分两种情况，如果是 SD_UIKIT 类型，就直接使用系统的动画选项，否则定义的枚举类型只有一种隐式动画</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line"><span class="keyword">typedef</span> UIViewAnimationOptions SDWebImageAnimationOptions;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NS_OPTIONS</span><span class="params">(NSUInteger, SDWebImageAnimationOptions)</span> </span>&#123;</span><br><span class="line">    SDWebImageAnimationOptionAllowsImplicitAnimation = <span class="number">1</span> &lt;&lt; <span class="number">0</span>, <span class="comment">// specify `allowsImplicitAnimation` for the `NSAnimationContext`</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="三个block代码块"><a href="#三个block代码块" class="headerlink" title="三个block代码块"></a>三个block代码块</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//用于动画开始之前要执行的代码块</span><br><span class="line">typedef void (^<span class="type">SDWebImageTransitionPreparesBlock</span>)(__kindof <span class="type">UIView</span> * _Nonnull view, <span class="type">UIImage</span> * _Nullable image, <span class="type">NSData</span> * _Nullable imageData, <span class="type">SDImageCacheType</span> cacheType, <span class="type">NSURL</span> * _Nullable imageURL);</span><br><span class="line"></span><br><span class="line">//用于控制展示动画的代码块</span><br><span class="line">typedef void (^<span class="type">SDWebImageTransitionAnimationsBlock</span>)(__kindof <span class="type">UIView</span> * _Nonnull view, <span class="type">UIImage</span> * _Nullable image);</span><br><span class="line"></span><br><span class="line">//用于动画结束后要执行的代码块</span><br><span class="line">typedef void (^<span class="type">SDWebImageTransitionCompletionBlock</span>)(<span class="type">BOOL</span> finished);</span><br></pre></td></tr></table></figure><h3 id="属性声明"><a href="#属性声明" class="headerlink" title="属性声明"></a>属性声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认情况下，我们将图像设置为动画开头的视图。 您可以禁用此功能并提供自定义设置图像处理</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">BOOL</span> avoidAutoSetImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">//过渡动画的持续时间，以秒为单位。 默认为0.5。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSTimeInterval</span> duration;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用于此过渡动画（macOS）中所有动画的计时功能。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">CAMediaTimingFunction</span> *timingFunction <span class="built_in">NS_AVAILABLE_MAC</span>(<span class="number">10</span>_7);</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个动画选项</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) SDWebImageAnimationOptions animationOptions;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动画开始前所要执行的代码块</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) SDWebImageTransitionPreparesBlock prepares;</span><br><span class="line"></span><br><span class="line">动画代码块</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) SDWebImageTransitionAnimationsBlock animations;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动画结束时要执行的代码块。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) SDWebImageTransitionCompletionBlock completion;</span><br></pre></td></tr></table></figure><h3 id="Conveniences分类"><a href="#Conveniences分类" class="headerlink" title="Conveniences分类"></a>Conveniences分类</h3><p>创建过渡的便捷方式 如果需要，请记住指定持续时间。 对于UIKit，这些转换只使用对应的<code>animationOptions</code>。 默认情况下，我们启用<code>UIViewAnimationOptionAllowUserInteraction</code>以允许用户在转换期间进行交互。 对于AppKit，这些过渡在“动画”中使用了Core Animation。 因此，您的视图必须是图层支持的。 在应用之前设置<code>wantsLayer = YES</code>。</p><h4 id="公共属性和方法"><a href="#公共属性和方法" class="headerlink" title="公共属性和方法"></a>公共属性和方法</h4><p>调用不同的类属性获取不同的动画效果，如果类属性不可用，就调用类方法类获取不同的动画效果</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#if __has_feature(objc_class_property)</span></span><br><span class="line"><span class="comment">/// 淡出过渡。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *fadeTransition;</span><br><span class="line"><span class="comment">/// 从左转换翻转。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *flipFromLeftTransition;</span><br><span class="line"><span class="comment">/// 从右转换翻转。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *flipFromRightTransition;</span><br><span class="line"><span class="comment">/// 从顶部过渡翻转。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *flipFromTopTransition;</span><br><span class="line"><span class="comment">/// 从底部过渡翻转。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *flipFromBottomTransition;</span><br><span class="line"><span class="comment">/// 卷起过渡。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *curlUpTransition;</span><br><span class="line"><span class="comment">/// 向下弯曲过渡。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">class</span>, <span class="keyword">nonnull</span>, <span class="keyword">readonly</span>) SDWebImageTransition *curlDownTransition;</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)fadeTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)flipFromLeftTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)flipFromRightTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)flipFromTopTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)flipFromBottomTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)curlUpTransition;</span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)curlDownTransition;</span><br><span class="line"><span class="meta">#endif</span></span><br></pre></td></tr></table></figure><h3 id="方法实现"><a href="#方法实现" class="headerlink" title="方法实现"></a>方法实现</h3><p><code>SDWebImageTransition</code> 只有一个初始化方法，设置了动画时间为0.5秒</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">SDWebImageTransition</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.duration = <span class="number">0.5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>SDWebImageTransition 分类中创建了不同的动画,这里区别了SD_UIKIT 和 其他。（即iOS 、tvOS、部分watchOS ）</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">+ (SDWebImageTransition *)fadeTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionCrossDissolve | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionFade;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)flipFromLeftTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionFlipFromLeft | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionPush;</span><br><span class="line">        trans.subtype = kCATransitionFromLeft;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)flipFromRightTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionFlipFromRight | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionPush;</span><br><span class="line">        trans.subtype = kCATransitionFromRight;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)flipFromTopTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionFlipFromTop | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionPush;</span><br><span class="line">        trans.subtype = kCATransitionFromTop;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)flipFromBottomTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionFlipFromBottom | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionPush;</span><br><span class="line">        trans.subtype = kCATransitionFromBottom;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)curlUpTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionCurlUp | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionReveal;</span><br><span class="line">        trans.subtype = kCATransitionFromTop;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (SDWebImageTransition *)curlDownTransition &#123;</span><br><span class="line">    SDWebImageTransition *transition = [SDWebImageTransition new];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT</span></span><br><span class="line">    transition.animationOptions = UIViewAnimationOptionTransitionCurlDown | UIViewAnimationOptionAllowUserInteraction;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    transition.animations = ^(<span class="variable">__kindof</span> NSView * <span class="variable">_Nonnull</span> view, NSImage * <span class="variable">_Nullable</span> <span class="built_in">image</span>) &#123;</span><br><span class="line">        CATransition *trans = [CATransition animation];</span><br><span class="line">        trans.<span class="built_in">type</span> = kCATransitionReveal;</span><br><span class="line">        trans.subtype = kCATransitionFromBottom;</span><br><span class="line">        [view.layer addAnimation:trans forKey:kCATransition];</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    return transition;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;该类用于在视图类别加载图像完成后提供过渡动画。 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;UIVit + WebCache.h&lt;/code&gt; 中的 &lt;code&gt;sd_imageTransition&lt;/code&gt;&lt;br&gt; 用于&lt;code&gt;UIKit(iOS和tvOS)&lt;/code&gt;，使用&lt;br&gt; &lt;code&gt;+ [UIView transitionWithView：duration：options：animations：completion]&lt;/code&gt; 进行过渡动画。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于&lt;code&gt;AppKit(macOS)&lt;/code&gt;&lt;br&gt;使用 &lt;code&gt;+ [NSAnimationContext runAnimationGroup：completionHandler：]&lt;/code&gt;进行过渡动画。 我们可以调用&lt;code&gt;+ [NSAnimationContext currentContext]&lt;/code&gt;来获取动画块中的上下文。 提供这些转换以用于基本用途。 &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;如果需要复杂的动画，可以考虑直接使用&lt;code&gt;Core Animation&lt;/code&gt;或使用&lt;code&gt;SDWebImageAvoidAutoSetImage&lt;/code&gt;并实现自己的后映像加载完成。
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 六 （SDWebImagePrefetcher）</title>
    <link href="http://guohuaden.com/2018/10/27/Read-SDWebImage-SDWebImagePrefetcher/"/>
    <id>http://guohuaden.com/2018/10/27/Read-SDWebImage-SDWebImagePrefetcher/</id>
    <published>2018-10-27T14:32:36.000Z</published>
    <updated>2018-11-02T08:04:38.551Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImagePrefetcher</code> 预先下载（预加载）图片，以方便后续使用，主要是用于部分图片需要先行下载并存储的情况。预先取出缓存中的一些URLs以供将来使用。 图像以低优先级下载。</p><p><code>SDWebImagePrefetcher</code> 设计了两种回调方式：</p><ol><li><p><code>SDWebImagePrefetcherDelegate</code><br>用来处理每一个预下载完成的回调，以及所有下载完成的回调 </p></li><li><p><code>block</code><br>用来处理整体进度的回调，返回的是下载完成的数量和总数量等</p></li></ol><a id="more"></a><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@protocol</span> SDWebImagePrefetcherDelegate &lt;NSObject&gt;</span><br><span class="line"></span><br><span class="line"><span class="variable">@optional</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在预加载图片时调用。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param imagePrefetcher 当前图片预加载类</span></span><br><span class="line"><span class="comment"> * @param imageURL       预加载的图片网址</span></span><br><span class="line"><span class="comment"> * @param finishedCount   预加载的图片总数（成功与否）</span></span><br><span class="line"><span class="comment"> * @param totalCount      预加载的图片总数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)<span class="attribute">imagePrefetcher</span>:(nonnull SDWebImagePrefetcher *)imagePrefetcher <span class="attribute">didPrefetchURL</span>:(nullable NSURL *)imageURL <span class="attribute">finishedCount</span>:(NSUInteger)finishedCount <span class="attribute">totalCount</span>:(NSUInteger)totalCount;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在预加载所有图像时调用。</span></span><br><span class="line"><span class="comment"> * @param imagePrefetcher 当前图片的预加载类</span></span><br><span class="line"><span class="comment"> * @param totalCount      预加载的图片总数（无论是否成功）</span></span><br><span class="line"><span class="comment"> * @param skippedCount    跳过的图片总数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-</span> (void)<span class="selector-tag">imagePrefetcher</span><span class="selector-pseudo">:(nonnull</span> <span class="selector-tag">SDWebImagePrefetcher</span> *)<span class="selector-tag">imagePrefetcher</span> <span class="selector-tag">didFinishWithTotalCount</span><span class="selector-pseudo">:(NSUInteger)totalCount</span> <span class="selector-tag">skippedCount</span><span class="selector-pseudo">:(NSUInteger)skippedCount</span>;</span><br><span class="line"></span><br><span class="line">@<span class="selector-tag">end</span></span><br></pre></td></tr></table></figure><h3 id="两个block代码块"><a href="#两个block代码块" class="headerlink" title="两个block代码块"></a>两个block代码块</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 预加载进度block</span><br><span class="line"> @param noOfFinishedUrls 已经完成的数量，无论成功失败</span><br><span class="line"> @param noOfTotalUrls    总数量</span><br><span class="line"> */</span><br><span class="line">typedef void(^<span class="type">SDWebImagePrefetcherProgressBlock</span>)(<span class="type">NSUInteger</span> noOfFinishedUrls, <span class="type">NSUInteger</span> noOfTotalUrls);</span><br><span class="line">/**</span><br><span class="line"> 预加载完成block</span><br><span class="line"></span><br><span class="line"> @param noOfFinishedUrls 已经完成的数量，无论成功失败</span><br><span class="line"> @param noOfSkippedUrls  跳过的数量</span><br><span class="line"> */</span><br><span class="line">typedef void(^<span class="type">SDWebImagePrefetcherCompletionBlock</span>)(<span class="type">NSUInteger</span> noOfFinishedUrls, <span class="type">NSUInteger</span> noOfSkippedUrls);</span><br></pre></td></tr></table></figure><h3 id="属性声明"><a href="#属性声明" class="headerlink" title="属性声明"></a>属性声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 网络图片管理器,只读</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nonnull</span>) SDWebImageManager *manager;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *同时预加载的最大URL数。 默认为3。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSUInteger</span> maxConcurrentDownloads;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 预加载的SDWebImageOptions选项。 默认为SDWebImageLowPriority。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) SDWebImageOptions options;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prefetcher的队列选项。 默认为主队列。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">dispatch_queue_t</span> prefetcherQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">//协议</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="keyword">id</span> &lt;SDWebImagePrefetcherDelegate&gt; delegate;</span><br></pre></td></tr></table></figure><h3 id="方法声明"><a href="#方法声明" class="headerlink" title="方法声明"></a>方法声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回全局图像预加载实例。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedImagePrefetcher;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 允许您使用任意图像管理器实例化预加载类。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithImageManager:(<span class="keyword">nonnull</span> SDWebImageManager *)manager <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分配URL列表以让SDWebImagePrefetcher对预加载进行排队</span></span><br><span class="line"><span class="comment"> * 目前一次下载一张图片，并跳过下载失败的图像，然后进入列表中的下一个图像。任何先前运行的预加载操作都将被取消。</span></span><br><span class="line"><span class="comment"> * @param urls 预加载的URL列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)prefetchURLs:(<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSURL</span> *&gt; *)urls;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分配URL列表以让SDWebImagePrefetcher对预加载进行排队，目前一次下载一张图片，并跳过下载失败的图像，然后进入列表中的下一个图像。任何先前运行的预加载操作都将被取消。</span></span><br><span class="line"><span class="comment"> * currently one image is downloaded at a time,</span></span><br><span class="line"><span class="comment"> * and skips images for failed downloads and proceed to the next image in the list.</span></span><br><span class="line"><span class="comment"> * Any previously-running prefetch operations are canceled.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param urls           预加载的URL列表</span></span><br><span class="line"><span class="comment"> * @param progressBlock   block块在进度更新时被调用;</span></span><br><span class="line"><span class="comment"> *                        第一个参数是已完成（成功或未成功）请求的数量，</span></span><br><span class="line"><span class="comment"> *                        第二个参数是最初请求预加载的图像总数</span></span><br><span class="line"><span class="comment"> * @param completionBlock Block块在预加载完成时被调用</span></span><br><span class="line"><span class="comment"> *                       第一个参数是已完成（成功或未成功）请求的数量，</span></span><br><span class="line"><span class="comment"> *                        第二个参数是跳过的请求数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)prefetchURLs:(<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSURL</span> *&gt; *)urls</span><br><span class="line">            progress:(<span class="keyword">nullable</span> SDWebImagePrefetcherProgressBlock)progressBlock</span><br><span class="line">           completed:(<span class="keyword">nullable</span> SDWebImagePrefetcherCompletionBlock)completionBlock;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除并取消排队列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)cancelPrefetching;</span><br></pre></td></tr></table></figure><h3 id="私有属性声明"><a href="#私有属性声明" class="headerlink" title="私有属性声明"></a>私有属性声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.h文件manager管理器声明为只读，这里声明为读写类型。实现外部只能访问，内部可读写。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) SDWebImageManager *manager;</span><br><span class="line"><span class="comment">//可以从不同的队列访问</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, atomic, <span class="keyword">nullable</span>) <span class="built_in">NSArray</span>&lt;<span class="built_in">NSURL</span> *&gt; *prefetchURLs; </span><br><span class="line"></span><br><span class="line"><span class="comment">//已请求的数量</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSUInteger</span> requestedCount;</span><br><span class="line"><span class="comment">//已跳过的数量</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSUInteger</span> skippedCount;</span><br><span class="line"><span class="comment">//已完成的数量</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSUInteger</span> finishedCount;</span><br><span class="line"><span class="comment">//已开始的时间</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSTimeInterval</span> startedTime;</span><br><span class="line"><span class="comment">//预加载图片完成代码块</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) SDWebImagePrefetcherCompletionBlock completionBlock;</span><br><span class="line"><span class="comment">//预加载图片进度代码块</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) SDWebImagePrefetcherProgressBlock progressBlock;</span><br></pre></td></tr></table></figure><h3 id="方法实现"><a href="#方法实现" class="headerlink" title="方法实现"></a>方法实现</h3><p>初始化</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedImagePrefetcher &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> once;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> instance;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;once, ^&#123;</span><br><span class="line">        instance = [<span class="keyword">self</span> new];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> initWithImageManager:[SDWebImageManager new]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithImageManager:(SDWebImageManager *)manager &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span> = [<span class="keyword">super</span> init])) &#123;</span><br><span class="line">        <span class="comment">//图片管理器</span></span><br><span class="line">        _manager = manager;</span><br><span class="line">        </span><br><span class="line">        预加载的SDWebImageOptions选项。 默认为SDWebImageLowPriority。</span><br><span class="line">        _options = SDWebImageLowPriority;</span><br><span class="line">        <span class="comment">//Prefetcher的队列选项。 默认为主队列。</span></span><br><span class="line">        _prefetcherQueue = dispatch_get_main_queue();</span><br><span class="line">        <span class="comment">//同时预加载的最大URL数。 默认为3。</span></span><br><span class="line">        <span class="keyword">self</span>.maxConcurrentDownloads = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性get和set方法</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//同时预加载的最大数的<span class="built_in">set</span>方法</span><br><span class="line">- (void)<span class="built_in">set</span>MaxConcurrentDownloads:(NSUInteger)<span class="keyword">max</span>ConcurrentDownloads &#123;</span><br><span class="line">    <span class="literal">self</span>.manager.imageDownloader.<span class="keyword">max</span>ConcurrentDownloads = <span class="keyword">max</span>ConcurrentDownloads;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//同时预加载的最大数的get方法</span><br><span class="line">- (NSUInteger)<span class="keyword">max</span>ConcurrentDownloads &#123;</span><br><span class="line">    return <span class="literal">self</span>.manager.imageDownloader.<span class="keyword">max</span>ConcurrentDownloads;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>预加载图片实现方法</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)startPrefetchingAtIndex:(<span class="built_in">NSUInteger</span>)index &#123;</span><br><span class="line">    <span class="comment">//创建临时变量，用于存储当前的URL</span></span><br><span class="line">    <span class="built_in">NSURL</span> *currentURL;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//同步锁，判断index是否越界，如果越界就返回，否则获取当前的URL，赋值给临时变量currentURL，已请求的数量+1</span></span><br><span class="line">    <span class="keyword">@synchronized</span>(<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="keyword">self</span>.prefetchURLs.count) <span class="keyword">return</span>;</span><br><span class="line">        currentURL = <span class="keyword">self</span>.prefetchURLs[index];</span><br><span class="line">        <span class="keyword">self</span>.requestedCount++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//图片管理器加载当前URL的图片</span></span><br><span class="line">    [<span class="keyword">self</span>.manager loadImageWithURL:currentURL options:<span class="keyword">self</span>.options progress:<span class="literal">nil</span> completed:^(<span class="built_in">UIImage</span> *image, <span class="built_in">NSData</span> *data, <span class="built_in">NSError</span> *error, SDImageCacheType cacheType, <span class="built_in">BOOL</span> finished, <span class="built_in">NSURL</span> *imageURL) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果已经完成，返回</span></span><br><span class="line">        <span class="keyword">if</span> (!finished) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//完成的记数+1</span></span><br><span class="line">        <span class="keyword">self</span>.finishedCount++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果需要过程回调，执行过程回调操作</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.progressBlock) &#123;</span><br><span class="line">            <span class="keyword">self</span>.progressBlock(<span class="keyword">self</span>.finishedCount,(<span class="keyword">self</span>.prefetchURLs).count);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果图片不存在，跳过的记数+1</span></span><br><span class="line">        <span class="keyword">if</span> (!image) &#123;</span><br><span class="line">            <span class="comment">// Add last failed</span></span><br><span class="line">            <span class="keyword">self</span>.skippedCount++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果delegate存在，执行delegate方法</span></span><br><span class="line">        <span class="keyword">if</span> ([<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(imagePrefetcher:didPrefetchURL:finishedCount:totalCount:)]) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.delegate imagePrefetcher:<span class="keyword">self</span></span><br><span class="line">                            didPrefetchURL:currentURL</span><br><span class="line">                             finishedCount:<span class="keyword">self</span>.finishedCount</span><br><span class="line">                                totalCount:<span class="keyword">self</span>.prefetchURLs.count</span><br><span class="line">             ];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果预下载的URLs数量大于已经下载的数量，就说明还有没下载完的任务，继续下载下一个。（这里是使用的递归方法）</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.prefetchURLs.count &gt; <span class="keyword">self</span>.requestedCount) &#123;</span><br><span class="line">            <span class="built_in">dispatch_async</span>(<span class="keyword">self</span>.prefetcherQueue, ^&#123;</span><br><span class="line">                <span class="comment">// 我们需要调度来避免函数递归调用。 即使对于巨大的URL列表，这也可以防止堆栈溢出</span></span><br><span class="line">                [<span class="keyword">self</span> startPrefetchingAtIndex:<span class="keyword">self</span>.requestedCount];</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.finishedCount == <span class="keyword">self</span>.requestedCount) &#123; <span class="comment">//如果预下载的URLs数量等于已经下载的数量，说明已经下载完。</span></span><br><span class="line">        </span><br><span class="line">            <span class="comment">//执行预加载完成的delegate方法。</span></span><br><span class="line">            [<span class="keyword">self</span> reportStatus];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//如果有需要，执行完成block回调</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.completionBlock) &#123;</span><br><span class="line">                <span class="keyword">self</span>.completionBlock(<span class="keyword">self</span>.finishedCount, <span class="keyword">self</span>.skippedCount);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//将self.completionBlock 置空</span></span><br><span class="line">                <span class="keyword">self</span>.completionBlock = <span class="literal">nil</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将self.progressBlock 置空</span></span><br><span class="line">            <span class="keyword">self</span>.progressBlock = <span class="literal">nil</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//预加载完成状态的delegate方法</span></span><br><span class="line">- (<span class="keyword">void</span>)reportStatus &#123;</span><br><span class="line">    <span class="built_in">NSUInteger</span> total = (<span class="keyword">self</span>.prefetchURLs).count;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(imagePrefetcher:didFinishWithTotalCount:skippedCount:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate imagePrefetcher:<span class="keyword">self</span></span><br><span class="line">               didFinishWithTotalCount:(total - <span class="keyword">self</span>.skippedCount)</span><br><span class="line">                          skippedCount:<span class="keyword">self</span>.skippedCount</span><br><span class="line">         ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分配URL列表使得SDWebImagePrefetcher来安排预加载队列，当前同一时间下载一张图片，忽略下载时间的图片并继续执行列表中的下一张图片。任何之前执行的预加载操作都会被取消。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//urls：预加载的URL列表。</span></span><br><span class="line">- (<span class="keyword">void</span>)prefetchURLs:(<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSURL</span> *&gt; *)urls &#123;</span><br><span class="line">    [<span class="keyword">self</span> prefetchURLs:urls progress:<span class="literal">nil</span> completed:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)prefetchURLs:(<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSURL</span> *&gt; *)urls</span><br><span class="line">            progress:(<span class="keyword">nullable</span> SDWebImagePrefetcherProgressBlock)progressBlock</span><br><span class="line">           completed:(<span class="keyword">nullable</span> SDWebImagePrefetcherCompletionBlock)completionBlock &#123;</span><br><span class="line">    <span class="comment">//防止重复的预加载请求</span></span><br><span class="line">    [<span class="keyword">self</span> cancelPrefetching]; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//CFAbsoluteTimeGetCurrent() 返回网络时间同步的时钟时间</span></span><br><span class="line">    <span class="keyword">self</span>.startedTime = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//预加载的URL列表</span></span><br><span class="line">    <span class="keyword">self</span>.prefetchURLs = urls;</span><br><span class="line">    </span><br><span class="line">    代码块</span><br><span class="line">    <span class="keyword">self</span>.completionBlock = completionBlock;</span><br><span class="line">    <span class="keyword">self</span>.progressBlock = progressBlock;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果预加载的URL列表为空，直接回调完成代码块，没有完成的urls和没有跳过的urls都传0</span></span><br><span class="line">    <span class="keyword">if</span> (urls.count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (completionBlock) &#123;</span><br><span class="line">            completionBlock(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 从具有最大允许并发性的列表中的第一个图像开始预加载，然后执行预加载操作</span></span><br><span class="line">        <span class="built_in">NSUInteger</span> listCount = <span class="keyword">self</span>.prefetchURLs.count;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSUInteger</span> i = <span class="number">0</span>; i &lt; <span class="keyword">self</span>.maxConcurrentDownloads &amp;&amp; <span class="keyword">self</span>.requestedCount &lt; listCount; i++) &#123;</span><br><span class="line">            [<span class="keyword">self</span> startPrefetchingAtIndex:i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>防止重复的预加载请求</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)cancelPrefetching &#123;</span><br><span class="line">    <span class="keyword">@synchronized</span>(<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.prefetchURLs = <span class="literal">nil</span>;</span><br><span class="line">        <span class="keyword">self</span>.skippedCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">self</span>.requestedCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">self</span>.finishedCount = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.manager cancelAll];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImagePrefetcher&lt;/code&gt; 预先下载（预加载）图片，以方便后续使用，主要是用于部分图片需要先行下载并存储的情况。预先取出缓存中的一些URLs以供将来使用。 图像以低优先级下载。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SDWebImagePrefetcher&lt;/code&gt; 设计了两种回调方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SDWebImagePrefetcherDelegate&lt;/code&gt;&lt;br&gt;用来处理每一个预下载完成的回调，以及所有下载完成的回调 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;block&lt;/code&gt;&lt;br&gt;用来处理整体进度的回调，返回的是下载完成的数量和总数量等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 六（编码器五：SDWebImageGIFCoder）</title>
    <link href="http://guohuaden.com/2018/10/24/Read-SDWebImage-SDWebImageGIFCoder/"/>
    <id>http://guohuaden.com/2018/10/24/Read-SDWebImage-SDWebImageGIFCoder/</id>
    <published>2018-10-24T14:31:13.000Z</published>
    <updated>2018-10-30T07:54:59.419Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（<code>SDWebImageCodersManager</code>）、编解码协议（<code>SDWebImageCoder</code> 和 <code>SDWebImageProgressiveCoder</code> ）、PNG/JPEG/TIFF编解码，解压缩，显示大图（<code>SDWebImageImageIOCoder</code>）、GIF编解码（<code>SDWebImageGIFCoder</code>）、WebP编解码（<code>SDWebImageWebPCoder</code>）以及辅助类（<code>SDWebImageCoderHelper</code>）。</p><p><code>SDWebImageImageIOCoder</code> ：内置编码器,该类遵守了 <code>SDWebImageCoder</code>协议，但并没有遵守 <code>SDWebImageProgressiveCoder</code>协议，说明该类仅针对git图片的编解码，并不支持git图片的逐行解码功能。<a id="more"></a></p><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>判断图片格式是否支持编码，该类仅针对动图的操作，所以仅判断图片的格式是否为GIF格式，如果是返回YES，否则返回NO</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">BOOL</span>)canEncodeToFormat:(SDImageFormat)<span class="keyword">format</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">format</span> == SDImageFormatGIF);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据给定的图片格式将图片进行编码</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSData</span> *)encodedDataWithImage:(<span class="built_in">UIImage</span> *)image format:(SDImageFormat)format &#123;</span><br><span class="line">    <span class="comment">//如果image不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!image) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//该类只支持动图的编解码，如果image的格式不是GIF，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (format != SDImageFormatGIF) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//临时变量imageData，用来保存图片数据</span></span><br><span class="line">    <span class="built_in">NSMutableData</span> *imageData = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">    <span class="comment">// 获取GIF图像格式的CFStringRef格式字符串</span></span><br><span class="line">    <span class="built_in">CFStringRef</span> imageUTType = [<span class="built_in">NSData</span> sd_UTTypeFromSDImageFormat:SDImageFormatGIF];</span><br><span class="line">    <span class="comment">// 生成图片对象的SDWebImageFrame类型元素的数组</span></span><br><span class="line">    <span class="built_in">NSArray</span>&lt;SDWebImageFrame *&gt; *frames = [SDWebImageCoderHelper framesFromAnimatedImage:image];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建图像目标。 GIF不支持EXIF图像方向</span></span><br><span class="line">    <span class="built_in">CGImageDestinationRef</span> imageDestination = <span class="built_in">CGImageDestinationCreateWithData</span>((__bridge <span class="built_in">CFMutableDataRef</span>)imageData, imageUTType, frames.count, <span class="literal">NULL</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果创建失败，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!imageDestination) &#123;</span><br><span class="line">        <span class="comment">// Handle failure.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (frames.count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 用于静态单个GIF图片（如果是单帧的动图就直接将图片添加到imageDestination中）</span></span><br><span class="line">        <span class="built_in">CGImageDestinationAddImage</span>(imageDestination, image.CGImage, <span class="literal">nil</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 用于动画的GIF图片</span></span><br><span class="line">        <span class="comment">//// 获取到动图的循环次数</span></span><br><span class="line">        <span class="built_in">NSUInteger</span> loopCount = image.sd_imageLoopCount;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建一个动图属性字典保存循环次数</span></span><br><span class="line">        <span class="built_in">NSDictionary</span> *gifProperties = @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDictionary: @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFLoopCount : @(loopCount)&#125;&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 为图像目标设置属性</span></span><br><span class="line">        <span class="built_in">CGImageDestinationSetProperties</span>(imageDestination, (__bridge <span class="built_in">CFDictionaryRef</span>)gifProperties);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//循环每一帧的图拼啊</span></span><br><span class="line">        <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; frames.count; i++) &#123;</span><br><span class="line">             <span class="comment">// 获取SDWebImageFrame对象</span></span><br><span class="line">            SDWebImageFrame *frame = frames[i];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//获取没一帧的显示时间</span></span><br><span class="line">            <span class="keyword">float</span> frameDuration = frame.duration;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//获取每一帧取位图图片</span></span><br><span class="line">            <span class="built_in">CGImageRef</span> frameImageRef = frame.image.CGImage;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 创建一个临时变量字典保存每一帧的展示时间</span></span><br><span class="line">            <span class="built_in">NSDictionary</span> *frameProperties = @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDictionary : @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDelayTime : @(frameDuration)&#125;&#125;;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 将位图和其对应的属性添加到imageDestination中</span></span><br><span class="line">            <span class="built_in">CGImageDestinationAddImage</span>(imageDestination, frameImageRef, (__bridge <span class="built_in">CFDictionaryRef</span>)frameProperties);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果编码失败就返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">CGImageDestinationFinalize</span>(imageDestination) == <span class="literal">NO</span>) &#123;</span><br><span class="line">       </span><br><span class="line">        imageData = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放imageDestination对象</span></span><br><span class="line">    <span class="built_in">CFRelease</span>(imageDestination);</span><br><span class="line">    </span><br><span class="line">    返回图片数据</span><br><span class="line">    <span class="keyword">return</span> [imageData <span class="keyword">copy</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h3><p>判断是否支持图片数据的解码<br>该类仅针对动图的操作，所以仅判断图片的格式是否为GIF格式，如果是支持该图片数据解码，否则返回NO</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="type">BOOL</span>)canDecodeFromData:(nullable <span class="type">NSData</span> *)<span class="class"><span class="keyword">data</span> &#123;</span></span><br><span class="line"><span class="class">    <span class="title">return</span> ([<span class="type">NSData</span> <span class="title">sd_imageFormatForImageData</span>:<span class="title">data</span>] == <span class="type">SDImageFormatGIF</span>);</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure><p>将图片数据解码为图片</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIImage</span> *)decodedImageWithData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    <span class="comment">//如果数据为空，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!data) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#if SD_MAC</span></span><br><span class="line">    SDAnimatedImageRep *imageRep = [[SDAnimatedImageRep alloc] initWithData:data];</span><br><span class="line">    <span class="built_in">NSImage</span> *animatedImage = [[<span class="built_in">NSImage</span> alloc] initWithSize:imageRep.size];</span><br><span class="line">    [animatedImage addRepresentation:imageRep];</span><br><span class="line">    <span class="keyword">return</span> animatedImage;</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line">     <span class="comment">// 生成图片源</span></span><br><span class="line">    <span class="built_in">CGImageSourceRef</span> source = <span class="built_in">CGImageSourceCreateWithData</span>((__bridge <span class="built_in">CFDataRef</span>)data, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">//如果图片源不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!source) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取子图片数量</span></span><br><span class="line">    size_t count = <span class="built_in">CGImageSourceGetCount</span>(source);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建临时变量，用来保存动图对象</span></span><br><span class="line">    <span class="built_in">UIImage</span> *animatedImage;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果子图片个数不大于2，直接将数据转化成图片</span></span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        animatedImage = [[<span class="built_in">UIImage</span> alloc] initWithData:data];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 创建可变数组保存SDWebImageFrame对象</span></span><br><span class="line">        <span class="built_in">NSMutableArray</span>&lt;SDWebImageFrame *&gt; *frames = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历子图片对象，并将其包装成SDWebImageFrame对象</span></span><br><span class="line">        <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            <span class="comment">// 获取指定帧数的相位图</span></span><br><span class="line">            <span class="built_in">CGImageRef</span> imageRef = <span class="built_in">CGImageSourceCreateImageAtIndex</span>(source, i, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="comment">// 如果没获取到就跳过进入下次循环</span></span><br><span class="line">            <span class="keyword">if</span> (!imageRef) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 获取指定帧数的持续时间</span></span><br><span class="line">            <span class="keyword">float</span> duration = [<span class="keyword">self</span> sd_frameDurationAtIndex:i source:source];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 根据相位图生成图片对象</span></span><br><span class="line">            <span class="built_in">UIImage</span> *image = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:imageRef];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 释放相位图</span></span><br><span class="line">            <span class="built_in">CGImageRelease</span>(imageRef);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 将一帧的信息封装成SDWebImageFrame对象</span></span><br><span class="line">            SDWebImageFrame *frame = [SDWebImageFrame frameWithImage:image duration:duration];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 将封装好的SDWebImageFrame对象添加到数组中保存</span></span><br><span class="line">            [frames addObject:frame];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建临时变量，用来保存循环次数</span></span><br><span class="line">        <span class="built_in">NSUInteger</span> loopCount = <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取到图片属性</span></span><br><span class="line">        <span class="built_in">NSDictionary</span> *imageProperties = (__bridge_transfer <span class="built_in">NSDictionary</span> *)<span class="built_in">CGImageSourceCopyProperties</span>(source, <span class="literal">nil</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取到GIF相关的图像属性</span></span><br><span class="line">        <span class="built_in">NSDictionary</span> *gifProperties = [imageProperties valueForKey:(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDictionary];</span><br><span class="line">        </span><br><span class="line">        如果gifProperties存在</span><br><span class="line">        <span class="keyword">if</span> (gifProperties) &#123;</span><br><span class="line">            <span class="comment">//获取GIF循环次数</span></span><br><span class="line">            <span class="built_in">NSNumber</span> *gifLoopCount = [gifProperties valueForKey:(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFLoopCount];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//如果可以转换成NSNumber类型，就将获取到的GIF循环次数赋值给loopCount</span></span><br><span class="line">            <span class="keyword">if</span> (gifLoopCount != <span class="literal">nil</span>) &#123;</span><br><span class="line">                loopCount = gifLoopCount.unsignedIntegerValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 利用封装好的SDWebImageFrame对象数组生成动图对象</span></span><br><span class="line">        animatedImage = [SDWebImageCoderHelper animatedImageWithFrames:frames];</span><br><span class="line">        <span class="comment">// 设置动图对象的循环次数</span></span><br><span class="line">        animatedImage.sd_imageLoopCount = loopCount;</span><br><span class="line">        <span class="comment">//设置动图的图片格式</span></span><br><span class="line">        animatedImage.sd_imageFormat = SDImageFormatGIF;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//释放图片源source</span></span><br><span class="line">    <span class="built_in">CFRelease</span>(source);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回动图</span></span><br><span class="line">    <span class="keyword">return</span> animatedImage;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果执行动图的解压操作，就直接返回该图片，动图不支持解压</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIImage</span> *)decompressedImageWithImage:(<span class="built_in">UIImage</span> *)image</span><br><span class="line">                                   data:(<span class="built_in">NSData</span> *__autoreleasing  _Nullable *)data</span><br><span class="line">                                options:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span>*, <span class="built_in">NSObject</span>*&gt;*)optionsDict &#123;</span><br><span class="line">    <span class="comment">// GIF do not decompress</span></span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h3><p>获取动图每一帧的显示时间</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">float</span>)sd_frameDurationAtIndex:(<span class="built_in">NSUInteger</span>)index source:(<span class="built_in">CGImageSourceRef</span>)source &#123;</span><br><span class="line">    <span class="comment">//临时变量每一帧的显示时间，默认为0.1f</span></span><br><span class="line">    <span class="keyword">float</span> frameDuration = <span class="number">0.1</span>f;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取图片源中指定位置的图片属性</span></span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> cfFrameProperties = <span class="built_in">CGImageSourceCopyPropertiesAtIndex</span>(source, index, <span class="literal">nil</span>);</span><br><span class="line">    <span class="comment">//如果获取失败，就返回默认每一帧的显示时间</span></span><br><span class="line">    <span class="keyword">if</span> (!cfFrameProperties) &#123;</span><br><span class="line">        <span class="keyword">return</span> frameDuration;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    获取图片属性字典</span><br><span class="line">    <span class="built_in">NSDictionary</span> *frameProperties = (__bridge <span class="built_in">NSDictionary</span> *)cfFrameProperties;</span><br><span class="line">    <span class="comment">//从图片属性中获取gif属性字典</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *gifProperties = frameProperties[(<span class="built_in">NSString</span> *)kCGImagePropertyGIFDictionary];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//从git属性中获取当前帧的显示时间</span></span><br><span class="line">    <span class="built_in">NSNumber</span> *delayTimeUnclampedProp = gifProperties[(<span class="built_in">NSString</span> *)kCGImagePropertyGIFUnclampedDelayTime];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果当前帧的显示时间不为nil，赋值给frameDuration</span></span><br><span class="line">    <span class="keyword">if</span> (delayTimeUnclampedProp != <span class="literal">nil</span>) &#123;</span><br><span class="line">        frameDuration = [delayTimeUnclampedProp floatValue];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果通过key：kCGImagePropertyGIFUnclampedDelayTime 从gifProperties字典中获取不到当前帧的显示时间，则通过另一个key：kCGImagePropertyGIFDelayTime获取</span></span><br><span class="line">        <span class="built_in">NSNumber</span> *delayTimeProp = gifProperties[(<span class="built_in">NSString</span> *)kCGImagePropertyGIFDelayTime];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果不为空，赋值给赋值给frameDuration</span></span><br><span class="line">        <span class="keyword">if</span> (delayTimeProp != <span class="literal">nil</span>) &#123;</span><br><span class="line">            frameDuration = [delayTimeProp floatValue];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//许多烦人的广告指定0持续时间，以使图像尽快闪现。 我们遵循Firefox的行为，并为指定持续时间&lt;= 10 ms的任何帧使用100 ms的持续时间。</span></span><br><span class="line">    </span><br><span class="line">    如果当前帧显示的时间实现小于<span class="number">11</span>ms，就重新设置为<span class="number">100</span>ms</span><br><span class="line">    <span class="keyword">if</span> (frameDuration &lt; <span class="number">0.011</span>f) &#123;</span><br><span class="line">        frameDuration = <span class="number">0.100</span>f;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//释放cfFrameProperties</span></span><br><span class="line">    <span class="built_in">CFRelease</span>(cfFrameProperties);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回当前帧显示时间</span></span><br><span class="line">    <span class="keyword">return</span> frameDuration;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;）、编解码协议（&lt;code&gt;SDWebImageCoder&lt;/code&gt; 和 &lt;code&gt;SDWebImageProgressiveCoder&lt;/code&gt; ）、PNG/JPEG/TIFF编解码，解压缩，显示大图（&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;）、GIF编解码（&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;）、WebP编解码（&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;）以及辅助类（&lt;code&gt;SDWebImageCoderHelper&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt; ：内置编码器,该类遵守了 &lt;code&gt;SDWebImageCoder&lt;/code&gt;协议，但并没有遵守 &lt;code&gt;SDWebImageProgressiveCoder&lt;/code&gt;协议，说明该类仅针对git图片的编解码，并不支持git图片的逐行解码功能。
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 六 （编码器四：SDWebImageImageIOCoder）</title>
    <link href="http://guohuaden.com/2018/10/23/Read-SDWebImage-SDWebImageImageIOCoder/"/>
    <id>http://guohuaden.com/2018/10/23/Read-SDWebImage-SDWebImageImageIOCoder/</id>
    <published>2018-10-23T13:57:30.000Z</published>
    <updated>2018-10-30T02:50:13.633Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（<code>SDWebImageCodersManager</code>）、编解码协议（<code>SDWebImageCoder</code>）、PNG/JPEG/TIFF编解码，解压缩，显示大图（<code>SDWebImageImageIOCoder</code>）、GIF编解码（<code>SDWebImageGIFCoder</code>）、WebP编解码（<code>SDWebImageWebPCoder</code>）以及辅助类（<code>SDWebImageCoderHelper</code>）</p><p><code>SDWebImageImageIOCoder</code> ：内置编码器，支持PNG，JPEG，TIFF，支持逐行解码。该类遵守 <code>SDWebImageProgressiveCoder</code>协议。该协议也遵守<code>SDWebImageCoder</code>协议，所以这个类要实现这两个协议的方法。</p><p>  GIF<br>  还支持静态GIF（意思是只处理第一帧）。<br>  要获得完整的GIF支持，我们建议使用<code>FLAnimatedImage</code>或性能较差的<code>SDWebImageGIFCoder</code></p><p>  HEIC<br>  该编码器还支持HEIC格式，因为ImageIO本身支持它。但这取决于系统功能，因此无法在所有设备上运行。<a id="more"></a></p><h3 id="私有静态常量"><a href="#私有静态常量" class="headerlink" title="私有静态常量"></a>私有静态常量</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//每像素字节数为4</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> size_t kBytesPerPixel = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//每位字节数为8</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> size_t kBitsPerComponent = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  *设置标志“SDWebImageScaleDownLargeImages”时，解码图像的最大大小（以MB为单位）</span></span><br><span class="line"><span class="comment">  * iPad1和iPhone 3GS的建议值：60。</span></span><br><span class="line"><span class="comment">  * iPad2和iPhone 4的建议值：120。</span></span><br><span class="line"><span class="comment">  * iPhone 3G和iPod 2及早期设备的建议值：30。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kDestImageSizeMB = <span class="number">60.0</span>f;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *当设置标志“SDWebImageScaleDownLargeImages”时，定义用于解码图像的图块的最大大小（以MB为单位）</span></span><br><span class="line"><span class="comment"> * iPad1和iPhone 3GS的建议值：20。</span></span><br><span class="line"><span class="comment"> * iPad2和iPhone 4的建议值：40。</span></span><br><span class="line"><span class="comment"> * iPhone 3G和iPod 2及早期设备的建议值：10。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kSourceImageTileSizeMB = <span class="number">20.0</span>f;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义 1M = 1024.0f * 1024.0f</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kBytesPerMB = <span class="number">1024.0</span>f * <span class="number">1024.0</span>f;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义1MB的像素数是1MB的Bytes数量除以1像素的Bytes数</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kPixelsPerMB = kBytesPerMB / kBytesPerPixel;</span><br><span class="line"><span class="comment">//定义解码完的图像的最大像素总数数是解码完的图像最size乘以1MB的像素数</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kDestTotalPixels = kDestImageSizeMB * kPixelsPerMB;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义用于解码的图像的最大像素总数是解码的图像的size乘以1MB的像素数</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kTileTotalPixels = kSourceImageTileSizeMB * kPixelsPerMB;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义重叠像素大小为2像素</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> kDestSeemOverlap = <span class="number">2.0</span>f;</span><br></pre></td></tr></table></figure><h3 id="私有变量"><a href="#私有变量" class="headerlink" title="私有变量"></a>私有变量</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">//定义了两个变量来保存图像的宽和高</span></span><br><span class="line">        size_t <span class="variable">_width</span>, <span class="variable">_height</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SD_UIKIT || SD_WATCH</span></span><br><span class="line">        <span class="comment">//定义变量记录图片方向</span></span><br><span class="line">        UIImageOrientation <span class="variable">_orientation</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="comment">//定义变量记录图片源</span></span><br><span class="line">        CGImageSourceRef <span class="variable">_imageSource</span>;</span><br></pre></td></tr></table></figure><h3 id="life-cycle"><a href="#life-cycle" class="headerlink" title="life cycle"></a>life cycle</h3><p>单例方法和dealloc方法</p><p>C 语言不能够调用OC中的retain与release，一般的C 语言接口都提供了release函数（比如CGContextRelease(context c)）来管理内存。ARC不会自动调用这些C接口的函数，所以这还是需要我们自己来进行管理的.</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)dealloc &#123;</span><br><span class="line">    <span class="comment">//如果CGImageSourceRef类型的_imageSource存在，在dealloc方法中手动释放掉（CGXXX 和CFXXX方法，ARC并不会自动释放，需要手动去释放掉）</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_imageSource) &#123;</span><br><span class="line">        <span class="built_in">CFRelease</span>(_imageSource);</span><br><span class="line">        _imageSource = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//单例方法</span></span><br><span class="line">+ (<span class="keyword">instancetype</span>)sharedCoder &#123;</span><br><span class="line">    <span class="keyword">static</span> SDWebImageImageIOCoder *coder;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        coder = [[SDWebImageImageIOCoder alloc] init];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> coder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h3><h4 id="SDWebImageCoder协议方法"><a href="#SDWebImageCoder协议方法" class="headerlink" title="SDWebImageCoder协议方法"></a><code>SDWebImageCoder</code>协议方法</h4><p>判断是否支持图片数据的解码</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)canDecodeFromData:(<span class="keyword">nullable</span> <span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    <span class="comment">//通过NSData中的扩展方法：sd_imageFormatForImageData 获取图片的格式</span></span><br><span class="line">    <span class="keyword">switch</span> ([<span class="built_in">NSData</span> sd_imageFormatForImageData:data]) &#123;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatWebP:</span><br><span class="line">            <span class="comment">// 不支持WebP格式图片解码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatHEIC:</span><br><span class="line">            <span class="comment">// 检查是否支持HEIC格式图片解码</span></span><br><span class="line">            <span class="keyword">return</span> [[<span class="keyword">self</span> <span class="keyword">class</span>] canDecodeFromHEICFormat];</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过图片数据（ImageData）解码获取图片</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (UIImage *)decodedImageWithData:(NSData *)<span class="keyword">data</span> &#123;</span><br><span class="line">    <span class="comment">//如果data为空，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">data</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> nil;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将imagedata转为图片</span></span><br><span class="line">    UIImage *image = [[UIImage alloc] initWithData:<span class="keyword">data</span>];</span><br><span class="line">    <span class="comment">//设置图片的格式</span></span><br><span class="line">    image.sd_imageFormat = [NSData sd_imageFormatForImageData:<span class="keyword">data</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用原始图片和图片数据解压缩图片</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">使用原始图片和图片数据解压缩图片。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 需要压缩的原图片</span></span><br><span class="line"><span class="comment"> @param data 指向原始图像数据的指针。 指针本身是非空的，但图像数据可以为空。 如果需要，此数据将设置为缓存。 如果您不需要同时修改数据，请忽略此参数。</span></span><br><span class="line"><span class="comment"> @param optionsDict 一个包含任何解压缩选项的字典。 通过&#123;SDWebImageCoderScaleDownLargeImagesKey：@（YES）&#125;缩小大图像</span></span><br><span class="line"><span class="comment"> @return 解压缩后的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)decompressedImageWithImage:(<span class="built_in">UIImage</span> *)image</span><br><span class="line">                                   data:(<span class="built_in">NSData</span> *__autoreleasing  _Nullable *)data</span><br><span class="line">                                options:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span>*, <span class="built_in">NSObject</span>*&gt;*)optionsDict &#123;</span><br><span class="line">                                </span><br><span class="line"><span class="comment">//如果是mac，直接返回图片</span></span><br><span class="line"><span class="meta">#if SD_MAC</span></span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果是iOS 、osTV、osWatch</span></span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">    <span class="comment">// 创建变量保存，默认是不缩小</span></span><br><span class="line">    <span class="built_in">BOOL</span> shouldScaleDown = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果传入选项字典参数</span></span><br><span class="line">    <span class="keyword">if</span> (optionsDict != <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="comment">//创建临时变量保存选项值</span></span><br><span class="line">        <span class="built_in">NSNumber</span> *scaleDownLargeImagesOption = <span class="literal">nil</span>;</span><br><span class="line">        <span class="comment">//SDWebImageCoderScaleDownLargeImagesKey对应的value类型为NSNumber，则保存value</span></span><br><span class="line">        <span class="keyword">if</span> ([optionsDict[SDWebImageCoderScaleDownLargeImagesKey] isKindOfClass:[<span class="built_in">NSNumber</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">            scaleDownLargeImagesOption = (<span class="built_in">NSNumber</span> *)optionsDict[SDWebImageCoderScaleDownLargeImagesKey];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果选项值不为nil，转换成BOOL类型，并保存</span></span><br><span class="line">        <span class="keyword">if</span> (scaleDownLargeImagesOption != <span class="literal">nil</span>) &#123;</span><br><span class="line">            shouldScaleDown = [scaleDownLargeImagesOption boolValue];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果不需要缩小图片，直接执行解压图片操作</span></span><br><span class="line">    <span class="keyword">if</span> (!shouldScaleDown) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="keyword">self</span> sd_decompressedImageWithImage:image];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        如果需要缩小图片，则执行图片的解压和缩小操作</span><br><span class="line">        <span class="built_in">UIImage</span> *scaledDownImage = [<span class="keyword">self</span> sd_decompressedAndScaledDownImageWithImage:image];</span><br><span class="line">        </span><br><span class="line">         <span class="comment">// 如果解压和缩小成功，仍处理数据指针，调用压缩方法</span></span><br><span class="line">        <span class="keyword">if</span> (scaledDownImage &amp;&amp; !<span class="built_in">CGSizeEqualToSize</span>(scaledDownImage.size, image.size)) &#123;</span><br><span class="line">            <span class="comment">//根据图片数据指针得到图片的格式</span></span><br><span class="line">            SDImageFormat format = [<span class="built_in">NSData</span> sd_imageFormatForImageData:*data];</span><br><span class="line">            <span class="comment">//通过缩小的图片和图片格式编码获取imagedata</span></span><br><span class="line">            <span class="built_in">NSData</span> *imageData = [<span class="keyword">self</span> encodedDataWithImage:scaledDownImage format:format];</span><br><span class="line">            <span class="keyword">if</span> (imageData) &#123;</span><br><span class="line">                <span class="comment">// 通过参数回传处理后的图像数据</span></span><br><span class="line">                *data = imageData;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回处理后的图片</span></span><br><span class="line">        <span class="keyword">return</span> scaledDownImage;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SDWebImageProgressiveCoder-协议方法"><a href="#SDWebImageProgressiveCoder-协议方法" class="headerlink" title="SDWebImageProgressiveCoder 协议方法"></a><code>SDWebImageProgressiveCoder</code> 协议方法</h4><p>判断是否支持增量解码某个data数据</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)canIncrementallyDecodeFromData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    <span class="comment">//获取图片的格式</span></span><br><span class="line">    <span class="keyword">switch</span> ([<span class="built_in">NSData</span> sd_imageFormatForImageData:data]) &#123;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatWebP:</span><br><span class="line">            <span class="comment">// 不支持WebP逐行解码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatHEIC:</span><br><span class="line">            <span class="comment">// 检查HEIC解码兼容性</span></span><br><span class="line">            <span class="keyword">return</span> [[<span class="keyword">self</span> <span class="keyword">class</span>] canDecodeFromHEICFormat];</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="comment">// 其他类型就返回YES</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将图片数据增量解码为图片</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIImage</span> *)incrementallyDecodedImageWithData:(<span class="built_in">NSData</span> *)data finished:(<span class="built_in">BOOL</span>)finished &#123;</span><br><span class="line">    判断增量图片源是否存在，如果不存在，创建一个新的</span><br><span class="line">    <span class="keyword">if</span> (!_imageSource) &#123;</span><br><span class="line">        _imageSource = <span class="built_in">CGImageSourceCreateIncremental</span>(<span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">UIImage</span> *image;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//更新数据源，这里必须传递所有数据，而不仅仅是新字节</span></span><br><span class="line">    <span class="built_in">CGImageSourceUpdateData</span>(_imageSource, (__bridge <span class="built_in">CFDataRef</span>)data, finished);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取到图像的宽、高和方向</span></span><br><span class="line">    <span class="keyword">if</span> (_width + _height == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> properties = <span class="built_in">CGImageSourceCopyPropertiesAtIndex</span>(_imageSource, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (properties) &#123;</span><br><span class="line">            <span class="built_in">NSInteger</span> orientationValue = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">CFTypeRef</span> val = <span class="built_in">CFDictionaryGetValue</span>(properties, kCGImagePropertyPixelHeight);</span><br><span class="line">            <span class="keyword">if</span> (val) <span class="built_in">CFNumberGetValue</span>(val, kCFNumberLongType, &amp;_height);</span><br><span class="line">            val = <span class="built_in">CFDictionaryGetValue</span>(properties, kCGImagePropertyPixelWidth);</span><br><span class="line">            <span class="keyword">if</span> (val) <span class="built_in">CFNumberGetValue</span>(val, kCFNumberLongType, &amp;_width);</span><br><span class="line">            val = <span class="built_in">CFDictionaryGetValue</span>(properties, kCGImagePropertyOrientation);</span><br><span class="line">            <span class="keyword">if</span> (val) <span class="built_in">CFNumberGetValue</span>(val, kCFNumberNSIntegerType, &amp;orientationValue);</span><br><span class="line">            <span class="built_in">CFRelease</span>(properties);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//当我们绘制到Core Graphics时，我们会丢失方向信息，这意味着initWithCGIImage生成的图像有时会导致错误定向。 （与didCompleteWithError中的initWithData生成的图像不同。）因此将其保存在此处并稍后传递。</span></span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">            _orientation = [SDWebImageCoderHelper imageOrientationFromEXIFOrientation:orientationValue];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_width + _height &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 创建位图对象</span></span><br><span class="line">        <span class="built_in">CGImageRef</span> partialImageRef = <span class="built_in">CGImageSourceCreateImageAtIndex</span>(_imageSource, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果存在，则根据该位图生成图片</span></span><br><span class="line">        <span class="keyword">if</span> (partialImageRef) &#123;</span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">            image = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:partialImageRef scale:<span class="number">1</span> orientation:_orientation];</span><br><span class="line"><span class="meta">#elif SD_MAC</span></span><br><span class="line">            image = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:partialImageRef size:<span class="built_in">NSZeroSize</span>];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">            <span class="comment">// 位图对象的引用计数-1</span></span><br><span class="line">            <span class="built_in">CGImageRelease</span>(partialImageRef);</span><br><span class="line">            image.sd_imageFormat = [<span class="built_in">NSData</span> sd_imageFormatForImageData:data];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// 如果加载完成就释放掉位图对象，并置空</span></span><br><span class="line">    <span class="keyword">if</span> (finished) &#123;</span><br><span class="line">        <span class="keyword">if</span> (_imageSource) &#123;</span><br><span class="line">            <span class="built_in">CFRelease</span>(_imageSource);</span><br><span class="line">            _imageSource = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回该图片</span></span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="私有方法中的：解压图片-和-解压并按比例缩小图片"><a href="#私有方法中的：解压图片-和-解压并按比例缩小图片" class="headerlink" title="私有方法中的：解压图片 和 解压并按比例缩小图片"></a>私有方法中的：解压图片 和 解压并按比例缩小图片</h4><p>解压图片</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)sd_decompressedImageWithImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果图片不需要解码，直接返回image</span></span><br><span class="line">    <span class="keyword">if</span> (![[<span class="keyword">self</span> <span class="keyword">class</span>] shouldDecodeImage:image]) &#123;</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自动释放位图上下文和所有变量以帮助系统在存在内存警告时释放内存。</span></span><br><span class="line">    <span class="comment">//在iOS7上，别忘了调用[[SDImageCache sharedImageCache] clearMemory];</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 建立自动释放池，以帮助系统在收到内存警告时释放内存。</span></span><br><span class="line">    <span class="keyword">@autoreleasepool</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取图片对象的位图图片</span></span><br><span class="line">        <span class="built_in">CGImageRef</span> imageRef = image.CGImage;</span><br><span class="line">        <span class="comment">// 获取图片对象的色彩空间</span></span><br><span class="line">        <span class="built_in">CGColorSpaceRef</span> colorspaceRef = SDCGColorSpaceGetDeviceRGB();</span><br><span class="line">        <span class="built_in">BOOL</span> hasAlpha = SDCGImageRefContainsAlpha(imageRef);</span><br><span class="line">        <span class="comment">//  iOS 显示 Alpha（透明）信息  (BRGA8888/BGRX8888)</span></span><br><span class="line">        <span class="built_in">CGBitmapInfo</span> bitmapInfo = kCGBitmapByteOrder32Host;</span><br><span class="line">        bitmapInfo |= hasAlpha ? kCGImageAlphaPremultipliedFirst : kCGImageAlphaNoneSkipFirst;</span><br><span class="line">        </span><br><span class="line">        size_t width = <span class="built_in">CGImageGetWidth</span>(imageRef);</span><br><span class="line">        size_t height = <span class="built_in">CGImageGetHeight</span>(imageRef);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// CGBitmapContextCreate不支持kCGImageAlphaNone。由于此处的原始图像没有alpha信息，因此使用kCGImageAlphaNoneSkipLast创建没有alpha信息的位图图形上下文。</span></span><br><span class="line">        <span class="comment">//创建位图图形上下文</span></span><br><span class="line">        <span class="built_in">CGContextRef</span> context = <span class="built_in">CGBitmapContextCreate</span>(<span class="literal">NULL</span>,</span><br><span class="line">                                                     width,</span><br><span class="line">                                                     height,</span><br><span class="line">                                                     kBitsPerComponent,</span><br><span class="line">                                                     <span class="number">0</span>,</span><br><span class="line">                                                     colorspaceRef,</span><br><span class="line">                                                     bitmapInfo);</span><br><span class="line">        <span class="comment">//如果创建失败，直接返回image</span></span><br><span class="line">        <span class="keyword">if</span> (context == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> image;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将图像绘制到上下文中并检索没有alpha的新位图图像</span></span><br><span class="line">        <span class="built_in">CGContextDrawImage</span>(context, <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, width, height), imageRef);</span><br><span class="line">        <span class="comment">// 生成位图图像</span></span><br><span class="line">        <span class="built_in">CGImageRef</span> imageRefWithoutAlpha = <span class="built_in">CGBitmapContextCreateImage</span>(context);</span><br><span class="line">        <span class="comment">// 根据位图图像生成图片对象</span></span><br><span class="line">        <span class="built_in">UIImage</span> *imageWithoutAlpha = [[<span class="built_in">UIImage</span> alloc] initWithCGImage:imageRefWithoutAlpha scale:image.scale orientation:image.imageOrientation];</span><br><span class="line">        <span class="comment">//释放掉上下文</span></span><br><span class="line">        <span class="built_in">CGContextRelease</span>(context);</span><br><span class="line">        <span class="comment">//释放掉位图图片</span></span><br><span class="line">        <span class="built_in">CGImageRelease</span>(imageRefWithoutAlpha);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//返回位图图片</span></span><br><span class="line">        <span class="keyword">return</span> imageWithoutAlpha;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//解压并按比例缩小图片</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">- (nullable UIImage *)sd_decompressedAndScaledDownImageWithImage:(nullable UIImage *)<span class="built_in">image</span> &#123;</span><br><span class="line">    <span class="comment">//如果图片不需要解码，直接返回image</span></span><br><span class="line">    <span class="built_in">if</span> (![[self class] shouldDecodeImage:<span class="built_in">image</span>]) &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="built_in">image</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果图片不需要缩小，直接执行解压图片操作</span></span><br><span class="line">    <span class="built_in">if</span> (![[self class] shouldScaleDownImage:<span class="built_in">image</span>]) &#123;</span><br><span class="line">        <span class="built_in">return</span> [self sd_decompressedImageWithImage:<span class="built_in">image</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建图像上下文</span></span><br><span class="line">    CGContextRef destContext;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//自动释放位图上下文和所有变量以帮助系统在存在内存警告时释放内存。</span></span><br><span class="line">    <span class="comment">//在iOS7上，别忘了调用[[SDImageCache sharedImageCache] clearMemory];</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 建立自动释放池，以帮助系统在收到内存警告时释放内存</span></span><br><span class="line">    @autoreleasepool &#123;</span><br><span class="line">        <span class="comment">//获取图片对象的位图图片</span></span><br><span class="line">        CGImageRef sourceImageRef = <span class="built_in">image</span>.CGImage;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取图像的总像素数</span></span><br><span class="line">        CGSize sourceResolution = CGSizeZero;</span><br><span class="line">        sourceResolution.<span class="built_in">width</span> = CGImageGetWidth(sourceImageRef);</span><br><span class="line">        sourceResolution.<span class="built_in">height</span> = CGImageGetHeight(sourceImageRef);</span><br><span class="line">        <span class="keyword">float</span> sourceTotalPixels = sourceResolution.<span class="built_in">width</span> * sourceResolution.<span class="built_in">height</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算缩小比例</span></span><br><span class="line">        <span class="keyword">float</span> imageScale = kDestTotalPixels / sourceTotalPixels;</span><br><span class="line">        <span class="comment">// 计算缩小后的尺寸</span></span><br><span class="line">        CGSize destResolution = CGSizeZero;</span><br><span class="line">        destResolution.<span class="built_in">width</span> = (<span class="keyword">int</span>)(sourceResolution.<span class="built_in">width</span>*imageScale);</span><br><span class="line">        destResolution.<span class="built_in">height</span> = (<span class="keyword">int</span>)(sourceResolution.<span class="built_in">height</span>*imageScale);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取色彩空间</span></span><br><span class="line">        CGColorSpaceRef colorspaceRef = SDCGColorSpaceGetDeviceRGB();</span><br><span class="line">        BOOL hasAlpha = SDCGImageRefContainsAlpha(sourceImageRef);</span><br><span class="line">        <span class="comment">// iOS 显示 Alpha（透明）信息 (BGRA8888/BGRX8888)</span></span><br><span class="line">        CGBitmapInfo bitmapInfo = kCGBitmapByteOrder32Host;</span><br><span class="line">        bitmapInfo |= hasAlpha ? kCGImageAlphaPremultipliedFirst : kCGImageAlphaNoneSkipFirst;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// CGBitmapContextCreate不支持kCGImageAlphaNone。由于此处的原始图像没有alpha信息，因此使用kCGImageAlphaNoneSkipLast创建没有alpha信息的位图图形上下文。</span></span><br><span class="line">        <span class="comment">//创建位图图形上下文</span></span><br><span class="line">        destContext = CGBitmapContextCreate(NULL,</span><br><span class="line">                                            destResolution.<span class="built_in">width</span>,</span><br><span class="line">                                            destResolution.<span class="built_in">height</span>,</span><br><span class="line">                                            kBitsPerComponent,</span><br><span class="line">                                            <span class="number">0</span>,</span><br><span class="line">                                            colorspaceRef,</span><br><span class="line">                                            bitmapInfo);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果创建失败，直接返回image</span></span><br><span class="line">        <span class="built_in">if</span> (destContext == NULL) &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="built_in">image</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置图像上下文的绘图质量</span></span><br><span class="line">        CGContextSetInterpolationQuality(destContext, kCGInterpolationHigh);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//现在定义用于从输入图像到输出图像的增量blit的矩形的大小。由于iOS从磁盘检索图像数据的方式，我们使用的源块宽度等于源图像的宽度。 iOS必须以全宽“波段”从磁盘解码图像，即使当前图形上下文被剪切为该波段内的子图形也是如此。 因此，我们通过将我们的图块大小设置为输入图像的整个宽度来充分利用由解码操作产生的所有像素数据。</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建临时变量保存来源块大小</span></span><br><span class="line">        CGRect sourceTile = CGRectZero;</span><br><span class="line">        <span class="comment">// 来源块的宽度就是原图的宽度</span></span><br><span class="line">        sourceTile.<span class="built_in">size</span>.<span class="built_in">width</span> = sourceResolution.<span class="built_in">width</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 源图块高度是动态的。 由于我们以MB为单位指定了源块的大小，因此请查看输入图像宽度可以为多少像素行。</span></span><br><span class="line">        <span class="comment">// 计算来源块的高度</span></span><br><span class="line">        sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span> = (<span class="keyword">int</span>)(kTileTotalPixels / sourceTile.<span class="built_in">size</span>.<span class="built_in">width</span> );</span><br><span class="line">        <span class="comment">// 设置来源块的X坐标</span></span><br><span class="line">        sourceTile.origin.x = <span class="number">0.0</span>f;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//输出图块与输入图块的比例相同，但缩放为图像比例。</span></span><br><span class="line">        <span class="comment">// 创建历史变量保存目标块大小</span></span><br><span class="line">        CGRect destTile;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 目标块的宽是缩放后的宽</span></span><br><span class="line">        destTile.<span class="built_in">size</span>.<span class="built_in">width</span> = destResolution.<span class="built_in">width</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 目标块的宽是来源块的高乘以缩放比</span></span><br><span class="line">        destTile.<span class="built_in">size</span>.<span class="built_in">height</span> = sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span> * imageScale;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置目标块的X坐标</span></span><br><span class="line">        destTile.origin.x = <span class="number">0.0</span>f;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//来源块与目标似乎重叠成比例。 这是我们组装输出图像时每个图块重叠的像素数量。</span></span><br><span class="line">        <span class="comment">// 计算来源块与目标块的重复区域</span></span><br><span class="line">        <span class="keyword">float</span> sourceSeemOverlap = (<span class="keyword">int</span>)((kDestSeemOverlap/destResolution.<span class="built_in">height</span>)*sourceResolution.<span class="built_in">height</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 生成变量保存来源块图像位图</span></span><br><span class="line">        CGImageRef sourceTileImageRef;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算组装输出图像所需的读/写操作次数。</span></span><br><span class="line">        <span class="comment">// 计算需要绘制的次数</span></span><br><span class="line">        <span class="keyword">int</span> iterations = (<span class="keyword">int</span>)( sourceResolution.<span class="built_in">height</span> / sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span> );</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果图块高度未均匀划分图像高度，请添加另一个迭代以考虑剩余像素。</span></span><br><span class="line">        <span class="comment">// 计算剩余像素的高度</span></span><br><span class="line">        <span class="keyword">int</span> remainder = (<span class="keyword">int</span>)sourceResolution.<span class="built_in">height</span> % (<span class="keyword">int</span>)sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果有剩余像素就将绘制次数加1</span></span><br><span class="line">        <span class="built_in">if</span>(remainder) &#123;</span><br><span class="line">            iterations++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 添加似乎与切片重叠，但保存原始切片高度以进行y坐标计算。</span></span><br><span class="line">         <span class="comment">// 创建变量保存来源块的高度，用来计算纵坐标的移动</span></span><br><span class="line">        <span class="keyword">float</span> sourceTileHeightMinusOverlap = sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 来源块高度加上要重复覆盖的高度</span></span><br><span class="line">        sourceTile.<span class="built_in">size</span>.<span class="built_in">height</span> += sourceSeemOverlap;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 目标块高度加上重叠的像素数</span></span><br><span class="line">        destTile.<span class="built_in">size</span>.<span class="built_in">height</span> += kDestSeemOverlap;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 开启循环绘制图像</span></span><br><span class="line">        <span class="built_in">for</span>( <span class="keyword">int</span> y = <span class="number">0</span>; y &lt; iterations; ++y ) &#123;</span><br><span class="line">            <span class="comment">// 建立自动释放池，以帮助系统在收到内存警告时释放内存。</span></span><br><span class="line">            @autoreleasepool &#123;</span><br><span class="line">                <span class="comment">// 计算来源块的纵坐标：来源块的高度乘以当前循环次数，然后加上重复覆盖的高度</span></span><br><span class="line">                sourceTile.origin.y = y * sourceTileHeightMinusOverlap + sourceSeemOverlap;</span><br><span class="line">                </span><br><span class="line">                 <span class="comment">// 计算目标块的纵坐标：目标图像的高度减去要绘制的来源块的高度乘以压缩比，再减去重叠高度</span></span><br><span class="line">                <span class="comment">// 这个地方，来源块的纵坐标是递增的，目标块的纵坐标是递减的，这是因为为UIKit的坐标系和CGContext是镜像关系</span></span><br><span class="line">                destTile.origin.y = destResolution.<span class="built_in">height</span> - (( y + <span class="number">1</span> ) * sourceTileHeightMinusOverlap * imageScale + kDestSeemOverlap);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 按照计算好的尺寸绘制来源块的位图</span></span><br><span class="line">                sourceTileImageRef = CGImageCreateWithImageInRect( sourceImageRef, sourceTile );</span><br><span class="line">                </span><br><span class="line">                 <span class="comment">// 如果是最后一块要绘制，并且这一块是剩余的像素</span></span><br><span class="line">                <span class="built_in">if</span>( y == iterations - <span class="number">1</span> &amp;&amp; remainder ) &#123;</span><br><span class="line">                </span><br><span class="line">                    <span class="comment">// 因为剩余像素的高度是不固定的，所以重新计算目标块的纵坐标</span></span><br><span class="line">                    <span class="keyword">float</span> dify = destTile.<span class="built_in">size</span>.<span class="built_in">height</span>;</span><br><span class="line">                    destTile.<span class="built_in">size</span>.<span class="built_in">height</span> = CGImageGetHeight( sourceTileImageRef ) * imageScale;</span><br><span class="line">                    dify -= destTile.<span class="built_in">size</span>.<span class="built_in">height</span>;</span><br><span class="line">                    destTile.origin.y += dify;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 将来源块位图按照计算好的尺寸绘制到目标图像上下文中</span></span><br><span class="line">                CGContextDrawImage( destContext, destTile, sourceTileImageRef );</span><br><span class="line">                </span><br><span class="line">                 <span class="comment">// 释放来源块位图</span></span><br><span class="line">                CGImageRelease( sourceTileImageRef );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 根据目标图像上下文生成目标图像位图</span></span><br><span class="line">        CGImageRef destImageRef = CGBitmapContextCreateImage(destContext);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 释放目标图像上下文</span></span><br><span class="line">        CGContextRelease(destContext);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果生成位图失败就直接返回图片对象</span></span><br><span class="line">        <span class="built_in">if</span> (destImageRef == NULL) &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="built_in">image</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">         <span class="comment">// 生成目标图片对象</span></span><br><span class="line">        UIImage *destImage = [[UIImage alloc] initWithCGImage:destImageRef scale:<span class="built_in">image</span>.scale orientation:<span class="built_in">image</span>.imageOrientation];</span><br><span class="line">        </span><br><span class="line">         <span class="comment">// 释放目标图像位图</span></span><br><span class="line">        CGImageRelease(destImageRef);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果生成图片对象失败就直接返回图片对象</span></span><br><span class="line">        <span class="built_in">if</span> (destImage == nil) &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="built_in">image</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 返回目标图片对象</span></span><br><span class="line">        <span class="built_in">return</span> destImage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>判断某个图片格式是否支持编码</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果是WebP格式，则不支持编码；HEIC格式：根据canEncodeToHEICFormat方法判断是否支持编码；其他格式都支持编码</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)canEncodeToFormat:(SDImageFormat)format &#123;</span><br><span class="line">    <span class="keyword">switch</span> (format) &#123;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatWebP:</span><br><span class="line">            <span class="comment">// 不支持WebP格式编码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">        <span class="keyword">case</span> SDImageFormatHEIC:</span><br><span class="line">            <span class="comment">// 检查HEIC编码兼容性</span></span><br><span class="line">            <span class="keyword">return</span> [[<span class="keyword">self</span> <span class="keyword">class</span>] canEncodeToHEICFormat];</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将图片根据给定的格式解码成图片数据（imageData）</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSData</span> *)encodedDataWithImage:(<span class="built_in">UIImage</span> *)image format:(SDImageFormat)format &#123;</span><br><span class="line">    <span class="comment">//如果图片不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!image) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果格式类型未识别，判断图片是否含有Alpha通道，如果有则定义为PNG格式，否则定义为JPEG格式</span></span><br><span class="line">    <span class="keyword">if</span> (format == SDImageFormatUndefined) &#123;</span><br><span class="line">        <span class="built_in">BOOL</span> hasAlpha = SDCGImageRefContainsAlpha(image.CGImage);</span><br><span class="line">        <span class="keyword">if</span> (hasAlpha) &#123;</span><br><span class="line">            format = SDImageFormatPNG;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            format = SDImageFormatJPEG;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableData</span> *imageData = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">    <span class="built_in">CFStringRef</span> imageUTType = [<span class="built_in">NSData</span> sd_UTTypeFromSDImageFormat:format];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据imageData 和 CFStringRef 创建 CGImageDestinationRef对象，如果创建失败，返回nil</span></span><br><span class="line">    <span class="built_in">CGImageDestinationRef</span> imageDestination = <span class="built_in">CGImageDestinationCreateWithData</span>((__bridge <span class="built_in">CFMutableDataRef</span>)imageData, imageUTType, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!imageDestination) &#123;</span><br><span class="line">        <span class="comment">// Handle failure.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建字典对象保存编码参数</span></span><br><span class="line">    <span class="built_in">NSMutableDictionary</span> *properties = [<span class="built_in">NSMutableDictionary</span> dictionary];</span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">    <span class="comment">//// 获取图片的方向</span></span><br><span class="line">    <span class="built_in">NSInteger</span> exifOrientation = [SDWebImageCoderHelper exifOrientationFromImageOrientation:image.imageOrientation];</span><br><span class="line">    <span class="comment">//设置方向参数</span></span><br><span class="line">    [properties setValue:@(exifOrientation) forKey:(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyOrientation];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加图片位图对象到创建的CGImageDestinationRef对象中</span></span><br><span class="line">    <span class="built_in">CGImageDestinationAddImage</span>(imageDestination, image.CGImage, (__bridge <span class="built_in">CFDictionaryRef</span>)properties);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果编码失败就返回空</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">CGImageDestinationFinalize</span>(imageDestination) == <span class="literal">NO</span>) &#123;</span><br><span class="line">        <span class="comment">// Handle failure.</span></span><br><span class="line">        imageData = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//释放掉imageDestination对象</span></span><br><span class="line">    <span class="built_in">CFRelease</span>(imageDestination);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回</span></span><br><span class="line">    <span class="keyword">return</span> [imageData <span class="keyword">copy</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="私有方法（辅助方法）"><a href="#私有方法（辅助方法）" class="headerlink" title="私有方法（辅助方法）"></a>私有方法（辅助方法）</h3><ol><li>是否需要解压图片<br>（如果图片为动图或不存在，不解压图片，否则解压图片）</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)shouldDecodeImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image &#123;</span><br><span class="line">    <span class="comment">//如果图片为空，返回NO</span></span><br><span class="line">    <span class="keyword">if</span> (image == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果图片为动图，返回NO</span></span><br><span class="line">    <span class="keyword">if</span> (image.images != <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    否则返回<span class="literal">YES</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>是否支持<code>HEIC</code>格式类型的图片解码</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)canDecodeFromHEICFormat &#123;</span><br><span class="line">    <span class="comment">//临时静态变量 canDecode 为 NO</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">BOOL</span> canDecode = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//忽略-Wunguarded-availability警告   </span></span><br><span class="line"><span class="meta">#pragma clang diagnostic push</span></span><br><span class="line"><span class="meta">#pragma clang diagnostic ignored <span class="meta-string">"-Wunguarded-availability"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果是iWatch 或者 SIMULATOR ，则不支持</span></span><br><span class="line"><span class="meta">#if TARGET_OS_SIMULATOR || SD_WATCH  //iWatch</span></span><br><span class="line">        canDecode = <span class="literal">NO</span>;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#elif SD_MAC  //mac</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取进程信息对象</span></span><br><span class="line">        <span class="built_in">NSProcessInfo</span> *processInfo = [<span class="built_in">NSProcessInfo</span> processInfo];</span><br><span class="line">        <span class="keyword">if</span> ([processInfo respondsToSelector:<span class="keyword">@selector</span>(operatingSystemVersion)]) &#123;</span><br><span class="line">            <span class="comment">//通过进程信息对象获取操作系统版本。判断macOS系统版本10.13+，则支持HEIC类型图像的解码</span></span><br><span class="line">            canDecode = processInfo.operatingSystemVersion.minorVersion &gt;= <span class="number">13</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            canDecode = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#elif SD_UIKIT //iOS 和 tvOS</span></span><br><span class="line">        <span class="comment">//获取进程信息对象</span></span><br><span class="line">        <span class="built_in">NSProcessInfo</span> *processInfo = [<span class="built_in">NSProcessInfo</span> processInfo];</span><br><span class="line">        <span class="keyword">if</span> ([processInfo respondsToSelector:<span class="keyword">@selector</span>(operatingSystemVersion)]) &#123;</span><br><span class="line">            <span class="comment">//通过进程信息对象获取操作系统版本。判断操作系统版本是iOS 11+就支持HEIC类型图像的解码</span></span><br><span class="line">            canDecode = processInfo.operatingSystemVersion.majorVersion &gt;= <span class="number">11</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            canDecode = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line"><span class="meta">#pragma clang diagnostic pop</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> canDecode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>是否支持<code>HEIC</code>格式类型的图片编码</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>)canEncodeToHEICFormat &#123;</span><br><span class="line">    <span class="comment">//临时静态变量 canDecode 为 NO</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">BOOL</span> canEncode = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        <span class="built_in">NSMutableData</span> *imageData = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">        <span class="built_in">CFStringRef</span> imageUTType = [<span class="built_in">NSData</span> sd_UTTypeFromSDImageFormat:SDImageFormatHEIC];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建一个CGImageDestinationRef对象，如果该对象可以创建成功，则需要编码，否则不需要</span></span><br><span class="line">        <span class="built_in">CGImageDestinationRef</span> imageDestination = <span class="built_in">CGImageDestinationCreateWithData</span>((__bridge <span class="built_in">CFMutableDataRef</span>)imageData, imageUTType, <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (!imageDestination) &#123;</span><br><span class="line">            <span class="comment">// Can't encode to HEIC</span></span><br><span class="line">            canEncode = <span class="literal">NO</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Can encode to HEIC</span></span><br><span class="line">            <span class="built_in">CFRelease</span>(imageDestination);</span><br><span class="line">            canEncode = <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> canEncode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>是否应该缩小图片</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">+ (<span class="built_in">BOOL</span>)shouldScaleDownImage:(<span class="keyword">nonnull</span> <span class="built_in">UIImage</span> *)image &#123;</span><br><span class="line">    <span class="built_in">BOOL</span> shouldScaleDown = <span class="literal">YES</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取图片的位图图像</span></span><br><span class="line">    <span class="built_in">CGImageRef</span> sourceImageRef = image.CGImage;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取到位图图像的宽和高</span></span><br><span class="line">    <span class="built_in">CGSize</span> sourceResolution = <span class="built_in">CGSizeZero</span>;</span><br><span class="line">    sourceResolution.width = <span class="built_in">CGImageGetWidth</span>(sourceImageRef);</span><br><span class="line">    sourceResolution.height = <span class="built_in">CGImageGetHeight</span>(sourceImageRef);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//计算图片的总像素数</span></span><br><span class="line">    <span class="keyword">float</span> sourceTotalPixels = sourceResolution.width * sourceResolution.height;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//图片的压缩比： 最大像素数 / 图片的总像素数</span></span><br><span class="line">    <span class="keyword">float</span> imageScale = kDestTotalPixels / sourceTotalPixels;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果压缩比小于1，返回YES，否则返回NO</span></span><br><span class="line">    <span class="keyword">if</span> (imageScale &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        shouldScaleDown = <span class="literal">YES</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        shouldScaleDown = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> shouldScaleDown;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#endif</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;）、编解码协议（&lt;code&gt;SDWebImageCoder&lt;/code&gt;）、PNG/JPEG/TIFF编解码，解压缩，显示大图（&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;）、GIF编解码（&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;）、WebP编解码（&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;）以及辅助类（&lt;code&gt;SDWebImageCoderHelper&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt; ：内置编码器，支持PNG，JPEG，TIFF，支持逐行解码。该类遵守 &lt;code&gt;SDWebImageProgressiveCoder&lt;/code&gt;协议。该协议也遵守&lt;code&gt;SDWebImageCoder&lt;/code&gt;协议，所以这个类要实现这两个协议的方法。&lt;/p&gt;
&lt;p&gt;  GIF&lt;br&gt;  还支持静态GIF（意思是只处理第一帧）。&lt;br&gt;  要获得完整的GIF支持，我们建议使用&lt;code&gt;FLAnimatedImage&lt;/code&gt;或性能较差的&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  HEIC&lt;br&gt;  该编码器还支持HEIC格式，因为ImageIO本身支持它。但这取决于系统功能，因此无法在所有设备上运行。
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 六 （编码器三：SDWebImageCodersManager）</title>
    <link href="http://guohuaden.com/2018/10/18/Read-SDWebImage-SDWebImageCodersManager/"/>
    <id>http://guohuaden.com/2018/10/18/Read-SDWebImage-SDWebImageCodersManager/</id>
    <published>2018-10-18T12:48:55.000Z</published>
    <updated>2018-10-29T09:59:10.285Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 内部实现了一个图片解码/编码的图片编解码器，用于图片的编解码、压缩。其中涉及到编解码管理（<code>SDWebImageCodersManager</code>）、编解码协议（<code>SDWebImageCoder</code>）、PNG/JPEG/TIFF编解码，解压缩，显示大图（<code>SDWebImageImageIOCoder</code>）、GIF编解码（<code>SDWebImageGIFCoder</code>）、WebP编解码（<code>SDWebImageWebPCoder</code>）以及辅助类（<code>SDWebImageCoderHelper</code>）</p><h3 id="编解码管理（-SDWebImageCodersManager-）"><a href="#编解码管理（-SDWebImageCodersManager-）" class="headerlink" title="编解码管理（ SDWebImageCodersManager ）"></a>编解码管理（ <code>SDWebImageCodersManager</code> ）</h3><p>编解码管理器，整体编解码器的入口，该类遵守了 <code>SDWebImageCoder</code> 协议，说明这个类可以提供基本的编解码功能 。编解码器数组是一个优先级队列，也意味着处理多个图片编解码任务时新添加的编解码器将具有最高优先级（即被先调用）<a id="more"></a></p><h4 id="声明属性和方法"><a href="#声明属性和方法" class="headerlink" title="声明属性和方法"></a>声明属性和方法</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 单例初始化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedInstance;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 所有的编解码器都在这个编解码器管理中（编码器数组）这个编解码器数组是一个优先级对列, 这意味着最后添加的编解码器拥有最高的优先级</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">readwrite</span>, <span class="keyword">nullable</span>) <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 在编解码器数组的末尾添加一个新的编解码器。 新添加的编解码器优先级最高。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param coder 需添加的coder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)addCoder:(<span class="keyword">nonnull</span> <span class="keyword">id</span>&lt;SDWebImageCoder&gt;)coder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 在编解码器数组中移除编码器</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param coder 需移除的coder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)removeCoder:(<span class="keyword">nonnull</span> <span class="keyword">id</span>&lt;SDWebImageCoder&gt;)coder;</span><br></pre></td></tr></table></figure><h4 id="初始化方法实现"><a href="#初始化方法实现" class="headerlink" title="初始化方法实现"></a>初始化方法实现</h4><p>初始化</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单例</span></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedInstance &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> once;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> instance;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;once, ^&#123;</span><br><span class="line">        instance = [<span class="keyword">self</span> new];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</span><br><span class="line">        <span class="comment">// 初始化默认的编解码器，默认编码器只有SDWebImageImageIOCoder类型的</span></span><br><span class="line">        <span class="built_in">NSMutableArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *mutableCoders = [@[[SDWebImageImageIOCoder sharedCoder]] mutableCopy];</span><br><span class="line"><span class="meta">#ifdef SD_WEBP</span></span><br><span class="line">        <span class="comment">//如果是WEBP，就添加SDWebImageWebPCoder单例</span></span><br><span class="line">        [mutableCoders addObject:[SDWebImageWebPCoder sharedCoder]];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">        _coders = [mutableCoders <span class="keyword">copy</span>];</span><br><span class="line">        _codersLock = dispatch_semaphore_create(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编码器IO操作"><a href="#编码器IO操作" class="headerlink" title="编码器IO操作"></a>编码器IO操作</h4><p>添加编码器</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)addCoder:(<span class="keyword">nonnull</span> <span class="keyword">id</span>&lt;SDWebImageCoder&gt;)coder &#123;</span><br><span class="line">    <span class="comment">//判断要添加的编解码器是否遵守SDWebImageCoder协议，以提供最基本的编解码功能</span></span><br><span class="line">    <span class="comment">//如果不遵守SDWebImageCoder协议，返回</span></span><br><span class="line">    <span class="keyword">if</span> (![coder conformsToProtocol:<span class="class"><span class="keyword">@protocol</span>(<span class="title">SDWebImageCoder</span>)]) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//临时变量，编解码器数组，如果不存在，重新初始化一个</span></span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *mutableCoders = [<span class="keyword">self</span>.coders mutableCopy];</span><br><span class="line">    <span class="keyword">if</span> (!mutableCoders) &#123;</span><br><span class="line">        mutableCoders = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加新的coder</span></span><br><span class="line">    [mutableCoders addObject:coder];</span><br><span class="line">    <span class="comment">//重新赋值给self.coders</span></span><br><span class="line">    <span class="keyword">self</span>.coders = [mutableCoders <span class="keyword">copy</span>];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>移除编码器</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)removeCoder:(<span class="keyword">nonnull</span> <span class="keyword">id</span>&lt;SDWebImageCoder&gt;)coder &#123;</span><br><span class="line">    <span class="comment">//判断要添加的编解码器是否遵守SDWebImageCoder协议，以提供最基本的编解码功能</span></span><br><span class="line">    <span class="comment">//如果不遵守SDWebImageCoder协议，返回</span></span><br><span class="line">    <span class="keyword">if</span> (![coder conformsToProtocol:<span class="class"><span class="keyword">@protocol</span>(<span class="title">SDWebImageCoder</span>)]) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//临时变量，编解码器数组，使其等于self.coders（深拷贝）</span></span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *mutableCoders = [<span class="keyword">self</span>.coders mutableCopy];</span><br><span class="line">    <span class="comment">//移除编解码器coder</span></span><br><span class="line">    [mutableCoders removeObject:coder];</span><br><span class="line">     <span class="comment">//重新赋值给self.coders</span></span><br><span class="line">    <span class="keyword">self</span>.coders = [mutableCoders <span class="keyword">copy</span>];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SDWebImageCoder协议方法实现"><a href="#SDWebImageCoder协议方法实现" class="headerlink" title="SDWebImageCoder协议方法实现"></a>SDWebImageCoder协议方法实现</h4><p>解码协议实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 如果此编解码器可以解码某些data，返回YES，否则，它应该传递给另一个编码器</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param data 需要解码的图片数据</span></span><br><span class="line"><span class="comment"> @return 如果此编解码器可以解码图片数据，返回YES，否则返回NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)canDecodeFromData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//临时变量，编解码器数组，赋值等于 self.coders</span></span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders = <span class="keyword">self</span>.coders;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//倒序遍历编解码器数组（倒序的原因是：编解码器数组中最新添加的具有最高优先级）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt; coder <span class="keyword">in</span> coders.reverseObjectEnumerator) &#123;</span><br><span class="line">        <span class="comment">//判断，如果其中有编解码器能够解码，就返回YES，否则返回NO</span></span><br><span class="line">        <span class="keyword">if</span> ([coder canDecodeFromData:data]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 将图片数据解码为图片。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param data 需要解码的图片数据</span></span><br><span class="line"><span class="comment"> @return 解码后得到的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)decodedImageWithData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders = <span class="keyword">self</span>.coders;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//倒序遍历编解码器列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt; coder <span class="keyword">in</span> coders.reverseObjectEnumerator) &#123;</span><br><span class="line">        <span class="comment">//判断，如果其中有编解码器能够解码，就执行解码操作，否则返回Image为nil</span></span><br><span class="line">        <span class="keyword">if</span> ([coder canDecodeFromData:data]) &#123;</span><br><span class="line">            <span class="keyword">return</span> [coder decodedImageWithData:data];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">使用原始图片和图片数据解压缩图片。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 需要压缩的原图片</span></span><br><span class="line"><span class="comment"> @param data 指向原始图像数据的指针。 指针本身是非空的，但图像数据可以为空。 如果需要，此数据将设置为缓存。 如果您不需要同时修改数据，请忽略此参数。</span></span><br><span class="line"><span class="comment"> @param optionsDict 一个包含任何解压缩选项的字典。 通过&#123;SDWebImageCoderScaleDownLargeImagesKey：@（YES）&#125;缩小大图像</span></span><br><span class="line"><span class="comment"> @return 解压缩后的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)decompressedImageWithImage:(<span class="built_in">UIImage</span> *)image</span><br><span class="line">                                   data:(<span class="built_in">NSData</span> *__autoreleasing  _Nullable *)data</span><br><span class="line">                                options:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span>*, <span class="built_in">NSObject</span>*&gt;*)optionsDict &#123;</span><br><span class="line">    <span class="comment">//如果image不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!image) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders = <span class="keyword">self</span>.coders;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//倒序遍历编解码器列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt; coder <span class="keyword">in</span> coders.reverseObjectEnumerator) &#123;</span><br><span class="line">        <span class="comment">//如果其中有编解码器可以解码，执行解压缩图片操作，并返回解压缩后的图片</span></span><br><span class="line">        <span class="keyword">if</span> ([coder canDecodeFromData:*data]) &#123;</span><br><span class="line">            <span class="comment">//解压缩图片操作</span></span><br><span class="line">            <span class="built_in">UIImage</span> *decompressedImage = [coder decompressedImageWithImage:image data:data options:optionsDict];</span><br><span class="line">            decompressedImage.sd_imageFormat = image.sd_imageFormat;</span><br><span class="line">            <span class="keyword">return</span> decompressedImage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编码协议实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 如果此编码器可以编码某些图片格式，返回YES，否则，它应该传递给另一个编码器</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param format 图片格式</span></span><br><span class="line"><span class="comment"> @return 如果此编码器可以编码图片格式，返回YES，否则返回NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)canEncodeToFormat:(SDImageFormat)format &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders = <span class="keyword">self</span>.coders;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//倒序遍历编解码器列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt; coder <span class="keyword">in</span> coders.reverseObjectEnumerator) &#123;</span><br><span class="line">        <span class="comment">//判断，如果其中有编解码器能够编码图片格式，就返回YES，否则返回NO</span></span><br><span class="line">        <span class="keyword">if</span> ([coder canEncodeToFormat:format]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 将图片编码为图片数据（imagedata）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 需要编码的图片</span></span><br><span class="line"><span class="comment"> @param format 要编码的图片格式, 也有可能是 `SDImageFormatUndefined` 格式（未识别格式）</span></span><br><span class="line"><span class="comment"> @return The encoded image data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">NSData</span> *)encodedDataWithImage:(<span class="built_in">UIImage</span> *)image format:(SDImageFormat)format &#123;</span><br><span class="line">    <span class="comment">//如果image不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!image) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;SDWebImageCoder&gt;&gt; *coders = <span class="keyword">self</span>.coders;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.codersLock);</span><br><span class="line">    <span class="comment">//倒序遍历编解码器列表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt; coder <span class="keyword">in</span> coders.reverseObjectEnumerator) &#123;</span><br><span class="line">        <span class="comment">//判断，如果其中有编解码器能够编码图片格式，就执行将图片以format格式编码为data操作，并返回imagedata</span></span><br><span class="line">        <span class="keyword">if</span> ([coder canEncodeToFormat:format]) &#123;</span><br><span class="line">            <span class="comment">// 将图片编码为图片数据（imagedata）</span></span><br><span class="line">            <span class="keyword">return</span> [coder encodedDataWithImage:image format:format];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 内部实现了一个图片解码/编码的图片编解码器，用于图片的编解码、压缩。其中涉及到编解码管理（&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;）、编解码协议（&lt;code&gt;SDWebImageCoder&lt;/code&gt;）、PNG/JPEG/TIFF编解码，解压缩，显示大图（&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;）、GIF编解码（&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;）、WebP编解码（&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;）以及辅助类（&lt;code&gt;SDWebImageCoderHelper&lt;/code&gt;）&lt;/p&gt;
&lt;h3 id=&quot;编解码管理（-SDWebImageCodersManager-）&quot;&gt;&lt;a href=&quot;#编解码管理（-SDWebImageCodersManager-）&quot; class=&quot;headerlink&quot; title=&quot;编解码管理（ SDWebImageCodersManager ）&quot;&gt;&lt;/a&gt;编解码管理（ &lt;code&gt;SDWebImageCodersManager&lt;/code&gt; ）&lt;/h3&gt;&lt;p&gt;编解码管理器，整体编解码器的入口，该类遵守了 &lt;code&gt;SDWebImageCoder&lt;/code&gt; 协议，说明这个类可以提供基本的编解码功能 。编解码器数组是一个优先级队列，也意味着处理多个图片编解码任务时新添加的编解码器将具有最高优先级（即被先调用）
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage  六 （编码器二：SDWebImageCoderHelper  以及动图处理使用到的 SDWebImageFrame）</title>
    <link href="http://guohuaden.com/2018/10/15/Read-SDWebImage-SDWebImageCoderHelper/"/>
    <id>http://guohuaden.com/2018/10/15/Read-SDWebImage-SDWebImageCoderHelper/</id>
    <published>2018-10-15T13:52:22.000Z</published>
    <updated>2018-10-26T02:52:32.450Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（<code>SDWebImageCodersManager</code>）、编解码协议（<code>SDWebImageCoder</code>）、PNG/JPEG/TIFF编解码，解压缩，显示大图（<code>SDWebImageImageIOCoder</code>）、GIF编解码（<code>SDWebImageGIFCoder</code>）、WebP编解码（<code>SDWebImageWebPCoder</code>）以及辅助类（<code>SDWebImageCoderHelper</code>）</p><p>本篇只做 <code>SDWebImageCoderHelper</code> 类的分析。该类作为辅助类，主要实现了两个功能：动图处理 和 图片方向处理。每个功能有两种方法，均为互逆方法。</p><a id="more"></a><h4 id="SDWebImageFrame类对象"><a href="#SDWebImageFrame类对象" class="headerlink" title="SDWebImageFrame类对象"></a><code>SDWebImageFrame</code>类对象</h4><p>在动图处理期间，使用到了 <code>SDWebImageFrame</code> 对象，该对象是使用单独的类实现的，在GIF等动态图使用中作为每一帧的显示作用。该类用于通过<code>SDWebImageCoderHelper</code>中的<code>animatedImageWithFrames</code>创建动画图片。 如果需要指定动画图片循环计数，请在“UIImage + MultiFormat”中使用<code>sd_imageLoopCount</code>属性。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 当前帧的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>, <span class="keyword">nonnull</span>) <span class="built_in">UIImage</span> *image;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">要显示的当前帧的持续时间。 数字是秒而不是毫秒。不应将此值设置为零。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">assign</span>) <span class="built_in">NSTimeInterval</span> duration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">使用指定图片和持续时间创建框架实例</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 当前帧的图片</span></span><br><span class="line"><span class="comment"> @param duration 当前帧的持续时间</span></span><br><span class="line"><span class="comment"> @return 返回框架实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="keyword">instancetype</span> _Nonnull)frameWithImage:(<span class="built_in">UIImage</span> * _Nonnull)image duration:(<span class="built_in">NSTimeInterval</span>)duration;</span><br></pre></td></tr></table></figure><p>初始化方法实现</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ (instance<span class="keyword">type</span>)frameWithImage:(<span class="type">UIImage</span> *)image duration:(<span class="type">NSTimeInterval</span>)duration &#123;</span><br><span class="line">    <span class="type">SDWebImageFrame</span> *frame = [[<span class="type">SDWebImageFrame</span> alloc] init];</span><br><span class="line">    frame.image = image;</span><br><span class="line">    frame.duration = duration;</span><br><span class="line">    </span><br><span class="line">    return frame;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动图处理"><a href="#动图处理" class="headerlink" title="动图处理"></a>动图处理</h4><p>根据SDWebImageFrame帧数组返回动图</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 根据SDWebImageFrame帧数组返回动图</span><br><span class="line">  对于UIKit，这将应用补丁，然后创建动画UIImage。 补丁是因为<span class="string">`+ [UIImage animatedImageWithImages：duration：]`</span>只使用每个图片的平均持续时间。 因此，如果不同的帧具有不同的持续时间，则不起作用 因此，我们重复指定帧的指定帧以使其工作。</span><br><span class="line">  对于AppKit，NSImage不支持GIF以外的动画。 这将尝试将帧编码为GIF格式，然后创建用于渲染的动画NSImage。 注意，如果输入帧包含完整的Alpha通道，动画图片可能会丢失一些细节，因为GIF仅支持<span class="number">1</span>位alpha通道。 （<span class="number">1</span>个像素，透明或不透明）</span><br><span class="line"></span><br><span class="line"> @param frames SDWebImageFrame帧数组. 如果数组为空或者<span class="literal">nil</span>，返回<span class="literal">nil</span></span><br><span class="line"> @<span class="keyword">return</span> 用于在UIImageView（UIKit）或NSImageView（AppKit）上渲染的动画图片</span><br><span class="line"> *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">+ (UIImage * _Nullable)animatedImageWithFrames:(NSArray&lt;SDWebImageFrame *&gt; * _Nullable)frames;</span></span><br></pre></td></tr></table></figure><p>方法实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">UIImage</span> *)animatedImageWithFrames:(<span class="built_in">NSArray</span>&lt;SDWebImageFrame *&gt; *)frames &#123;</span><br><span class="line">  <span class="comment">//如果数组元素为空，返回动图为nil</span></span><br><span class="line">    <span class="built_in">NSUInteger</span> frameCount = frames.count;</span><br><span class="line">    <span class="keyword">if</span> (frameCount == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">// 生成临时变量保存动图</span></span><br><span class="line">    <span class="built_in">UIImage</span> *animatedImage;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//如果是iOS 、iWatch 、 Apple TV  </span></span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH </span></span><br><span class="line">    <span class="comment">//生成一个元素类型为非负整数，长度为动图帧数的数组个数，保存每一帧的展示时间</span></span><br><span class="line">    <span class="built_in">NSUInteger</span> durations[frameCount];</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; frameCount; i++) &#123;</span><br><span class="line">        <span class="comment">//遍历SDWebImageFrame对象数组，获取每一帧的展示时间</span></span><br><span class="line">        durations[i] = frames[i].duration * <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    计算所有帧展示时长的最大公约数</span><br><span class="line">    <span class="built_in">NSUInteger</span> <span class="keyword">const</span> gcd = gcdArray(frameCount, durations);</span><br><span class="line">    <span class="comment">//临时变量保存总时长</span></span><br><span class="line">    __block <span class="built_in">NSUInteger</span> totalDuration = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//创建一个可变数组，长度为动图帧数的数组个数</span></span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;<span class="built_in">UIImage</span> *&gt; *animatedImages = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:frameCount];</span><br><span class="line">    <span class="comment">//遍历传入的动图帧数的数组</span></span><br><span class="line">    [frames enumerateObjectsUsingBlock:^(SDWebImageFrame * _Nonnull frame, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">        <span class="comment">// 获取SDWebImageFrame对象保存的每一帧的图像</span></span><br><span class="line">        <span class="built_in">UIImage</span> *image = frame.image;</span><br><span class="line">        <span class="comment">// 获取SDWebImageFrame对象保存的每一帧的展示时间</span></span><br><span class="line">        <span class="built_in">NSUInteger</span> duration = frame.duration * <span class="number">1000</span>;</span><br><span class="line">        <span class="comment">//总时长</span></span><br><span class="line">        totalDuration += duration;</span><br><span class="line">        <span class="comment">//临时变量，保存重复次数</span></span><br><span class="line">        <span class="built_in">NSUInteger</span> repeatCount;</span><br><span class="line">        <span class="comment">// 如果计算出的最大公约数大于零，每一帧的重复次数就是展示时间除以最大公约数</span></span><br><span class="line">        <span class="comment">// 否则每一帧只重复一次，也就说不重复</span></span><br><span class="line">        <span class="keyword">if</span> (gcd) &#123;</span><br><span class="line">            repeatCount = duration / gcd;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            repeatCount = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 根据重复次数向动图数组中重复添加同一帧</span></span><br><span class="line">        <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; repeatCount; ++i) &#123;</span><br><span class="line">            [animatedImages addObject:image];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    获得动图</span><br><span class="line">    animatedImage = [<span class="built_in">UIImage</span> animatedImageWithImages:animatedImages duration:totalDuration / <span class="number">1000.</span>f];</span><br><span class="line">    </span><br><span class="line"><span class="meta">#else //如果不是（iOS 、iWatch 、 Apple TV ）</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableData</span> *imageData = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">    <span class="built_in">CFStringRef</span> imageUTType = [<span class="built_in">NSData</span> sd_UTTypeFromSDImageFormat:SDImageFormatGIF];</span><br><span class="line">    <span class="comment">// 创建图像目标。 GIF不支持EXIF图像方向</span></span><br><span class="line">    <span class="built_in">CGImageDestinationRef</span> imageDestination = <span class="built_in">CGImageDestinationCreateWithData</span>((__bridge <span class="built_in">CFMutableDataRef</span>)imageData, imageUTType, frameCount, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!imageDestination) &#123;</span><br><span class="line">        <span class="comment">// 处理失败。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//遍历传入的动图帧数的数组</span></span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; frameCount; i++) &#123;</span><br><span class="line">        <span class="keyword">@autoreleasepool</span> &#123;</span><br><span class="line">            <span class="comment">// 获取SDWebImageFrame对象保存的每一帧的图像</span></span><br><span class="line">            SDWebImageFrame *frame = frames[i];</span><br><span class="line">            <span class="comment">// 获取SDWebImageFrame对象保存的每一帧的展示时间</span></span><br><span class="line">            <span class="keyword">float</span> frameDuration = frame.duration;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">CGImageRef</span> frameImageRef = frame.image.CGImage;</span><br><span class="line">            <span class="built_in">NSDictionary</span> *frameProperties = @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDictionary : @&#123;(__bridge <span class="built_in">NSString</span> *)kCGImagePropertyGIFDelayTime : @(frameDuration)&#125;&#125;;</span><br><span class="line">            <span class="built_in">CGImageDestinationAddImage</span>(imageDestination, frameImageRef, (__bridge <span class="built_in">CFDictionaryRef</span>)frameProperties);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Finalize the destination.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">CGImageDestinationFinalize</span>(imageDestination) == <span class="literal">NO</span>) &#123;</span><br><span class="line">        <span class="comment">// 处理失败。</span></span><br><span class="line">        <span class="built_in">CFRelease</span>(imageDestination);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CFRelease</span>(imageDestination);</span><br><span class="line">    SDAnimatedImageRep *imageRep = [[SDAnimatedImageRep alloc] initWithData:imageData];</span><br><span class="line">    animatedImage = [[<span class="built_in">NSImage</span> alloc] initWithSize:imageRep.size];</span><br><span class="line">    [animatedImage addRepresentation:imageRep];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> animatedImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据动图返回SDWebImageFrame帧数组</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/<span class="symbol">*</span><span class="symbol">*</span></span><br><span class="line"> 根据动图返回SDWebImageFrame帧数组</span><br><span class="line">对于UIKit，这将取消应用上述描述的补丁，然后创建frames数组。 这也适用于普通的动画UIImage。</span><br><span class="line">  对于AppKit，NSImage不支持GIF以外的动画。 这将尝试解码GIF imageRep，然后创建帧数组。</span><br><span class="line"></span><br><span class="line"> <span class="meta">@param</span> animatedImage 一个动图.如果不是动图，返回nil</span><br><span class="line"> <span class="meta">@return</span> 返回SDWebImageFrame帧数组</span><br><span class="line"> <span class="symbol">*</span>/</span><br><span class="line">+ (NSArray<span class="variable">&lt;SDWebImageFrame *&gt;</span> <span class="symbol">*</span> _Nullable)framesFromAnimatedImage:(UIImage <span class="symbol">*</span> _Nullable)animatedImage;</span><br></pre></td></tr></table></figure><p>方法实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSArray</span>&lt;SDWebImageFrame *&gt; *)framesFromAnimatedImage:(<span class="built_in">UIImage</span> *)animatedImage &#123;</span><br><span class="line">    <span class="comment">//如果动图不存在，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (!animatedImage) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//初始化两个临时变量： SDWebImageFrame对象 和帧个数</span></span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;SDWebImageFrame *&gt; *frames = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="built_in">NSUInteger</span> frameCount = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#if SD_UIKIT || SD_WATCH</span></span><br><span class="line">    <span class="comment">//获取动图的帧图片数组</span></span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="built_in">UIImage</span> *&gt; *animatedImages = animatedImage.images;</span><br><span class="line">    <span class="comment">//获取动图的帧图片数量</span></span><br><span class="line">    frameCount = animatedImages.count;</span><br><span class="line">    <span class="comment">//如果帧图片数量为0，表示不是动图，返回nil</span></span><br><span class="line">    <span class="keyword">if</span> (frameCount == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算每一帧的平均展示时间</span></span><br><span class="line">    <span class="built_in">NSTimeInterval</span> avgDuration = animatedImage.duration / frameCount;</span><br><span class="line">    <span class="comment">//如果这个动图没有展示时间就默认每一帧展示100毫秒 ，即0.1秒（这没有像GIF或WebP那样的10ms限制，以允许自定义编码器提供限制）</span></span><br><span class="line">    <span class="keyword">if</span> (avgDuration == <span class="number">0</span>) &#123;</span><br><span class="line">        avgDuration = <span class="number">0.1</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记录不同帧图片的数量</span></span><br><span class="line">    __block <span class="built_in">NSUInteger</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录一帧图片重复次数</span></span><br><span class="line">    __block <span class="built_in">NSUInteger</span> repeatCount = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//记录当前遍历到的图片之前的图片</span></span><br><span class="line">    __block <span class="built_in">UIImage</span> *previousImage = animatedImages.firstObject;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//遍历图片数组</span></span><br><span class="line">    [animatedImages enumerateObjectsUsingBlock:^(<span class="built_in">UIImage</span> * _Nonnull image, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">        <span class="comment">// 第一张图片不处理，忽略掉</span></span><br><span class="line">        <span class="keyword">if</span> (idx == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果这一帧的图片和之前一帧图片相同就添加重复次数</span></span><br><span class="line">        <span class="keyword">if</span> ([image isEqual:previousImage]) &#123;</span><br><span class="line">            repeatCount++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">// 如果两帧图片不相同，就生成SDWebImageFrame对象</span></span><br><span class="line">            SDWebImageFrame *frame = [SDWebImageFrame frameWithImage:previousImage duration:avgDuration * repeatCount];</span><br><span class="line">            <span class="comment">// 数组记录对象</span></span><br><span class="line">            [frames addObject:frame];</span><br><span class="line">            <span class="comment">// 重复次数设置为1次</span></span><br><span class="line">            repeatCount = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 记录不同的帧图片的数量加1</span></span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//记录当前图片，用于下次遍历使用</span></span><br><span class="line">        previousImage = image;</span><br><span class="line">        <span class="comment">// 最后一张图片</span></span><br><span class="line">        <span class="keyword">if</span> (idx == frameCount - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果是最后一张照片就直接添加</span></span><br><span class="line">            SDWebImageFrame *frame = [SDWebImageFrame frameWithImage:previousImage duration:avgDuration * repeatCount];</span><br><span class="line">            [frames addObject:frame];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line"><span class="meta">#else //以下非iOS实现，一些东西不同，不做分析</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSBitmapImageRep</span> *bitmapRep;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSImageRep</span> *imageRep <span class="keyword">in</span> animatedImage.representations) &#123;</span><br><span class="line">        <span class="keyword">if</span> ([imageRep isKindOfClass:[<span class="built_in">NSBitmapImageRep</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">            bitmapRep = (<span class="built_in">NSBitmapImageRep</span> *)imageRep;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (bitmapRep) &#123;</span><br><span class="line">        frameCount = [[bitmapRep valueForProperty:<span class="built_in">NSImageFrameCount</span>] unsignedIntegerValue];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (frameCount == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">0</span>; i &lt; frameCount; i++) &#123;</span><br><span class="line">        <span class="keyword">@autoreleasepool</span> &#123;</span><br><span class="line">            <span class="comment">//NSBitmapImageRep需要手动更改帧。 “Good taste”API</span></span><br><span class="line">            [bitmapRep setProperty:<span class="built_in">NSImageCurrentFrame</span> withValue:@(i)];</span><br><span class="line">            <span class="keyword">float</span> frameDuration = [[bitmapRep valueForProperty:<span class="built_in">NSImageCurrentFrameDuration</span>] floatValue];</span><br><span class="line">            <span class="built_in">NSImage</span> *frameImage = [[<span class="built_in">NSImage</span> alloc] initWithCGImage:bitmapRep.CGImage size:<span class="built_in">CGSizeZero</span>];</span><br><span class="line">            SDWebImageFrame *frame = [SDWebImageFrame frameWithImage:frameImage duration:frameDuration];</span><br><span class="line">            [frames addObject:frame];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> frames;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="图片方向处理"><a href="#图片方向处理" class="headerlink" title="图片方向处理"></a>图片方向处理</h4><p>将EXIF图片方向转换为iOS图片方向</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 将EXIF图片方向转换为iOS图片方向。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> exifOrientation EXIF图片方向</span></span><br><span class="line"><span class="comment"> <span class="doctag">@return</span> iOS图片方向</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (UIImageOrientation)<span class="string">imageOrientationFromEXIFOrientation:</span>(NSInteger)exifOrientation;</span><br></pre></td></tr></table></figure><p>方法实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将EXIF图片方向转换为iOS图片方向。根据EXIF图片方向做判断，返回iOS图片方向</span></span><br><span class="line">+ (<span class="built_in">UIImageOrientation</span>)imageOrientationFromEXIFOrientation:(<span class="built_in">NSInteger</span>)exifOrientation &#123;</span><br><span class="line">    <span class="comment">// CGImagePropertyOrientation在上面的iOS 8上可用。 目前保持兼容性</span></span><br><span class="line">    <span class="built_in">UIImageOrientation</span> imageOrientation = <span class="built_in">UIImageOrientationUp</span>;</span><br><span class="line">    <span class="keyword">switch</span> (exifOrientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationUp</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationDown</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationLeft</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationRight</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationUpMirrored</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationDownMirrored</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationLeftMirrored</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            imageOrientation = <span class="built_in">UIImageOrientationRightMirrored</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> imageOrientation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将iOS方向转换为EXIF图片方向</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">将iOS方向转换为EXIF图片方向</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> imageOrientation iOS方向</span></span><br><span class="line"><span class="comment"> <span class="doctag">@return</span> EXIF图片方向</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (NSInteger)<span class="string">exifOrientationFromImageOrientation:</span>(UIImageOrientation)imageOrientation;</span><br></pre></td></tr></table></figure><p>方法实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将iOS方向转换为EXIF图片方向，根据iOS方向做判断，返回EXIF图片方向</span></span><br><span class="line">+ (<span class="built_in">NSInteger</span>)exifOrientationFromImageOrientation:(<span class="built_in">UIImageOrientation</span>)imageOrientation &#123;</span><br><span class="line">    <span class="comment">// CGImagePropertyOrientation 在上面的iOS 8上可用。 目前保持兼容性</span></span><br><span class="line">    <span class="built_in">NSInteger</span> exifOrientation = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">switch</span> (imageOrientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationUp</span>:</span><br><span class="line">            exifOrientation = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationDown</span>:</span><br><span class="line">            exifOrientation = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeft</span>:</span><br><span class="line">            exifOrientation = <span class="number">8</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRight</span>:</span><br><span class="line">            exifOrientation = <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationUpMirrored</span>:</span><br><span class="line">            exifOrientation = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationDownMirrored</span>:</span><br><span class="line">            exifOrientation = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationLeftMirrored</span>:</span><br><span class="line">            exifOrientation = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">UIImageOrientationRightMirrored</span>:</span><br><span class="line">            exifOrientation = <span class="number">7</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> exifOrientation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="两个私有方法-计算最大公约数"><a href="#两个私有方法-计算最大公约数" class="headerlink" title="两个私有方法: 计算最大公约数"></a>两个私有方法: 计算最大公约数</h4><p>计算两个整数a和b的最大公约数</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">static NSUInteger gcd(NSUInteger a, NSUInteger <span class="keyword">b) </span>&#123;</span><br><span class="line">    NSUInteger c<span class="comment">;</span></span><br><span class="line">    while (a != <span class="number">0</span>) &#123;</span><br><span class="line">        c = a<span class="comment">;</span></span><br><span class="line">        a = <span class="keyword">b </span>% a<span class="comment">;</span></span><br><span class="line">        <span class="keyword">b </span>= c<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="keyword">b;</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br></pre></td></tr></table></figure><p>计算一个整数数组的最大公约数</p><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">NSUInteger</span> gcdArray(size_t <span class="keyword">const</span> count, <span class="type">NSUInteger</span> <span class="keyword">const</span> * <span class="keyword">const</span> values) &#123;</span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">NSUInteger</span> <span class="literal">result</span> = values[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (size_t i = <span class="number">1</span>; i &lt; count; ++i) &#123;</span><br><span class="line">        <span class="literal">result</span> = gcd(values[i], <span class="literal">result</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;）、编解码协议（&lt;code&gt;SDWebImageCoder&lt;/code&gt;）、PNG/JPEG/TIFF编解码，解压缩，显示大图（&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;）、GIF编解码（&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;）、WebP编解码（&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;）以及辅助类（&lt;code&gt;SDWebImageCoderHelper&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;本篇只做 &lt;code&gt;SDWebImageCoderHelper&lt;/code&gt; 类的分析。该类作为辅助类，主要实现了两个功能：动图处理 和 图片方向处理。每个功能有两种方法，均为互逆方法。&lt;/p&gt;
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 六 （编码器一：SDWebImageCoder）</title>
    <link href="http://guohuaden.com/2018/10/13/Read-SDWebImage-SDWebImageCoder/"/>
    <id>http://guohuaden.com/2018/10/13/Read-SDWebImage-SDWebImageCoder/</id>
    <published>2018-10-13T13:15:04.000Z</published>
    <updated>2018-10-26T03:07:23.441Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（<code>SDWebImageCodersManager</code>）、编解码协议（<code>SDWebImageCoder</code>）、PNG/JPEG/TIFF编解码，解压缩，显示大图（<code>SDWebImageImageIOCoder</code>）、GIF编解码（<code>SDWebImageGIFCoder</code>）、WebP编解码（<code>SDWebImageWebPCoder</code>）以及辅助类（<code>SDWebImageCoderHelper</code>）</p><p>本篇只做 <code>SDWebImageCoder</code> 的分析。 <code>SDWebImageCoder</code> 是编解码协议，包含两个协议：<code>SDWebImageCoder</code> 和 <code>SDWebImageProgressiveCoder</code>，两个协议定义了图片编解码类的接口。</p><a id="more"></a><h4 id="公共变量与函数"><a href="#公共变量与函数" class="headerlink" title="公共变量与函数"></a>公共变量与函数</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//一个bool类型的key，标记在解压缩期间是否缩小大图片。使用：@&#123;SDWebImageCoderScaleDownLargeImagesKey: @(BOOL值)&#125;</span></span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageCoderScaleDownLargeImagesKey;</span><br><span class="line"></span><br><span class="line"><span class="comment">//.m文件</span></span><br><span class="line"><span class="built_in">NSString</span> * <span class="keyword">const</span> SDWebImageCoderScaleDownLargeImagesKey = <span class="string">@"scaleDownLargeImages"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 返回使用CGColorSpaceCreateDeviceRGB创建的共享设备相关RGB颜色空间。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @return 与设备相关RGB颜色空间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">CG_EXTERN</span> <span class="built_in">CGColorSpaceRef</span> _Nonnull SDCGColorSpaceGetDeviceRGB(<span class="keyword">void</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 检查 CGImageRef 是否包含 alpha 通道</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param imageRef The CGImageRef</span></span><br><span class="line"><span class="comment"> @return 如果CGImageRef包含alpha通道，则返回YES，否则返回NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">CG_EXTERN</span> <span class="built_in">BOOL</span> SDCGImageRefContainsAlpha(_Nullable <span class="built_in">CGImageRef</span> imageRef);</span><br></pre></td></tr></table></figure><h4 id="两个函数的实现"><a href="#两个函数的实现" class="headerlink" title="两个函数的实现"></a>两个函数的实现</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了一个单利方法，获取设备的RGB色彩空间</span></span><br><span class="line"><span class="built_in">CGColorSpaceRef</span> SDCGColorSpaceGetDeviceRGB(<span class="keyword">void</span>) &#123;</span><br><span class="line">    <span class="comment">//通过单例模式获取设备的RGB色彩空间并返回</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">CGColorSpaceRef</span> colorSpace;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> colorSpace;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查图片是否有透明度</span></span><br><span class="line"><span class="built_in">BOOL</span> SDCGImageRefContainsAlpha(<span class="built_in">CGImageRef</span> imageRef) &#123;</span><br><span class="line">    <span class="comment">//如果没有图片就返回没有透明度</span></span><br><span class="line">    <span class="keyword">if</span> (!imageRef) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取图片的透明度信息</span></span><br><span class="line">    <span class="built_in">CGImageAlphaInfo</span> alphaInfo = <span class="built_in">CGImageGetAlphaInfo</span>(imageRef);</span><br><span class="line">    <span class="comment">//如果满足下面的任何一个选项，就代表没有透明度；否则就有透明度</span></span><br><span class="line">    <span class="built_in">BOOL</span> hasAlpha = !(alphaInfo == kCGImageAlphaNone ||</span><br><span class="line">                      alphaInfo == kCGImageAlphaNoneSkipFirst ||</span><br><span class="line">                      alphaInfo == kCGImageAlphaNoneSkipLast);</span><br><span class="line">    <span class="keyword">return</span> hasAlpha;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="两个协议"><a href="#两个协议" class="headerlink" title="两个协议"></a>两个协议</h4><h5 id="SDWebImageCoder-协议"><a href="#SDWebImageCoder-协议" class="headerlink" title="SDWebImageCoder 协议"></a><code>SDWebImageCoder</code> 协议</h5><p>该协议提供自定义图像解码/编码的图像编码器协议。<br>需要注意的是：不要从主队列调用这些方法。<br>该协议使用了 <code>@required</code> 关键词，标志着里面的协议方法必须实现</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@required</span> <span class="comment">//标志着里面的协议方法必须实现</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark - 解码</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 如果此编码器可以解码某些data，返回YES，否则，它应该传递给另一个编码器</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param data 需要解码的图片数据</span></span><br><span class="line"><span class="comment"> @return 如果此编码器可以解码图片，返回YES，否则返回NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)canDecodeFromData:(<span class="keyword">nullable</span> <span class="built_in">NSData</span> *)data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 将图片数据解码为图片。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param data 需要解码的图片数据</span></span><br><span class="line"><span class="comment"> @return 解码后得到的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)decodedImageWithData:(<span class="keyword">nullable</span> <span class="built_in">NSData</span> *)data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">使用原始图片和图片数据解压缩图片。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 需要压缩的原图片</span></span><br><span class="line"><span class="comment"> @param data 指向原始图像数据的指针。 指针本身是非空的，但图像数据可以为空。 如果需要，此数据将设置为缓存。 如果您不需要同时修改数据，请忽略此参数。</span></span><br><span class="line"><span class="comment"> @param optionsDict 一个包含任何解压缩选项的字典。 通过&#123;SDWebImageCoderScaleDownLargeImagesKey：@（YES）&#125;缩小大图像</span></span><br><span class="line"><span class="comment"> @return 解压缩后的图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)decompressedImageWithImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image</span><br><span class="line">                                            data:(<span class="built_in">NSData</span> * _Nullable * _Nonnull)data</span><br><span class="line">                                         options:(<span class="keyword">nullable</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span>*, <span class="built_in">NSObject</span>*&gt;*)optionsDict;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -编码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 如果此编码器可以编码某些图片，返回YES，否则，它应该传递给另一个编码器</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> @param format 图片格式</span></span><br><span class="line"><span class="comment"> @return 如果此编码器可以编码图片，返回YES，否则返回NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)canEncodeToFormat:(SDImageFormat)format;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 将图片编码为图片数据（imagedata）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param image 需要编码的图片</span></span><br><span class="line"><span class="comment"> @param format 要编码的图片格式, 也有可能是 `SDImageFormatUndefined` 格式（未识别格式）</span></span><br><span class="line"><span class="comment"> @return The encoded image data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSData</span> *)encodedDataWithImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image format:(SDImageFormat)format;</span><br></pre></td></tr></table></figure><h5 id="SDWebImageProgressiveCoder-协议"><a href="#SDWebImageProgressiveCoder-协议" class="headerlink" title="SDWebImageProgressiveCoder 协议"></a><code>SDWebImageProgressiveCoder</code> 协议</h5><p>该协议提供自定义逐行图像解码的图像编码器协议。<br>注意：不要从主队列调用这些方法。<br>该协议使用了 <code>@required</code> 关键词，标志着里面的协议方法必须实现</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">`@required` //标志着里面的协议方法必须实现</span><br><span class="line">/**</span><br><span class="line"> 如果此编码器可以增量解码某些数据，返回<span class="type">YES</span>，否则，它应该传递给另一个解码器。</span><br><span class="line"> </span><br><span class="line"> @param <span class="class"><span class="keyword">data</span> 图片数据，以便可以查看它</span></span><br><span class="line"> @return 如果此编码器可以增量解码该数据，返回<span class="type">YES</span>，否则返回<span class="type">NO</span></span><br><span class="line"> */</span><br><span class="line">- (<span class="type">BOOL</span>)canIncrementallyDecodeFromData:(nullable <span class="type">NSData</span> *)<span class="class"><span class="keyword">data</span>;</span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">将图片数据增量解码为图片</span><br><span class="line"></span><br><span class="line"> @param <span class="class"><span class="keyword">data</span> 到目前为止已下载的图片数据</span></span><br><span class="line"> @param finished 下载是否已经结束</span><br><span class="line"> @warning 因为增量解码需要保持解码的上下文，我们将为每个下载操作分配一个具有相同类的新实例，以避免冲突</span><br><span class="line"> @return <span class="type">The</span> decoded image from <span class="class"><span class="keyword">data</span></span></span><br><span class="line"> */</span><br><span class="line">- (nullable <span class="type">UIImage</span> *)incrementallyDecodedImageWithData:(nullable <span class="type">NSData</span> *)<span class="class"><span class="keyword">data</span> finished:(<span class="type">BOOL</span>)finished;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 内部实现了一个图片解码/编码的图片编码器，用于图片的编解码、压缩。其中涉及到编解码管理（&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;）、编解码协议（&lt;code&gt;SDWebImageCoder&lt;/code&gt;）、PNG/JPEG/TIFF编解码，解压缩，显示大图（&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;）、GIF编解码（&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;）、WebP编解码（&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;）以及辅助类（&lt;code&gt;SDWebImageCoderHelper&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;本篇只做 &lt;code&gt;SDWebImageCoder&lt;/code&gt; 的分析。 &lt;code&gt;SDWebImageCoder&lt;/code&gt; 是编解码协议，包含两个协议：&lt;code&gt;SDWebImageCoder&lt;/code&gt; 和 &lt;code&gt;SDWebImageProgressiveCoder&lt;/code&gt;，两个协议定义了图片编解码类的接口。&lt;/p&gt;
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 五 （SDWebImageDownloaderOperation）</title>
    <link href="http://guohuaden.com/2018/10/11/Read-SDWebImage-SDWebImageDownloaderOperation/"/>
    <id>http://guohuaden.com/2018/10/11/Read-SDWebImage-SDWebImageDownloaderOperation/</id>
    <published>2018-10-11T09:58:01.000Z</published>
    <updated>2018-10-25T11:23:12.187Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 的图片下载是由 <code>SDWebImageDownloader</code> 类实现的，该类是一个异步下载管理器。主要工作是下载相关配置项的管理，包括下载队列的先后顺序、最大下载任务数量控制、下载队列中的任务创建、取消、暂停等任务管理，以及其他的 <code>HTTPS</code> 和 <code>HTTP Header</code> 的设置。</p><p>而真正实现图片下载的是 <code>SDWebImageDownloaderOperation</code> 类。该类的 <code>Operation</code> 操作依赖系统提供的 <code>NSURLConnection</code> 类来实现图片的下载。在 <code>SDWebImageDownloader</code> 类中，将图片的下载操作封装成了自定义的一个类 <code>SDWebImageDownloaderOperation</code> ，然后添加到了操作队列中。当操作队列调用这个操作时，会调用操作对象的 <code>- (void)start</code> 方法，在重写的这个方法中，生成了任务对象<code>dataTask</code>，并调用<code>resume</code>开始执行任务。<br>因为S<code>DWebImageDownloaderOperation</code>类遵守了<code>dataTask</code>对象的协议，所以<code>dataTask</code>执行的结果会通过代理方法进行回调。在代理方法中，获取并保存了服务器返回的数据，并在任务执行结束后，对数据进行解码、缩放和解压。处理完成后就进行回调。</p><p><strong>梳理</strong>：<br> <code>SDWebImageDownloaderOperation</code>是一个自定义、并行的 <code>NSOperation</code> 子类。这个子类主要实现的功能有：<br>由于只自定义的并行 <code>NSOperation</code>,所以需要管理 <code>executing</code> , <code>finished</code> 等各种属性的处理，并且手动触发KVO。<br>在 <code>- (void)start</code> 方法里面实现主要逻辑，在重写的这个方法中生成了任务对象<code>dataTask</code>，并调用<code>resume</code>开始执行任务。<br>在 <code>NSURLSessionTaskDelegate</code> 和 <code>NSURLSessionDataDelegate</code> 中处理数据的加载，以及进度Block的处理。<br>如果 <code>unownedSession</code> 属性因为某种原因是<code>nil</code>，则手动初始化一个做网络请求。<br>在代理方法中对认证、数据拼装、完成回调<code>Block</code>做处理。</p><p>通过发送 <code>SDWebImageDownloadStopNotification</code>,<br><code>SDWebImageDownloadFinishNotification</code>,<br><code>SDWebImageDownloadReceiveResponseNotification</code>, <code>SDWebImageDownloadStartNotification</code>来通知 <code>Operation</code> 的状态。</p><h3 id="h文件"><a href="#h文件" class="headerlink" title=".h文件"></a>.h文件</h3><p>四个通知，<code>SDWebImageDownloaderOperation</code> 在四种情况下会发送通知：</p><ol><li>开始下载</li><li>接收到数据</li><li>停止下载</li><li>结束下载</li></ol><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadStartNotification;</span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadReceiveResponseNotification;</span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadStopNotification;</span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadFinishNotification;</span><br></pre></td></tr></table></figure><h3 id="SDWebImageDownloaderOperationInterface协议"><a href="#SDWebImageDownloaderOperationInterface协议" class="headerlink" title="SDWebImageDownloaderOperationInterface协议"></a><code>SDWebImageDownloaderOperationInterface</code>协议</h3><p>如果想要实现一个自定义的下载操作，就必须继承自 <code>NSOperation</code> ,同时实现 <code>SDWebImageDownloaderOperationInterface</code> 这个协议。</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">SDWebImageDownloaderOperationInterface</span>&lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用NSURLRequest,NSURLSession和SDWebImageDownloaderOptions初始化</span></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithRequest:(<span class="keyword">nullable</span> <span class="built_in">NSURLRequest</span> *)request</span><br><span class="line">                              inSession:(<span class="keyword">nullable</span> <span class="built_in">NSURLSession</span> *)session</span><br><span class="line">                                options:(SDWebImageDownloaderOptions)options;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以为每一个NSOperation自由的添加相应对象</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="keyword">id</span>)addHandlersForProgress:(<span class="keyword">nullable</span> SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                            completed:(<span class="keyword">nullable</span> SDWebImageDownloaderCompletedBlock)completedBlock;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否需要解压图片</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldDecompressImages;</span><br><span class="line"><span class="comment">//设置是否需要解压图片</span></span><br><span class="line">- (<span class="keyword">void</span>)setShouldDecompressImages:(<span class="built_in">BOOL</span>)value;</span><br><span class="line"></span><br><span class="line"><span class="comment">//证书</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSURLCredential</span> *)credential;</span><br><span class="line"><span class="comment">//设置证书</span></span><br><span class="line">- (<span class="keyword">void</span>)setCredential:(<span class="keyword">nullable</span> <span class="built_in">NSURLCredential</span> *)value;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消token</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)cancel:(<span class="keyword">nullable</span> <span class="keyword">id</span>)token;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="属性声明-和-方法"><a href="#属性声明-和-方法" class="headerlink" title="属性声明 和 方法"></a>属性声明 和 方法</h3><p><code>SDWebImageDownloaderOperation</code> 遵守 <code>SDWebImageDownloaderOperationInterface</code>, <code>SDWebImageOperation</code>, <code>NSURLSessionTaskDelegate</code>, <code>NSURLSessionDataDelegate</code> 等协议</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 操作任务使用的请求。（外部只读）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLRequest</span> *request;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 操作任务（外部只读）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLSessionTask</span> *dataTask;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//是否需要解压图片</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> shouldDecompressImages;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  用于确定URL连接是否应查询凭据存储以验证连接。</span></span><br><span class="line"><span class="comment"> *  @deprecated Not used for a couple of versions</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">BOOL</span> shouldUseCredentialStorage __deprecated_msg(<span class="string">"Property deprecated. Does nothing. Kept only for backwards compatibility"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The credential used for authentication challenges 在 `-URLSession:task:didReceiveChallenge:completionHandler:`中用于身份验证挑战的凭证.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 如果存在请求URL的用户名或密码，则会覆盖此任何共享凭据。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLCredential</span> *credential;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SDWebImageDownloaderOptions选项 （外部只读）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) SDWebImageDownloaderOptions options;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 预期的数据大小。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> expectedSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 操作任务返回的响应。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLResponse</span> *response;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  I初始化`SDWebImageDownloaderOperation` 对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @see SDWebImageDownloaderOperation</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param request       URL请求</span></span><br><span class="line"><span class="comment"> *  @param session       将运行此操作的URL会话</span></span><br><span class="line"><span class="comment"> *  @param options       下载的选项</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @return 初始化实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithRequest:(<span class="keyword">nullable</span> <span class="built_in">NSURLRequest</span> *)request</span><br><span class="line">                              inSession:(<span class="keyword">nullable</span> <span class="built_in">NSURLSession</span> *)session</span><br><span class="line">                                options:(SDWebImageDownloaderOptions)options <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  添加处理程序以进行和完成。 返回可以传递给-cancel的tokent：取消这组回调。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param progressBlock  当新的数据块到达时执行的块。</span></span><br><span class="line"><span class="comment"> *                        @note 在后台队列上执行进度块</span></span><br><span class="line"><span class="comment"> *  @param completedBlock 当下载完成时执行的代码块</span></span><br><span class="line"><span class="comment"> *                        @note 已完成的代码块在主队列上执行以获得成功。如果发现错误，则代码块可能会在后台队列上执行</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @return 用于取消这组处理程序的token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="keyword">id</span>)addHandlersForProgress:(<span class="keyword">nullable</span> SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                            completed:(<span class="keyword">nullable</span> SDWebImageDownloaderCompletedBlock)completedBlock;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  取消一组回调. 一旦所有的回调被取消，该操作取消</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param token代表一组要取消的回调</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @return 如果操作已停止，则为YES，因为这是要取消的最后一个token。 否则为NO。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)cancel:(<span class="keyword">nullable</span> <span class="keyword">id</span>)token;</span><br></pre></td></tr></table></figure><h3 id="m文件"><a href="#m文件" class="headerlink" title=".m文件"></a>.m文件</h3><p>信号量实现锁机制，这种锁性能要比NSLock高</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define LOCK(<span class="name">lock</span>) dispatch_semaphore_wait(<span class="name">lock</span>, DISPATCH_TIME_FOREVER)<span class="comment">;</span></span><br><span class="line">#define UNLOCK(<span class="name">lock</span>) dispatch_semaphore_signal(<span class="name">lock</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>静态全局变量</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始下载的通知</span></span><br><span class="line"><span class="built_in">NSString</span> *<span class="keyword">const</span> SDWebImageDownloadStartNotification = <span class="string">@"SDWebImageDownloadStartNotification"</span>;</span><br><span class="line"><span class="comment">//接受数据的通知</span></span><br><span class="line"><span class="built_in">NSString</span> *<span class="keyword">const</span> SDWebImageDownloadReceiveResponseNotification = <span class="string">@"SDWebImageDownloadReceiveResponseNotification"</span>;</span><br><span class="line"><span class="comment">//停止下载的通知</span></span><br><span class="line"><span class="built_in">NSString</span> *<span class="keyword">const</span> SDWebImageDownloadStopNotification = <span class="string">@"SDWebImageDownloadStopNotification"</span>;</span><br><span class="line"><span class="comment">//结束下载的通知</span></span><br><span class="line"><span class="built_in">NSString</span> *<span class="keyword">const</span> SDWebImageDownloadFinishNotification = <span class="string">@"SDWebImageDownloadFinishNotification"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态全局变量作为下载进度block字典存储的key</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> kProgressCallbackKey = <span class="string">@"progress"</span>;</span><br><span class="line"><span class="comment">//静态全局变量作为结束下载block字典存储的key</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *<span class="keyword">const</span> kCompletedCallbackKey = <span class="string">@"completed"</span>;</span><br></pre></td></tr></table></figure><h4 id="属性声明"><a href="#属性声明" class="headerlink" title="属性声明"></a>属性声明</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//回调Block列表</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">NSMutableArray</span>&lt;SDCallbacksDictionary *&gt; *callbackBlocks;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义并行Operation需要管理的两个属性。默认是readonly的，我们这里通过声明改为可修改的。方便我们在后面操作。默认情况下_executing和finished都是NO</span></span><br><span class="line"><span class="comment">//是否正在执行</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>, <span class="keyword">getter</span> = isExecuting) <span class="built_in">BOOL</span> executing;</span><br><span class="line"><span class="comment">//是否结束</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>, <span class="keyword">getter</span> = isFinished) <span class="built_in">BOOL</span> finished;</span><br><span class="line"><span class="comment">//图片数据</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSMutableData</span> *imageData;</span><br><span class="line"><span class="comment">//缓存数据</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSData</span> *cachedData; <span class="comment">// for `SDWebImageDownloaderIgnoreCachedResponse`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通过SDWebImageDownloader传过来。所以这里是weak。因为他是通过SDWebImageDownloader管理的。</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLSession</span> *unownedSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果unownedSession是nil，我们需要手动创建一个并且管理他的生命周期和代理方法</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLSession</span> *ownedSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">//dataTask对象</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">readwrite</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLSessionTask</span> *dataTask;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个锁，以保持对`callbackBlocks`线程安全的访问</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) dispatch_semaphore_t callbacksLock; <span class="comment">// a lock to keep the access to `callbackBlocks` thread-safe</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一个并行queue。用于控制数据的处理</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">dispatch_queue_t</span> coderQueue; <span class="comment">// the queue to do image decoding</span></span><br><span class="line"><span class="meta">#if SD_UIKIT</span></span><br><span class="line"><span class="comment">//如果用户设置了后台继续加载选线。则通过backgroundTask来继续下载图片</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">UIBackgroundTaskIdentifier</span> backgroundTaskId;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//图片解码器，有意思的是如果图片没有完全下载完成时也可以解码展示部分图片</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="keyword">id</span>&lt;SDWebImageProgressiveCoder&gt; progressiveCoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h4 id="方法实现"><a href="#方法实现" class="headerlink" title="方法实现"></a>方法实现</h4><p>编译器自动添加get和set方法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">synthesize</span> executing = _executing;</span><br><span class="line">@<span class="keyword">synthesize</span> finished = _finished;</span><br></pre></td></tr></table></figure><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> initWithRequest:<span class="literal">nil</span> inSession:<span class="literal">nil</span> options:<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithRequest:(<span class="keyword">nullable</span> <span class="built_in">NSURLRequest</span> *)request</span><br><span class="line">                              inSession:(<span class="keyword">nullable</span> <span class="built_in">NSURLSession</span> *)session</span><br><span class="line">                                options:(SDWebImageDownloaderOptions)options &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span> = [<span class="keyword">super</span> init])) &#123;</span><br><span class="line">        _request = [request <span class="keyword">copy</span>];</span><br><span class="line">        _shouldDecompressImages = <span class="literal">YES</span>;</span><br><span class="line">        _options = options;</span><br><span class="line">        _callbackBlocks = [<span class="built_in">NSMutableArray</span> new];</span><br><span class="line">        <span class="comment">//默认情况下_executing和finished都是NO</span></span><br><span class="line">        _executing = <span class="literal">NO</span>;</span><br><span class="line">        _finished = <span class="literal">NO</span>;</span><br><span class="line">        _expectedSize = <span class="number">0</span>;</span><br><span class="line">        _unownedSession = session;</span><br><span class="line">        _callbacksLock = dispatch_semaphore_create(<span class="number">1</span>);</span><br><span class="line">        _coderQueue = dispatch_queue_create(<span class="string">"com.hackemist.SDWebImageDownloaderOperationCoderQueue"</span>, DISPATCH_QUEUE_SERIAL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给Operation添加进度和回调Block</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 给Operation添加进度和回调Block</span></span><br><span class="line"><span class="comment"> @param progressBlock 进度Block</span></span><br><span class="line"><span class="comment"> @param completedBlock 回调Block</span></span><br><span class="line"><span class="comment"> @return 回调字典</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="keyword">id</span>)addHandlersForProgress:(<span class="keyword">nullable</span> SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                            completed:(<span class="keyword">nullable</span> SDWebImageDownloaderCompletedBlock)completedBlock &#123;</span><br><span class="line">    <span class="comment">//初始化一个回调Block列表                      </span></span><br><span class="line">    SDCallbacksDictionary *callbacks = [<span class="built_in">NSMutableDictionary</span> new];</span><br><span class="line">    <span class="comment">//如果progressBlock 和 completedBlock 存在，就把Operation对应的回调和进度Block添加到回调Block列表中</span></span><br><span class="line">    <span class="keyword">if</span> (progressBlock) callbacks[kProgressCallbackKey] = [progressBlock <span class="keyword">copy</span>];</span><br><span class="line">    <span class="keyword">if</span> (completedBlock) callbacks[kCompletedCallbackKey] = [completedBlock <span class="keyword">copy</span>];</span><br><span class="line">    LOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    [<span class="keyword">self</span>.callbackBlocks addObject:callbacks];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="keyword">return</span> callbacks;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过key获取回调列表组</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&gt; *)callbacksForKey:(<span class="built_in">NSString</span> *)key &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;<span class="keyword">id</span>&gt; *callbacks = [[<span class="keyword">self</span>.callbackBlocks valueForKey:key] mutableCopy];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="comment">// 我们需要删除[NSNull null]，因为每个回调可能并不总是有进度Block</span></span><br><span class="line">    [callbacks removeObjectIdenticalTo:[<span class="built_in">NSNull</span> null]];</span><br><span class="line">    <span class="keyword">return</span> [callbacks <span class="keyword">copy</span>]; <span class="comment">// strip mutability here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过token判断是否需要取消Opration</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)cancel:(<span class="keyword">nullable</span> <span class="keyword">id</span>)token &#123;</span><br><span class="line">    <span class="built_in">BOOL</span> shouldCancel = <span class="literal">NO</span>;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="comment">//通过token移除对象</span></span><br><span class="line">    [<span class="keyword">self</span>.callbackBlocks removeObjectIdenticalTo:token];</span><br><span class="line">    <span class="comment">//如果self.callbackBlocks的count为0，则shouldCancel = YES</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.callbackBlocks.count == <span class="number">0</span>) &#123;</span><br><span class="line">        shouldCancel = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="comment">//如果shouldCancel = YES，则执行取消操作</span></span><br><span class="line">    <span class="keyword">if</span> (shouldCancel) &#123;</span><br><span class="line">        [<span class="keyword">self</span> cancel];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> shouldCancel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="下载、取消、复位、完成等操作"><a href="#下载、取消、复位、完成等操作" class="headerlink" title="下载、取消、复位、完成等操作"></a>下载、取消、复位、完成等操作</h5><p>并行的Operation需要重写这个方法，在这个方法里面做具体的处理</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)start &#123;</span><br><span class="line">    <span class="comment">//加同步锁</span></span><br><span class="line">    <span class="keyword">@synchronized</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="comment">//如果已经被设置为取消状态，就直接重新复位：将Operation从回调Block列表中移除，dataTask设置为nil，并将NSURLSession注销并取消（invalidateAndCancel）</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.isCancelled) &#123;</span><br><span class="line">            <span class="keyword">self</span>.finished = <span class="literal">YES</span>;</span><br><span class="line">            [<span class="keyword">self</span> reset];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#if SD_UIKIT</span></span><br><span class="line">        <span class="comment">//查看是否能获取到UIApplication类</span></span><br><span class="line">        Class <span class="built_in">UIApplicationClass</span> = <span class="built_in">NSClassFromString</span>(<span class="string">@"UIApplication"</span>);</span><br><span class="line">        <span class="built_in">BOOL</span> hasApplication = <span class="built_in">UIApplicationClass</span> &amp;&amp; [<span class="built_in">UIApplicationClass</span> respondsToSelector:<span class="keyword">@selector</span>(sharedApplication)];</span><br><span class="line">        <span class="comment">//如果有UIApplication类并设置了Background模式，则设置一个backgroundTask</span></span><br><span class="line">        <span class="keyword">if</span> (hasApplication &amp;&amp; [<span class="keyword">self</span> shouldContinueWhenAppEntersBackground]) &#123;</span><br><span class="line">        <span class="comment">//开始后台下载</span></span><br><span class="line">            __<span class="keyword">weak</span> __typeof__ (<span class="keyword">self</span>) wself = <span class="keyword">self</span>;</span><br><span class="line">            <span class="built_in">UIApplication</span> * app = [<span class="built_in">UIApplicationClass</span> performSelector:<span class="keyword">@selector</span>(sharedApplication)];</span><br><span class="line">            <span class="keyword">self</span>.backgroundTaskId = [app beginBackgroundTaskWithExpirationHandler:^&#123;</span><br><span class="line">            <span class="comment">//后台下载任务结束，做清理工作（取消任务）</span></span><br><span class="line">                __<span class="keyword">strong</span> __<span class="keyword">typeof</span> (wself) sself = wself;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (sself) &#123;</span><br><span class="line">                    [sself cancel];</span><br><span class="line"></span><br><span class="line">                    [app endBackgroundTask:sself.backgroundTaskId];</span><br><span class="line">                    sself.backgroundTaskId = <span class="built_in">UIBackgroundTaskInvalid</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">        <span class="comment">//获取传入的网络会话对象</span></span><br><span class="line">        <span class="built_in">NSURLSession</span> *session = <span class="keyword">self</span>.unownedSession;</span><br><span class="line">        <span class="comment">//如果SDWebImageDownloader传入的session是nil，则手动初始化一个session对象</span></span><br><span class="line">        <span class="keyword">if</span> (!session) &#123;</span><br><span class="line">            <span class="built_in">NSURLSessionConfiguration</span> *sessionConfig = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</span><br><span class="line">            <span class="comment">//请求超时时间 15秒</span></span><br><span class="line">            sessionConfig.timeoutIntervalForRequest = <span class="number">15</span>;</span><br><span class="line">            session = [<span class="built_in">NSURLSession</span> sessionWithConfiguration:sessionConfig</span><br><span class="line">                                                    delegate:<span class="keyword">self</span></span><br><span class="line">                                               delegateQueue:<span class="literal">nil</span>];</span><br><span class="line">            <span class="keyword">self</span>.ownedSession = session;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果设置了忽略从NSURLCache中获取缓存的选项</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.options &amp; SDWebImageDownloaderIgnoreCachedResponse) &#123;</span><br><span class="line">            <span class="comment">// 获取缓存的数据以供日后检查，不存在就初始化一个URLCache对象</span></span><br><span class="line">            <span class="built_in">NSURLCache</span> *URLCache = session.configuration.URLCache;</span><br><span class="line">            <span class="keyword">if</span> (!URLCache) &#123;</span><br><span class="line">                URLCache = [<span class="built_in">NSURLCache</span> sharedURLCache];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">NSCachedURLResponse</span> *cachedResponse;</span><br><span class="line">            <span class="comment">// NSURLCache的 `cachedResponseForRequest:` 不是线程安全的，所以这里加了同步锁。 详情看（ https://developer.apple.com/documentation/foundation/nsurlcache#2317483）</span></span><br><span class="line">            <span class="keyword">@synchronized</span> (URLCache) &#123;</span><br><span class="line">                cachedResponse = [URLCache cachedResponseForRequest:<span class="keyword">self</span>.request];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (cachedResponse) &#123;</span><br><span class="line">                <span class="keyword">self</span>.cachedData = cachedResponse.data;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//生成NSURLSessionTask类对象</span></span><br><span class="line">        <span class="keyword">self</span>.dataTask = [session dataTaskWithRequest:<span class="keyword">self</span>.request];</span><br><span class="line">        <span class="comment">//设置为正在执行状态</span></span><br><span class="line">        <span class="keyword">self</span>.executing = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果NSURLSessionTask类对象存在</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.dataTask) &#123;</span><br><span class="line"><span class="meta">#pragma clang diagnostic push</span></span><br><span class="line"><span class="meta">#pragma clang diagnostic ignored <span class="meta-string">"-Wunguarded-availability"</span></span></span><br><span class="line">        <span class="comment">//因为NSURLSessionTask的priority这个属性是iOS8.0以后才有的，所以要判断一下</span></span><br><span class="line">        <span class="keyword">if</span> ([<span class="keyword">self</span>.dataTask respondsToSelector:<span class="keyword">@selector</span>(setPriority:)]) &#123;</span><br><span class="line">        <span class="comment">//根据设置的选项设置优先级</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.options &amp; SDWebImageDownloaderHighPriority) &#123;</span><br><span class="line">                <span class="keyword">self</span>.dataTask.priority = <span class="built_in">NSURLSessionTaskPriorityHigh</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>.options &amp; SDWebImageDownloaderLowPriority) &#123;</span><br><span class="line">                <span class="keyword">self</span>.dataTask.priority = <span class="built_in">NSURLSessionTaskPriorityLow</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#pragma clang diagnostic pop</span></span><br><span class="line">        <span class="comment">//发送请求，开始执行任务</span></span><br><span class="line">        [<span class="keyword">self</span>.dataTask resume];</span><br><span class="line">        <span class="comment">//获取到进度回调代码块并调用</span></span><br><span class="line">        <span class="keyword">for</span> (SDWebImageDownloaderProgressBlock progressBlock <span class="keyword">in</span> [<span class="keyword">self</span> callbacksForKey:kProgressCallbackKey]) &#123;</span><br><span class="line">            progressBlock(<span class="number">0</span>, <span class="built_in">NSURLResponseUnknownLength</span>, <span class="keyword">self</span>.request.URL);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//异步主队列发送下载开始通知</span></span><br><span class="line">        __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:SDWebImageDownloadStartNotification object:weakSelf];</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果没有获取到NSURLSessionTask类对象，就回调错误并返回</span></span><br><span class="line">        [<span class="keyword">self</span> callCompletionBlocksWithError:[<span class="built_in">NSError</span> errorWithDomain:<span class="built_in">NSURLErrorDomain</span> code:<span class="built_in">NSURLErrorUnknown</span> userInfo:@&#123;<span class="built_in">NSLocalizedDescriptionKey</span> : <span class="string">@"Task can't be initialized"</span>&#125;]];</span><br><span class="line">        [<span class="keyword">self</span> done];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#if SD_UIKIT</span></span><br><span class="line">    <span class="comment">//如果是后台任务，就关闭后台任务</span></span><br><span class="line">    Class <span class="built_in">UIApplicationClass</span> = <span class="built_in">NSClassFromString</span>(<span class="string">@"UIApplication"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">UIApplicationClass</span> || ![<span class="built_in">UIApplicationClass</span> respondsToSelector:<span class="keyword">@selector</span>(sharedApplication)]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.backgroundTaskId != <span class="built_in">UIBackgroundTaskInvalid</span>) &#123;</span><br><span class="line">        <span class="built_in">UIApplication</span> * app = [<span class="built_in">UIApplication</span> performSelector:<span class="keyword">@selector</span>(sharedApplication)];</span><br><span class="line">        [app endBackgroundTask:<span class="keyword">self</span>.backgroundTaskId];</span><br><span class="line">        <span class="keyword">self</span>.backgroundTaskId = <span class="built_in">UIBackgroundTaskInvalid</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消Operation操作。</span></span><br><span class="line">- (<span class="keyword">void</span>)cancel &#123;</span><br><span class="line">    <span class="keyword">@synchronized</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        [<span class="keyword">self</span> cancelInternal];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">- (<span class="keyword">void</span>)cancelInternal &#123;</span><br><span class="line">    <span class="comment">//如果已经结束，返回</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.isFinished) <span class="keyword">return</span>;</span><br><span class="line">    [<span class="keyword">super</span> cancel];</span><br><span class="line">    <span class="comment">//如果存在NSURLSessionTask类对象，就取消，并且异步主队列发送下载开始通知</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.dataTask) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.dataTask cancel];</span><br><span class="line">        __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:SDWebImageDownloadStopNotification object:weakSelf];</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// As we cancelled the task, its callback won't be called and thus won't</span></span><br><span class="line">        <span class="comment">// maintain the isFinished and isExecuting flags.</span></span><br><span class="line">        <span class="comment">//更新执行状态和结束状态</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.isExecuting) <span class="keyword">self</span>.executing = <span class="literal">NO</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">self</span>.isFinished) <span class="keyword">self</span>.finished = <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//复位</span></span><br><span class="line">    [<span class="keyword">self</span> reset];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完成Operation操作</span></span><br><span class="line">- (<span class="keyword">void</span>)done &#123;</span><br><span class="line">    <span class="comment">//更新执行状态和结束状态</span></span><br><span class="line">    <span class="keyword">self</span>.finished = <span class="literal">YES</span>;</span><br><span class="line">    <span class="keyword">self</span>.executing = <span class="literal">NO</span>;</span><br><span class="line">     <span class="comment">//复位</span></span><br><span class="line">    [<span class="keyword">self</span> reset];</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//复位</span></span><br><span class="line">- (<span class="keyword">void</span>)reset &#123;</span><br><span class="line">    <span class="comment">//删除回调block列表中所有的对象</span></span><br><span class="line">    LOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    [<span class="keyword">self</span>.callbackBlocks removeAllObjects];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.callbacksLock);</span><br><span class="line">    <span class="comment">//NSURLSessionTask类对象置为nil</span></span><br><span class="line">    <span class="keyword">self</span>.dataTask = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//注销网络会话对象</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.ownedSession) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.ownedSession invalidateAndCancel];</span><br><span class="line">        <span class="keyword">self</span>.ownedSession = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置结束状态</span></span><br><span class="line">- (<span class="keyword">void</span>)setFinished:(<span class="built_in">BOOL</span>)finished &#123;</span><br><span class="line">    [<span class="keyword">self</span> willChangeValueForKey:<span class="string">@"isFinished"</span>];</span><br><span class="line">    _finished = finished;</span><br><span class="line">    [<span class="keyword">self</span> didChangeValueForKey:<span class="string">@"isFinished"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置执行状态</span></span><br><span class="line">- (<span class="keyword">void</span>)setExecuting:(<span class="built_in">BOOL</span>)executing &#123;</span><br><span class="line">    [<span class="keyword">self</span> willChangeValueForKey:<span class="string">@"isExecuting"</span>];</span><br><span class="line">    _executing = executing;</span><br><span class="line">    [<span class="keyword">self</span> didChangeValueForKey:<span class="string">@"isExecuting"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断Operation是否是并发</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)isConcurrent &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="NSURLSessionDataDelegate"><a href="#NSURLSessionDataDelegate" class="headerlink" title="NSURLSessionDataDelegate"></a>NSURLSessionDataDelegate</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//收到服务端响应，再一次请求中只会执行一次</span></span><br><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session</span><br><span class="line">          dataTask:(<span class="built_in">NSURLSessionDataTask</span> *)dataTask</span><br><span class="line">didReceiveResponse:(<span class="built_in">NSURLResponse</span> *)response</span><br><span class="line"> completionHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSURLSessionResponseDisposition</span> disposition))completionHandler &#123;</span><br><span class="line">    <span class="built_in">NSURLSessionResponseDisposition</span> disposition = <span class="built_in">NSURLSessionResponseAllow</span>;</span><br><span class="line">    <span class="comment">//获取要下载图片的长度</span></span><br><span class="line">    <span class="built_in">NSInteger</span> expected = (<span class="built_in">NSInteger</span>)response.expectedContentLength;</span><br><span class="line">    expected = expected &gt; <span class="number">0</span> ? expected : <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//设置当前expectedSize</span></span><br><span class="line">    <span class="keyword">self</span>.expectedSize = expected;</span><br><span class="line">    <span class="comment">//设置当前response</span></span><br><span class="line">    <span class="keyword">self</span>.response = response;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//根据状态代码判断氢气的状态</span></span><br><span class="line">    <span class="built_in">NSInteger</span> statusCode = [response respondsToSelector:<span class="keyword">@selector</span>(statusCode)] ? ((<span class="built_in">NSHTTPURLResponse</span> *)response).statusCode : <span class="number">200</span>;</span><br><span class="line">    <span class="built_in">BOOL</span> valid = statusCode &lt; <span class="number">400</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">//'304 Not Modified'是一个特殊的。 如果没有缓存数据，则应将其视为已取消。</span></span><br><span class="line">    <span class="comment">//当服务器响应304并且URLCache命中时，URLSession当前行为将返回200状态代码。 但这不是标准行为，我们只是添加一个检查</span></span><br><span class="line">    <span class="keyword">if</span> (statusCode == <span class="number">304</span> &amp;&amp; !<span class="keyword">self</span>.cachedData) &#123;</span><br><span class="line">        valid = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果状态代码是有效的</span></span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">        <span class="comment">//遍历进度回调块并触发进度block回调</span></span><br><span class="line">        <span class="keyword">for</span> (SDWebImageDownloaderProgressBlock progressBlock <span class="keyword">in</span> [<span class="keyword">self</span> callbacksForKey:kProgressCallbackKey]) &#123;</span><br><span class="line">            progressBlock(<span class="number">0</span>, expected, <span class="keyword">self</span>.request.URL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 状态代码无效并标记为已取消。 不要调用`[self.dataTask cancel]` which may mass up URLSession life cycle</span></span><br><span class="line">        disposition = <span class="built_in">NSURLSessionResponseCancel</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//异步主队列发送接受数据通知</span></span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:SDWebImageDownloadReceiveResponseNotification object:weakSelf];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//表示允许继续加载</span></span><br><span class="line">    <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">        completionHandler(disposition);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每次收到数据都会触发， 可能多次调用</span></span><br><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session dataTask:(<span class="built_in">NSURLSessionDataTask</span> *)dataTask didReceiveData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//向可变数据中添加接收到的数据</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.imageData) &#123;</span><br><span class="line">        <span class="keyword">self</span>.imageData = [[<span class="built_in">NSMutableData</span> alloc] initWithCapacity:<span class="keyword">self</span>.expectedSize];</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.imageData appendData:data];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果设置了SDWebImageDownloaderProgressiveDownload选项下载（即展示已经下载的部分,并expectedSize返回的图片size大于0）</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span>.options &amp; SDWebImageDownloaderProgressiveDownload) &amp;&amp; <span class="keyword">self</span>.expectedSize &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 获得图片数据</span></span><br><span class="line">        __block <span class="built_in">NSData</span> *imageData = [<span class="keyword">self</span>.imageData <span class="keyword">copy</span>];</span><br><span class="line">        <span class="comment">// 获得下载的总字节数</span></span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">NSInteger</span> totalSize = imageData.length;</span><br><span class="line">        <span class="comment">// 获得结束的状态</span></span><br><span class="line">        <span class="built_in">BOOL</span> finished = (totalSize &gt;= <span class="keyword">self</span>.expectedSize);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果图片解码器不存在</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">self</span>.progressiveCoder) &#123;</span><br><span class="line">            <span class="comment">// 因为增量解码需要保留解码后的上下文，我们将为每个下载操作分配一个具有相同类的新实例，以避免冲突</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">id</span>&lt;SDWebImageCoder&gt;coder <span class="keyword">in</span> [SDWebImageCodersManager sharedInstance].coders) &#123;</span><br><span class="line">                <span class="keyword">if</span> ([coder conformsToProtocol:<span class="class"><span class="keyword">@protocol</span>(<span class="title">SDWebImageProgressiveCoder</span>)] &amp;&amp;</span></span><br><span class="line">                    [((<span class="keyword">id</span>&lt;SDWebImageProgressiveCoder&gt;)coder) canIncrementallyDecodeFromData:imageData]) &#123;</span><br><span class="line">                    <span class="keyword">self</span>.progressiveCoder = [[[coder <span class="keyword">class</span>] alloc] init];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 逐步解码编码器队列中的图像，自定义串行队列异步执行</span></span><br><span class="line">        <span class="built_in">dispatch_async</span>(<span class="keyword">self</span>.coderQueue, ^&#123;</span><br><span class="line">           <span class="comment">//解码生成图片（增量解码图像数据到图像）</span></span><br><span class="line">            <span class="built_in">UIImage</span> *image = [<span class="keyword">self</span>.progressiveCoder incrementallyDecodedImageWithData:imageData finished:finished];</span><br><span class="line">             <span class="comment">//如果图片存在，通过URL获取key，再对image进行缩放操作</span></span><br><span class="line">            <span class="keyword">if</span> (image) &#123;</span><br><span class="line">                <span class="built_in">NSString</span> *key = [[SDWebImageManager sharedManager] cacheKeyForURL:<span class="keyword">self</span>.request.URL];</span><br><span class="line">                <span class="comment">//image进行缩放操作</span></span><br><span class="line">                image = [<span class="keyword">self</span> scaledImageForKey:key image:image];</span><br><span class="line">                <span class="comment">//如果需要压缩图片，就执行压缩操作</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">self</span>.shouldDecompressImages) &#123;</span><br><span class="line">                    image = [[SDWebImageCodersManager sharedInstance] decompressedImageWithImage:image data:&amp;imageData options:@&#123;SDWebImageCoderScaleDownLargeImagesKey: @(<span class="literal">NO</span>)&#125;];</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//当`finished`=YES时，不再保留逐行解码图片。 因为它们用于视图渲染但不从下载器选项中获取全部功能。 并且一些编码器实现可能在逐行解码和正常解码之间不一致。</span></span><br><span class="line">                <span class="comment">//进行完成回调</span></span><br><span class="line">                [<span class="keyword">self</span> callCompletionBlocksWithImage:image imageData:<span class="literal">nil</span> error:<span class="literal">nil</span> finished:<span class="literal">NO</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调进度</span></span><br><span class="line">    <span class="keyword">for</span> (SDWebImageDownloaderProgressBlock progressBlock <span class="keyword">in</span> [<span class="keyword">self</span> callbacksForKey:kProgressCallbackKey]) &#123;</span><br><span class="line">        progressBlock(<span class="keyword">self</span>.imageData.length, <span class="keyword">self</span>.expectedSize, <span class="keyword">self</span>.request.URL);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当NSURLSessionDataTask弯成接受所有预期数据后会调用这个代理方法，询问代理对象是否将响应存储在缓存中</span></span><br><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session</span><br><span class="line">          dataTask:(<span class="built_in">NSURLSessionDataTask</span> *)dataTask</span><br><span class="line"> willCacheResponse:(<span class="built_in">NSCachedURLResponse</span> *)proposedResponse</span><br><span class="line"> completionHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSCachedURLResponse</span> *cachedResponse))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取缓存响应</span></span><br><span class="line">    <span class="built_in">NSCachedURLResponse</span> *cachedResponse = proposedResponse;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果设置了缓存选项（SDWebImageDownloaderUseNSURLCache），就回调缓存响应，否则就回调nil，不缓存</span></span><br><span class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span>.options &amp; SDWebImageDownloaderUseNSURLCache)) &#123;</span><br><span class="line">        <span class="comment">// Prevents caching of responses</span></span><br><span class="line">        cachedResponse = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用完成代码块并传参</span></span><br><span class="line">    <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">        completionHandler(cachedResponse);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="NSURLSessionTaskDelegate-代理实现"><a href="#NSURLSessionTaskDelegate-代理实现" class="headerlink" title="NSURLSessionTaskDelegate 代理实现"></a>NSURLSessionTaskDelegate 代理实现</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当NSURLSessionTask已经完成传输数据时会调用这个代理方法</span></span><br><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session task:(<span class="built_in">NSURLSessionTask</span> *)task didCompleteWithError:(<span class="built_in">NSError</span> *)error &#123;</span><br><span class="line">    <span class="comment">//同步锁</span></span><br><span class="line">    <span class="keyword">@synchronized</span>(<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="comment">//将保存任务对象的属性置为nil</span></span><br><span class="line">        <span class="keyword">self</span>.dataTask = <span class="literal">nil</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//主队列异步发送下载停止通知，如果没有错误，发送下载结束通知</span></span><br><span class="line">        __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:SDWebImageDownloadStopNotification object:weakSelf];</span><br><span class="line">            <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">                [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:SDWebImageDownloadFinishNotification object:weakSelf];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果出错就回调错误，并调用完成方法</span></span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        [<span class="keyword">self</span> callCompletionBlocksWithError:error];</span><br><span class="line">        [<span class="keyword">self</span> done];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果有完成回调的代码块</span></span><br><span class="line">        <span class="keyword">if</span> ([<span class="keyword">self</span> callbacksForKey:kCompletedCallbackKey].count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果您指定使用`NSURLCache`，那么您在此处获得的响应就是您所需要的。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">             <span class="comment">//如果有下载的imageData</span></span><br><span class="line">            __block <span class="built_in">NSData</span> *imageData = [<span class="keyword">self</span>.imageData <span class="keyword">copy</span>];</span><br><span class="line">            <span class="keyword">if</span> (imageData) &#123;</span><br><span class="line">                <span class="comment">/**  if you specified to only use cached data via `SDWebImageDownloaderIgnoreCachedResponse`,</span></span><br><span class="line"><span class="comment">                 *  then we should check if the cached data is equal to image data</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                 如果设置了忽略缓存响应选项（SDWebImageDownloaderIgnoreCachedResponse），并且缓存数据和下载的图片数据相同</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">self</span>.options &amp; SDWebImageDownloaderIgnoreCachedResponse &amp;&amp; [<span class="keyword">self</span>.cachedData isEqualToData:imageData]) &#123;</span><br><span class="line">                    <span class="comment">//回调完成block nil，并调用完成方法</span></span><br><span class="line">                    [<span class="keyword">self</span> callCompletionBlocksWithImage:<span class="literal">nil</span> imageData:<span class="literal">nil</span> error:<span class="literal">nil</span> finished:<span class="literal">YES</span>];</span><br><span class="line">                    [<span class="keyword">self</span> done];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 在自定义串行异步执行</span></span><br><span class="line">                    <span class="built_in">dispatch_async</span>(<span class="keyword">self</span>.coderQueue, ^&#123;</span><br><span class="line">                      <span class="comment">//对下载图片数据进行解码，通过imageData获取图片</span></span><br><span class="line">                        <span class="built_in">UIImage</span> *image = [[SDWebImageCodersManager sharedInstance] decodedImageWithData:imageData];</span><br><span class="line">                        <span class="comment">//获取图片url对应的key</span></span><br><span class="line">                        <span class="built_in">NSString</span> *key = [[SDWebImageManager sharedManager] cacheKeyForURL:<span class="keyword">self</span>.request.URL];</span><br><span class="line">                        <span class="comment">//图片缩放操作</span></span><br><span class="line">                        image = [<span class="keyword">self</span> scaledImageForKey:key image:image];</span><br><span class="line">                        <span class="comment">//生成变量图片是否应该解码，</span></span><br><span class="line">                        <span class="built_in">BOOL</span> shouldDecode = <span class="literal">YES</span>;</span><br><span class="line">                        <span class="comment">// 如果是gif动态图片（图片组）就不需要解码</span></span><br><span class="line">                        <span class="keyword">if</span> (image.images) &#123;</span><br><span class="line">                            shouldDecode = <span class="literal">NO</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">#ifdef SD_WEBP              </span></span><br><span class="line">                            <span class="comment">//如果是webp个事的也不需要解码</span></span><br><span class="line">                            SDImageFormat imageFormat = [<span class="built_in">NSData</span> sd_imageFormatForImageData:imageData];</span><br><span class="line">                            <span class="keyword">if</span> (imageFormat == SDImageFormatWebP) &#123;</span><br><span class="line">                                shouldDecode = <span class="literal">NO</span>;</span><br><span class="line">                            &#125;</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//如果需要解码，执行解码操作</span></span><br><span class="line">                        <span class="keyword">if</span> (shouldDecode) &#123;</span><br><span class="line">                            <span class="comment">//是否需要解压图片，需要就执行解压操作</span></span><br><span class="line">                            <span class="keyword">if</span> (<span class="keyword">self</span>.shouldDecompressImages) &#123;</span><br><span class="line">                                <span class="comment">//是否需要缩小图片</span></span><br><span class="line">                                <span class="built_in">BOOL</span> shouldScaleDown = <span class="keyword">self</span>.options &amp; SDWebImageDownloaderScaleDownLargeImages;</span><br><span class="line">                                <span class="comment">//解压操作</span></span><br><span class="line">                                image = [[SDWebImageCodersManager sharedInstance] decompressedImageWithImage:image data:&amp;imageData options:@&#123;SDWebImageCoderScaleDownLargeImagesKey: @(shouldScaleDown)&#125;];</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//获取处理好的图片尺寸</span></span><br><span class="line">                        <span class="built_in">CGSize</span> imageSize = image.size;</span><br><span class="line">                        <span class="comment">//如果图片的宽或者长为0，就回调错误，否则回调完成block</span></span><br><span class="line">                        <span class="keyword">if</span> (imageSize.width == <span class="number">0</span> || imageSize.height == <span class="number">0</span>) &#123;</span><br><span class="line">                            [<span class="keyword">self</span> callCompletionBlocksWithError:[<span class="built_in">NSError</span> errorWithDomain:SDWebImageErrorDomain code:<span class="number">0</span> userInfo:@&#123;<span class="built_in">NSLocalizedDescriptionKey</span> : <span class="string">@"Downloaded image has 0 pixels"</span>&#125;]];</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="comment">//回调完成</span></span><br><span class="line">                            [<span class="keyword">self</span> callCompletionBlocksWithImage:image imageData:imageData error:<span class="literal">nil</span> finished:<span class="literal">YES</span>];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//调用完成方法</span></span><br><span class="line">                        [<span class="keyword">self</span> done];</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果没有下载的图片数据，就回调错误，并执行完成方法</span></span><br><span class="line">                [<span class="keyword">self</span> callCompletionBlocksWithError:[<span class="built_in">NSError</span> errorWithDomain:SDWebImageErrorDomain code:<span class="number">0</span> userInfo:@&#123;<span class="built_in">NSLocalizedDescriptionKey</span> : <span class="string">@"Image data is nil"</span>&#125;]];</span><br><span class="line">                [<span class="keyword">self</span> done];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果没有完成回调代码块，直接执行完成方法</span></span><br><span class="line">            [<span class="keyword">self</span> done];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当task接受到身份验证时，会回调这个代理方法</span></span><br><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session task:(<span class="built_in">NSURLSessionTask</span> *)task didReceiveChallenge:(<span class="built_in">NSURLAuthenticationChallenge</span> *)challenge completionHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSURLSessionAuthChallengeDisposition</span> disposition, <span class="built_in">NSURLCredential</span> *credential))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置临时变量保存数据</span></span><br><span class="line">    <span class="built_in">NSURLSessionAuthChallengeDisposition</span> disposition = <span class="built_in">NSURLSessionAuthChallengePerformDefaultHandling</span>;</span><br><span class="line">    __block <span class="built_in">NSURLCredential</span> *credential = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//若验证方式为NSURLAuthenticationMethodServerTrust</span></span><br><span class="line">    <span class="keyword">if</span> ([challenge.protectionSpace.authenticationMethod isEqualToString:<span class="built_in">NSURLAuthenticationMethodServerTrust</span>]) &#123;</span><br><span class="line">        <span class="comment">//如果没有设置允许不可信的SSL证书，就设置蓄力方式为默认的NSURLSessionAuthChallengePerformDefaultHandling，否则就设置验证模式为指定证书验证，并生成证书</span></span><br><span class="line">        <span class="keyword">if</span> (!(<span class="keyword">self</span>.options &amp; SDWebImageDownloaderAllowInvalidSSLCertificates)) &#123;</span><br><span class="line">            disposition = <span class="built_in">NSURLSessionAuthChallengePerformDefaultHandling</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            credential = [<span class="built_in">NSURLCredential</span> credentialForTrust:challenge.protectionSpace.serverTrust];</span><br><span class="line">            disposition = <span class="built_in">NSURLSessionAuthChallengeUseCredential</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//若验证方式不是NSURLAuthenticationMethodServerTrust</span></span><br><span class="line">        <span class="keyword">if</span> (challenge.previousFailureCount == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//判断是否有证书，如果有就设置证书，验证模式为通过指定证书验证，否则就设置验证模式为不需要验证证书</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span>.credential) &#123;</span><br><span class="line">                credential = <span class="keyword">self</span>.credential;</span><br><span class="line">                disposition = <span class="built_in">NSURLSessionAuthChallengeUseCredential</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                disposition = <span class="built_in">NSURLSessionAuthChallengeCancelAuthenticationChallenge</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果认证的失败次数设置超过0次，就设置验证模式为不需要验证证书</span></span><br><span class="line">            disposition = <span class="built_in">NSURLSessionAuthChallengeCancelAuthenticationChallenge</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//调用完成代码并传参</span></span><br><span class="line">    <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">        completionHandler(disposition, credential);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Helper-methods"><a href="#Helper-methods" class="headerlink" title="Helper methods"></a>Helper methods</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//缩放操作</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)scaledImageForKey:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)key image:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image &#123;</span><br><span class="line">    <span class="keyword">return</span> SDScaledImageForKey(key, image);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否允许app后台继续下载图片</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)shouldContinueWhenAppEntersBackground &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.options &amp; SDWebImageDownloaderContinueInBackground;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//错误完成回调方法</span></span><br><span class="line">- (<span class="keyword">void</span>)callCompletionBlocksWithError:(<span class="keyword">nullable</span> <span class="built_in">NSError</span> *)error &#123;</span><br><span class="line">    [<span class="keyword">self</span> callCompletionBlocksWithImage:<span class="literal">nil</span> imageData:<span class="literal">nil</span> error:error finished:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完成回调方法</span></span><br><span class="line">- (<span class="keyword">void</span>)callCompletionBlocksWithImage:(<span class="keyword">nullable</span> <span class="built_in">UIImage</span> *)image</span><br><span class="line">                            imageData:(<span class="keyword">nullable</span> <span class="built_in">NSData</span> *)imageData</span><br><span class="line">                                error:(<span class="keyword">nullable</span> <span class="built_in">NSError</span> *)error</span><br><span class="line">                             finished:(<span class="built_in">BOOL</span>)finished &#123;</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&gt; *completionBlocks = [<span class="keyword">self</span> callbacksForKey:kCompletedCallbackKey];</span><br><span class="line">    dispatch_main_async_safe(^&#123;</span><br><span class="line">        <span class="keyword">for</span> (SDWebImageDownloaderCompletedBlock completedBlock <span class="keyword">in</span> completionBlocks) &#123;</span><br><span class="line">            completedBlock(image, imageData, error, finished);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 的图片下载是由 &lt;code&gt;SDWebImageDownloader&lt;/code&gt; 类实现的，该类是一个异步下载管理器。主要工作是下载相关配置项的管理，包括下载队列的先后顺序、最大下载任务数量控制、下载队列中的任务创建、取消、
      
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>读 SDWebImage 四 (SDWebImageDownloader)</title>
    <link href="http://guohuaden.com/2018/10/04/Read-SDWebImage-SDWebImageDownloader/"/>
    <id>http://guohuaden.com/2018/10/04/Read-SDWebImage-SDWebImageDownloader/</id>
    <published>2018-10-04T11:38:50.000Z</published>
    <updated>2018-10-25T11:23:06.489Z</updated>
    
    <content type="html"><![CDATA[<p><code>SDWebImage</code> 的图片下载是由 <code>SDWebImageDownloader</code> 这个类实现的，该类是一个异步下载管理器。主要工作是下载相关配置项的管理，包括下载队列的先后顺序、最大下载任务数量控制、下载队列中的任务创建、取消、暂停等任务管理，以及其他的 <code>HTTPS</code> 和 <code>HTTP Header</code> 的设置。而真正实现图片下载的是 <code>SDWebImageDownloaderOperation</code>类。该类的 <code>Operation</code> 操作依赖系统提供的NSURLConnection类来实现图片的下载。</p><h3 id="下载选项"><a href="#下载选项" class="headerlink" title="下载选项"></a>下载选项</h3><p>枚举列出不同的下载选项 （选项使用掩码形式，如 <code>1 &lt;&lt; 2</code> 表示将1左移2位，即：00000010，也就是2。）<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">typedef NS_OPTIONS(NSUInteger, SDWebImageDownloaderOptions) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认模式，将下载放入低优先级队列 和 低优先级任务中</span></span><br><span class="line">    SDWebImageDownloaderLowPriority = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该选项启用渐进式下载，图像在下载过程中逐步显示，就像浏览器一样。（该选项在返回进度Block的同时也返回completedBlock，里面的UIImage就是当前下载时的图片，可以实现将图片一点点显示出来的功能）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderProgressiveDownload = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认情况下，http请求会阻止使用NSURLCache。 使用此标志，NSURLCache将与默认策略一起使用。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderUseNSURLCache = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果从NSURLCache缓存中读取图片，则使用nil作为image/imageData的参数来调用block代码块。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderIgnoreCachedResponse = <span class="number">1</span> &lt;&lt; <span class="number">3</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在iOS 4+ 系统中，允许程序进入后台后继续下载图片，该操作通过向系统申请额外的时间来完成后台下载请求，如果后台任务终止，则操作被取消。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderContinueInBackground = <span class="number">1</span> &lt;&lt; <span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过设置NSMutableURLRequest，HTTPShouldHandleCookies =  YES来处理存储在NSHTTPCookieStore中的cookie;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderHandleCookies = <span class="number">1</span> &lt;&lt; <span class="number">5</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *允许允许不受信任的SSL证书。用于测试目的。 在生产中谨慎使用。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderAllowInvalidSSLCertificates = <span class="number">1</span> &lt;&lt; <span class="number">6</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将下载放入高队列优先级和高任务优先级中。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderHighPriority = <span class="number">1</span> &lt;&lt; <span class="number">7</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缩小图像（默认情况下，图片会按照它的原始大小来解码显示。这个属性会根据设备的内存限制调整图片的尺寸到合适的大小。如果`SDWebImageProgressiveDownload`标记被设置了，则这个flag不起作用。）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SDWebImageDownloaderScaleDownLargeImages = <span class="number">1</span> &lt;&lt; <span class="number">8</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="下载操作的执行顺序"><a href="#下载操作的执行顺序" class="headerlink" title="下载操作的执行顺序"></a>下载操作的执行顺序</h3><p>两种执行顺序： 先进先出 和 后进先出<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">typedef <span class="type">NS_ENUM</span>(<span class="type">NSInteger</span>, <span class="type">SDWebImageDownloaderExecutionOrder</span>) &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 默认值。 所有下载操作都将以队列样式执行（先进先出）。</span><br><span class="line">     */</span><br><span class="line">    <span class="type">SDWebImageDownloaderFIFOExecutionOrder</span>,</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 所有下载操作都将以栈的方式执行（后进先出）。</span><br><span class="line">     */</span><br><span class="line">    <span class="type">SDWebImageDownloaderLIFOExecutionOrder</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="外部定义的系统通知标示"><a href="#外部定义的系统通知标示" class="headerlink" title="外部定义的系统通知标示"></a>外部定义的系统通知标示</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始下载通知</span></span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadStartNotification;</span><br><span class="line"><span class="comment">//停止下载通知</span></span><br><span class="line">FOUNDATION_EXPORT <span class="built_in">NSString</span> * _Nonnull <span class="keyword">const</span> SDWebImageDownloadStopNotification;</span><br></pre></td></tr></table></figure><h3 id="两个代码块"><a href="#两个代码块" class="headerlink" title="两个代码块"></a>两个代码块</h3><p>每个下载操作的下载进度回调和下载完成回调，这两个回调稍后将保存在下载管理器的URLCallbacks字典中，key为URL，value为一个数组，数组里面又存放一个保存了下载进度回调和完成回调代码块的字典。<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//下载进度代码块</span><br><span class="line">typedef void(^<span class="type">SDWebImageDownloaderProgressBlock</span>)(<span class="type">NSInteger</span> receivedSize, <span class="type">NSInteger</span> expectedSize, <span class="type">NSURL</span> * _Nullable targetURL);</span><br><span class="line">//下载完成回调代码块</span><br><span class="line">typedef void(^<span class="type">SDWebImageDownloaderCompletedBlock</span>)(<span class="type">UIImage</span> * _Nullable image, <span class="type">NSData</span> * _Nullable data, <span class="type">NSError</span> * _Nullable error, <span class="type">BOOL</span> finished);</span><br></pre></td></tr></table></figure></p><h3 id="三个字典"><a href="#三个字典" class="headerlink" title="三个字典"></a>三个字典</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求头字典</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="built_in">NSString</span> *&gt; SDHTTPHeadersDictionary;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NSMutableDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="built_in">NSString</span> *&gt; SDHTTPHeadersMutableDictionary;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义请求头，通过Block传值，可以拿到一些参数，然后加工成我们需要的数据，最后返回</span></span><br><span class="line"><span class="keyword">typedef</span> SDHTTPHeadersDictionary * _Nullable (^SDWebImageDownloaderHeadersFilterBlock)(<span class="built_in">NSURL</span> * _Nullable url, SDHTTPHeadersDictionary * _Nullable headers);</span><br></pre></td></tr></table></figure><h3 id="SDWebImageDownloadToken"><a href="#SDWebImageDownloadToken" class="headerlink" title="SDWebImageDownloadToken"></a>SDWebImageDownloadToken</h3><p>作为下载操作的唯一标识，在创建 <code>operation</code> 的时候初始化绑定，当需要去 <code>cancel</code> 操作的时候就需要这个 <code>token</code>。<br><code>SDWebImageDownloadToken</code> 为每一个下载任务的唯一身份标识，<code>SDWebImageDownloader</code> 和我们平时开发中的下载有一些不同，它弱化了下载过程，比较强调的是下载结果，不支持断点下载。</p><h4 id="h文件"><a href="#h文件" class="headerlink" title=".h文件"></a>.h文件</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@interface</span> <span class="attribute">SDWebImageDownloadToken </span>: NSObject &lt;SDWebImageOperation&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">下载的URL。 这应该是只读的，你不应该修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@property</span> (nonatomic, strong, nullable) NSURL *url;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 取消token 可以从 “id downloadOperationCancelToken = [operation addHandlersForProgress:progressBlock completed:completedBlock]” 方法获得，这应该是只读的，你不应该修改。</span></span><br><span class="line"><span class="comment"> @note 使用 `-[SDWebImageDownloadToken cancel]`方法去取消下载token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@property</span> (nonatomic, strong, nullable) id downloadOperationCancelToken;</span><br><span class="line"></span><br><span class="line"><span class="variable">@end</span></span><br></pre></td></tr></table></figure><h4 id="m文件"><a href="#m文件" class="headerlink" title=".m文件"></a>.m文件</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SDWebImageDownloadToken</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下载操作</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>, <span class="keyword">nullable</span>) <span class="built_in">NSOperation</span>&lt;SDWebImageDownloaderOperationInterface&gt; *downloadOperation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">SDWebImageDownloadToken</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//取消下载</span></span><br><span class="line">- (<span class="keyword">void</span>)cancel &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.downloadOperation) &#123;</span><br><span class="line">        SDWebImageDownloadToken *cancelToken = <span class="keyword">self</span>.downloadOperationCancelToken;</span><br><span class="line">        <span class="keyword">if</span> (cancelToken) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.downloadOperation cancel:cancelToken];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h2 id="SDWebImageDownloader-h文件"><a href="#SDWebImageDownloader-h文件" class="headerlink" title="SDWebImageDownloader.h文件"></a>SDWebImageDownloader.h文件</h2><h3 id="属性声明"><a href="#属性声明" class="headerlink" title="属性声明"></a>属性声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解压缩下载和缓存的图像可以提高性能，但会占用大量内存。</span></span><br><span class="line"><span class="comment"> * 默认是YES. 如果由于过多的内存消耗而遇到崩溃，可以设置为NO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">//当图片下载完成以后，解码图片。如果因为过多的内存消耗导致一个奔溃，可以把这个属性设置为NO</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> shouldDecompressImages;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 最大兵法下载数目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSInteger</span> maxConcurrentDownloads;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示仍需要下载的当前下载量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSUInteger</span> currentDownloadCount;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  下载操作的超时值（秒为单位），默认15秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSTimeInterval</span> downloadTimeout;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 内部NSURLSession使用的配置</span></span><br><span class="line"><span class="comment"> * 直接变换此对象无效</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @see createNewSessionWithConfiguration:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">NSURLSessionConfiguration</span> *sessionConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 改变下载操作的执行顺序 默认值是 `SDWebImageDownloaderFIFOExecutionOrder`.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) SDWebImageDownloaderExecutionOrder executionOrder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置要为请求操作设置的默认URL凭据。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSURLCredential</span> *urlCredential;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *username;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置密码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSString</span> *password;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置过滤器以选择用于下载图像HTTP请求的标头</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 将为每个下载图像请求调用此块，返回的NSDictionary将用作相应HTTP请求中的标头。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">//http头部的过滤函数</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>, <span class="keyword">nullable</span>) SDWebImageDownloaderHeadersFilterBlock headersFilter;</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下载管理器单例函数</span></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedDownloader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用指定的会话配置创建下载程序的实例。（初始化方法）</span></span><br><span class="line"><span class="comment"> * @note `timeoutIntervalForRequest` 将被覆盖</span></span><br><span class="line"><span class="comment"> * @return 下载器的新事例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithSessionConfiguration:(<span class="keyword">nullable</span> <span class="built_in">NSURLSessionConfiguration</span> *)sessionConfiguration <span class="built_in">NS_DESIGNATED_INITIALIZER</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置要附加到每个下载HTTP请求的HTTP标头的值。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param value The value for the header field. 值为 `nil` 移除请求头文件.</span></span><br><span class="line"><span class="comment"> * @param field 设置http请求头部字段.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setValue:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)value forHTTPHeaderField:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回指定的HTTP标头字段的值。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return 与标题字段字段关联的值，如果没有相应的标题字段，则为“nil”。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)valueForHTTPHeaderField:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 将`SDWebImageDownloaderOperation`的子类设置为默认值</span></span><br><span class="line"><span class="comment">  * 每次SDWebImage构造请求时都要使用`NSOperation`</span></span><br><span class="line"><span class="comment">  * 下载图像的操作。</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param operationClass要设置的`SDWebImageDownloaderOperation`的子类</span></span><br><span class="line"><span class="comment">  *默认。 传递`nil`将恢复为`SDWebImageDownloaderOperation`。</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">- (<span class="keyword">void</span>)setOperationClass:(<span class="keyword">nullable</span> Class)operationClass;</span><br><span class="line"></span><br><span class="line">/ **</span><br><span class="line">  * 使用给定的URL创建SDWebImageDownloader异步下载器实例</span><br><span class="line">  *</span><br><span class="line">  * 图像完成下载或发生错误时将通知代理。</span><br><span class="line">  *</span><br><span class="line">  * @see SDWebImageDownloaderDelegate</span><br><span class="line">  *</span><br><span class="line">  * @param url要下载的图像的URL</span><br><span class="line">  * @param options用于此下载的选项</span><br><span class="line">  * @param progressBlock在下载图像时重复调用的块</span><br><span class="line">  * @note在后台队列上执行进度块</span><br><span class="line">  * @param completedBlock下载完成后调用的块。</span><br><span class="line">  * 如果下载成功，则设置image参数，如果出错，</span><br><span class="line">  * 错误参数设置为错误。最后一个参数始终为<span class="literal">YES</span></span><br><span class="line">  * 如果没有使用SDWebImageDownloaderProgressiveDownload。随着</span><br><span class="line">  * SDWebImageDownloaderProgressiveDownload选项，调用此块</span><br><span class="line">  * 重复使用部分图像对象，并将完成的参数设置为<span class="literal">NO</span></span><br><span class="line">  * 之前用完整的图像和完成的参数调用最后一次</span><br><span class="line">  * 设为是。如果出错，则完成的参数始终为<span class="literal">YES</span>。</span><br><span class="line">  *</span><br><span class="line">  * @return可以传递给-cancel的令牌（SDWebImageDownloadToken）：取消此操作</span><br><span class="line">  * /</span><br><span class="line">- (<span class="keyword">nullable</span> SDWebImageDownloadToken *)downloadImageWithURL:(<span class="keyword">nullable</span> <span class="built_in">NSURL</span> *)url</span><br><span class="line">                                                   options:(SDWebImageDownloaderOptions)options</span><br><span class="line">                                                  progress:(<span class="keyword">nullable</span> SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                                                 completed:(<span class="keyword">nullable</span> SDWebImageDownloaderCompletedBlock)completedBlock;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消之前使用排队的下载 获取token使用 “-downloadImageWithURL:options:progress:completed:”方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param token 从“-downloadImageWithURL:options:progress:completed:”方法获取的token应该被取消</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)cancel:(<span class="keyword">nullable</span> SDWebImageDownloadToken *)token;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置下载队列挂起状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setSuspended:(<span class="built_in">BOOL</span>)suspended;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消队列中的所有下载操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)cancelAllDownloads;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 强制SDWebImageDownloader 创建和使用一个给定配置的初始化NSURLSession（队列中的所有现有下载操作都将被取消；请求超时的时间也被重写）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param sessionConfiguration 使用新的NSURLSession配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)createNewSessionWithConfiguration:(<span class="keyword">nonnull</span> <span class="built_in">NSURLSessionConfiguration</span> *)sessionConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * //取消operation并且session设置为Invalidates （如果您使用自定义下载程序而不是共享下载程序，则在不使用它时避免内存泄漏时需要调用此方法）</span></span><br><span class="line"><span class="comment"> * @param cancelPendingOperations 是否取消挂起的操作。</span></span><br><span class="line"><span class="comment"> * @note 在共享下载程序上调用此方法无效。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)invalidateSessionAndCancel:(<span class="built_in">BOOL</span>)cancelPendingOperations;</span><br></pre></td></tr></table></figure><h2 id="SDWebImageDownloader-m文件"><a href="#SDWebImageDownloader-m文件" class="headerlink" title="SDWebImageDownloader.m文件"></a>SDWebImageDownloader.m文件</h2><h3 id="属性声明-1"><a href="#属性声明-1" class="headerlink" title="属性声明"></a>属性声明</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SDWebImageDownloader</span> () &lt;<span class="title">NSURLSessionTaskDelegate</span>, <span class="title">NSURLSessionDataDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下载队列</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">NSOperationQueue</span> *downloadQueue;</span><br><span class="line"><span class="comment">//最新添加的操作</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) <span class="built_in">NSOperation</span> *lastAddedOperation;</span><br><span class="line"><span class="comment">//操作的类</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) Class operationClass;</span><br><span class="line"><span class="comment">//下载操作的集合</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) <span class="built_in">NSMutableDictionary</span>&lt;<span class="built_in">NSURL</span> *, SDWebImageDownloaderOperation *&gt; *URLOperations;</span><br><span class="line"><span class="comment">//HTTP头文件集合</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nullable</span>) SDHTTPHeadersMutableDictionary *HTTPHeaders;</span><br><span class="line"><span class="comment">//操作锁</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) dispatch_semaphore_t operationsLock; <span class="comment">// a lock to keep the access to `URLOperations` thread-safe</span></span><br><span class="line"><span class="comment">//头文件锁</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>, <span class="keyword">nonnull</span>) dispatch_semaphore_t headersLock; <span class="comment">// a lock to keep the access to `HTTPHeaders` thread-safe</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The session in which data tasks will run</span></span><br><span class="line"><span class="comment">//NSURLSession</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSURLSession</span> *session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h4 id="初始化方法"><a href="#初始化方法" class="headerlink" title="初始化方法"></a>初始化方法</h4><p><code>SDWebImageDownloader</code> 提供了一个initialize方法 四个初始化方法和一个注销方法</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">void</span>)initialize &#123;</span><br><span class="line">    <span class="comment">//绑定SDNetworkActivityIndicator（如果可用），如果使用它，需要导入"SDNetworkActivityIndicator.h"头文件</span></span><br><span class="line">    <span class="comment">//主要是用来加载图片的时候，状态栏会转小菊花。（该方法是为了给图片下载绑定一个SDNetworkActivityIndicator，只有当这个SDNetworkActivityIndicator文件存在的情况下才会执行，目的就是当下载图片时，状态栏会转小菊花。）</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">NSClassFromString</span>(<span class="string">@"SDNetworkActivityIndicator"</span>)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LLVM 3.0 编译器可以用以下代码消除 warning </span></span><br><span class="line"><span class="meta">#pragma clang diagnostic push</span></span><br><span class="line"><span class="meta">#pragma clang diagnostic ignored <span class="meta-string">"-Warc-performSelector-leaks"</span></span></span><br><span class="line">        <span class="keyword">id</span> activityIndicator = [<span class="built_in">NSClassFromString</span>(<span class="string">@"SDNetworkActivityIndicator"</span>) performSelector:<span class="built_in">NSSelectorFromString</span>(<span class="string">@"sharedActivityIndicator"</span>)];</span><br><span class="line"><span class="meta">#pragma clang diagnostic pop</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果之前已经添加，先移除观察者</span></span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:activityIndicator name:SDWebImageDownloadStartNotification object:<span class="literal">nil</span>];</span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:activityIndicator name:SDWebImageDownloadStopNotification object:<span class="literal">nil</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//添加观察者</span></span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:activityIndicator</span><br><span class="line">                                                 selector:<span class="built_in">NSSelectorFromString</span>(<span class="string">@"startActivity"</span>)</span><br><span class="line">                                                     name:SDWebImageDownloadStartNotification object:<span class="literal">nil</span>];</span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:activityIndicator</span><br><span class="line">                                                 selector:<span class="built_in">NSSelectorFromString</span>(<span class="string">@"stopActivity"</span>)</span><br><span class="line">                                                     name:SDWebImageDownloadStopNotification object:<span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//单例，返回SDWebImageDownloader对象</span></span><br><span class="line">+ (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)sharedDownloader &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> once;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">id</span> instance;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;once, ^&#123;</span><br><span class="line">        instance = [<span class="keyword">self</span> new];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> initWithSessionConfiguration:[<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个请求对象</span></span><br><span class="line">- (<span class="keyword">nonnull</span> <span class="keyword">instancetype</span>)initWithSessionConfiguration:(<span class="keyword">nullable</span> <span class="built_in">NSURLSessionConfiguration</span> *)sessionConfiguration &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">self</span> = [<span class="keyword">super</span> init])) &#123;</span><br><span class="line">        _operationClass = [SDWebImageDownloaderOperation <span class="keyword">class</span>];</span><br><span class="line">        _shouldDecompressImages = <span class="literal">YES</span>;</span><br><span class="line">        _executionOrder = SDWebImageDownloaderFIFOExecutionOrder;</span><br><span class="line">        _downloadQueue = [<span class="built_in">NSOperationQueue</span> new];</span><br><span class="line">        _downloadQueue.maxConcurrentOperationCount = <span class="number">6</span>;</span><br><span class="line">        _downloadQueue.name = <span class="string">@"com.hackemist.SDWebImageDownloader"</span>;</span><br><span class="line">        _URLOperations = [<span class="built_in">NSMutableDictionary</span> new];</span><br><span class="line"><span class="meta">#ifdef SD_WEBP</span></span><br><span class="line">        _HTTPHeaders = [@&#123;<span class="string">@"Accept"</span>: <span class="string">@"image/webp,image/*;q=0.8"</span>&#125; mutableCopy];</span><br><span class="line"><span class="meta">#else</span></span><br><span class="line">        _HTTPHeaders = [@&#123;<span class="string">@"Accept"</span>: <span class="string">@"image/*;q=0.8"</span>&#125; mutableCopy];</span><br><span class="line"><span class="meta">#endif</span></span><br><span class="line">        _operationsLock = dispatch_semaphore_create(<span class="number">1</span>);</span><br><span class="line">        _headersLock = dispatch_semaphore_create(<span class="number">1</span>);</span><br><span class="line">        _downloadTimeout = <span class="number">15.0</span>;</span><br><span class="line"></span><br><span class="line">        [<span class="keyword">self</span> createNewSessionWithConfiguration:sessionConfiguration];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个新的请求对象</span></span><br><span class="line">- (<span class="keyword">void</span>)createNewSessionWithConfiguration:(<span class="built_in">NSURLSessionConfiguration</span> *)sessionConfiguration &#123;</span><br><span class="line">    [<span class="keyword">self</span> cancelAllDownloads];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.session) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.session invalidateAndCancel];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sessionConfiguration.timeoutIntervalForRequest = <span class="keyword">self</span>.downloadTimeout;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  Create the session for this task</span></span><br><span class="line"><span class="comment">     *  We send nil as delegate queue so that the session creates a serial operation queue for performing all delegate</span></span><br><span class="line"><span class="comment">     *  method calls and completion handler calls.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">self</span>.session = [<span class="built_in">NSURLSession</span> sessionWithConfiguration:sessionConfiguration</span><br><span class="line">                                                 delegate:<span class="keyword">self</span></span><br><span class="line">                                            delegateQueue:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///取消operation并且session设置为Invalidates</span></span><br><span class="line">- (<span class="keyword">void</span>)invalidateSessionAndCancel:(<span class="built_in">BOOL</span>)cancelPendingOperations &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> == [SDWebImageDownloader sharedDownloader]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cancelPendingOperations) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.session invalidateAndCancel];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span>.session finishTasksAndInvalidate];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)dealloc &#123;</span><br><span class="line">    [<span class="keyword">self</span>.session invalidateAndCancel];</span><br><span class="line">    <span class="keyword">self</span>.session = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span>.downloadQueue cancelAllOperations];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Set-和-Get-方法"><a href="#Set-和-Get-方法" class="headerlink" title="Set 和 Get 方法"></a><code>Set</code> 和 <code>Get</code> 方法</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置请求报文头部</span></span><br><span class="line">- (<span class="keyword">void</span>)setValue:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)value forHTTPHeaderField:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)field &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.headersLock);</span><br><span class="line">    <span class="keyword">if</span> (value) &#123;</span><br><span class="line">        <span class="keyword">self</span>.HTTPHeaders[field] = value;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span>.HTTPHeaders removeObjectForKey:field];</span><br><span class="line">    &#125;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.headersLock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取请求报文头部</span></span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)valueForHTTPHeaderField:(<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)field &#123;</span><br><span class="line">    <span class="keyword">if</span> (!field) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [[<span class="keyword">self</span> allHTTPHeaderFields] objectForKey:field];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全部的请求报文头部</span></span><br><span class="line">- (<span class="keyword">nonnull</span> SDHTTPHeadersDictionary *)allHTTPHeaderFields &#123;</span><br><span class="line">    LOCK(<span class="keyword">self</span>.headersLock);</span><br><span class="line">    SDHTTPHeadersDictionary *allHTTPHeaderFields = [<span class="keyword">self</span>.HTTPHeaders <span class="keyword">copy</span>];</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.headersLock);</span><br><span class="line">    <span class="keyword">return</span> allHTTPHeaderFields;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置下载队列的最大并发数</span></span><br><span class="line">- (<span class="keyword">void</span>)setMaxConcurrentDownloads:(<span class="built_in">NSInteger</span>)maxConcurrentDownloads &#123;</span><br><span class="line">    _downloadQueue.maxConcurrentOperationCount = maxConcurrentDownloads;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取下载队列的当前operation数</span></span><br><span class="line">- (<span class="built_in">NSUInteger</span>)currentDownloadCount &#123;</span><br><span class="line">    <span class="keyword">return</span> _downloadQueue.operationCount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取下载队列的最大并发数</span></span><br><span class="line">- (<span class="built_in">NSInteger</span>)maxConcurrentDownloads &#123;</span><br><span class="line">    <span class="keyword">return</span> _downloadQueue.maxConcurrentOperationCount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSURLSessionConfiguration</span> *)sessionConfiguration &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.session.configuration;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个`SDWebImageDownloaderOperation`的子类作为`NSOperation`来构建request来下载一张图片</span></span><br><span class="line">- (<span class="keyword">void</span>)setOperationClass:(<span class="keyword">nullable</span> Class)operationClass &#123;</span><br><span class="line">    <span class="keyword">if</span> (operationClass &amp;&amp; [operationClass isSubclassOfClass:[<span class="built_in">NSOperation</span> <span class="keyword">class</span>]] &amp;&amp; [operationClass conformsToProtocol:<span class="class"><span class="keyword">@protocol</span>(<span class="title">SDWebImageDownloaderOperationInterface</span>)]) </span>&#123;</span><br><span class="line">        _operationClass = operationClass;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        _operationClass = [SDWebImageDownloaderOperation <span class="keyword">class</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="下载方法"><a href="#下载方法" class="headerlink" title="下载方法"></a>下载方法</h4><p>下载管理器的主要实现为 <code>downloadImageWithURL:options:progress:completed:</code> 方法(调用该方法创建 <code>operation</code> 操作)，这个方法调用 <code>- (void)addProgressCallback:completedBlock:forURL: createCallback:</code> 方法来将请求的信息和一些回调函数存入管理器中，同时在创建回调的 <code>block</code> 中创建新 <code>operation</code> 操作,新的操作由管理器中存储的信息配置后，放入到 <code>downloadQueue</code> 操作队列中，最后返回新创建的操作<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 下载图片</span></span><br><span class="line"><span class="comment"> @param url 图片url</span></span><br><span class="line"><span class="comment"> @param options 下载选项</span></span><br><span class="line"><span class="comment"> @param progressBlock 下载进度blockhui</span></span><br><span class="line"><span class="comment"> @param completedBlock 下载完成block</span></span><br><span class="line"><span class="comment"> @return  返回一个SDWebImageDownloadToken，用于关联一个请求</span></span><br><span class="line"><span class="comment">    调用addProgressCallback方法 return token，addProgressCallback的回调里进行以下操作</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        1.1设置下载时间</span></span><br><span class="line"><span class="comment">        1.2创建request</span></span><br><span class="line"><span class="comment">        1.3创建operation对象 传入 request session options</span></span><br><span class="line"><span class="comment">        1.4设置身份认证</span></span><br><span class="line"><span class="comment">        1.5设置下载优先级</span></span><br><span class="line"><span class="comment">        1.6设置下载顺序</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">nullable</span> SDWebImageDownloadToken *)downloadImageWithURL:(<span class="keyword">nullable</span> <span class="built_in">NSURL</span> *)url</span><br><span class="line">                                                   options:(SDWebImageDownloaderOptions)options</span><br><span class="line">                                                  progress:(<span class="keyword">nullable</span> SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                                                 completed:(<span class="keyword">nullable</span> SDWebImageDownloaderCompletedBlock)completedBlock &#123;</span><br><span class="line">    __<span class="keyword">weak</span> SDWebImageDownloader *wself = <span class="keyword">self</span>;</span><br><span class="line">    <span class="comment">// 调用- (void)addProgressCallback:completedBlock:forURL: createCallback:方法来将请求的信息和一些回调函数存入管理器中，同时在创建回调的block中创建新operation操作,新的操作由管理器中存储的信息配置后，放入到downloadQueue操作队列中，最后返回新创建的操作</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> addProgressCallback:progressBlock completedBlock:completedBlock forURL:url createCallback:^SDWebImageDownloaderOperation *&#123;</span><br><span class="line">        __<span class="keyword">strong</span> __<span class="keyword">typeof</span> (wself) sself = wself;</span><br><span class="line">        <span class="comment">//获取超时时间，如果没有设置，默认为15秒</span></span><br><span class="line">        <span class="built_in">NSTimeInterval</span> timeoutInterval = sself.downloadTimeout;</span><br><span class="line">        <span class="keyword">if</span> (timeoutInterval == <span class="number">0.0</span>) &#123;</span><br><span class="line">            timeoutInterval = <span class="number">15.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为了防止潜在的重复缓存（NSURLCache 和 SDImageCache同时缓存），如果另有说明，我们会禁用图像请求的缓存</span></span><br><span class="line">        <span class="built_in">NSURLRequestCachePolicy</span> cachePolicy = options &amp; SDWebImageDownloaderUseNSURLCache ? <span class="built_in">NSURLRequestUseProtocolCachePolicy</span> : <span class="built_in">NSURLRequestReloadIgnoringLocalCacheData</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//创建请求对象，并根据options参数设置其属性</span></span><br><span class="line">        <span class="built_in">NSMutableURLRequest</span> *request = [[<span class="built_in">NSMutableURLRequest</span> alloc] initWithURL:url</span><br><span class="line">                                                                    cachePolicy:cachePolicy</span><br><span class="line">                                                                timeoutInterval:timeoutInterval];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用cookies</span></span><br><span class="line">        request.HTTPShouldHandleCookies = (options &amp; SDWebImageDownloaderHandleCookies);</span><br><span class="line">        <span class="comment">//使用管道</span></span><br><span class="line">        request.HTTPShouldUsePipelining = <span class="literal">YES</span>;</span><br><span class="line">        <span class="comment">//添加自定义请求头</span></span><br><span class="line">        <span class="keyword">if</span> (sself.headersFilter) &#123;</span><br><span class="line">            request.allHTTPHeaderFields = sself.headersFilter(url, [sself allHTTPHeaderFields]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            request.allHTTPHeaderFields = [sself allHTTPHeaderFields];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//初始化一个自定义NSOperation对象</span></span><br><span class="line">        SDWebImageDownloaderOperation *operation = [[sself.operationClass alloc] initWithRequest:request inSession:sself.session options:options];</span><br><span class="line">        <span class="comment">//当图片下载完成以后，解码图片。如果因为过多的内存消耗导致一个奔溃，可以把这个属性设置为NO</span></span><br><span class="line">        operation.shouldDecompressImages = sself.shouldDecompressImages;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//指定验证信息（url证书）</span></span><br><span class="line">        <span class="keyword">if</span> (sself.urlCredential) &#123;</span><br><span class="line">            operation.credential = sself.urlCredential;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sself.username &amp;&amp; sself.password) &#123;</span><br><span class="line">            <span class="comment">//基础验证</span></span><br><span class="line">            operation.credential = [<span class="built_in">NSURLCredential</span> credentialWithUser:sself.username password:sself.password persistence:<span class="built_in">NSURLCredentialPersistenceForSession</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//指定优先级</span></span><br><span class="line">        <span class="keyword">if</span> (options &amp; SDWebImageDownloaderHighPriority) &#123;</span><br><span class="line">            operation.queuePriority = <span class="built_in">NSOperationQueuePriorityHigh</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options &amp; SDWebImageDownloaderLowPriority) &#123;</span><br><span class="line">            operation.queuePriority = <span class="built_in">NSOperationQueuePriorityLow</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//指定下载顺序（ 如果是LIFO这种模式，则需要手动指定operation之间的依赖关系）</span></span><br><span class="line">        <span class="keyword">if</span> (sself.executionOrder == SDWebImageDownloaderLIFOExecutionOrder) &#123;</span><br><span class="line">            <span class="comment">// 如果是LIFO，则让前面的operation依赖于最新添加的operation</span></span><br><span class="line">            [sself.lastAddedOperation addDependency:operation];</span><br><span class="line">            sself.lastAddedOperation = operation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取消一个图片的下载操作</span></span><br><span class="line">- (<span class="keyword">void</span>)cancel:(<span class="keyword">nullable</span> SDWebImageDownloadToken *)token &#123;</span><br><span class="line">    <span class="comment">//如果url不存在，则返回</span></span><br><span class="line">    <span class="built_in">NSURL</span> *url = token.url;</span><br><span class="line">    <span class="keyword">if</span> (!url) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取该操作，通过token来确定操作是否取消（移除），如果取消，则在URLOperations中移除url</span></span><br><span class="line">    LOCK(<span class="keyword">self</span>.operationsLock);</span><br><span class="line">    SDWebImageDownloaderOperation *operation = [<span class="keyword">self</span>.URLOperations objectForKey:url];</span><br><span class="line">    <span class="keyword">if</span> (operation) &#123;</span><br><span class="line">        <span class="built_in">BOOL</span> canceled = [operation cancel:token.downloadOperationCancelToken];</span><br><span class="line">        <span class="keyword">if</span> (canceled) &#123;</span><br><span class="line">            [<span class="keyword">self</span>.URLOperations removeObjectForKey:url];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.operationsLock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给下载过程添加进度</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    1.生成URLOperations字典 下载url作为key value是具体的下载operation</span></span><br><span class="line"><span class="comment">    2.将操作添加到操作队列中</span></span><br><span class="line"><span class="comment">    3.将进度progressBlock和下载结束completedBlock封装成字典SDCallbacksDictionary，装入数组callbackBlocks，</span></span><br><span class="line"><span class="comment">    4.生成token标识，并返回token</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">- (<span class="keyword">nullable</span> SDWebImageDownloadToken *)addProgressCallback:(SDWebImageDownloaderProgressBlock)progressBlock</span><br><span class="line">                                           completedBlock:(SDWebImageDownloaderCompletedBlock)completedBlock</span><br><span class="line">                                                   forURL:(<span class="keyword">nullable</span> <span class="built_in">NSURL</span> *)url</span><br><span class="line">                                           createCallback:(SDWebImageDownloaderOperation *(^)(<span class="keyword">void</span>))createCallback &#123;</span><br><span class="line">    <span class="comment">// url作为回调字典里的key，因此url不能为空，如果url为空则立即调用已完成代码块（image、imageData都传nil），并直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (url == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (completedBlock != <span class="literal">nil</span>) &#123;</span><br><span class="line">            completedBlock(<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">NO</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    LOCK(<span class="keyword">self</span>.operationsLock);</span><br><span class="line">    获取url下载的操作</span><br><span class="line">    SDWebImageDownloaderOperation *operation = [<span class="keyword">self</span>.URLOperations objectForKey:url];</span><br><span class="line">    <span class="comment">// 有一种情况是操作可能被标记为已完成，但未从“self.URLOperations”中删除。</span></span><br><span class="line">    <span class="keyword">if</span> (!operation || operation.isFinished) &#123;</span><br><span class="line">    <span class="comment">//创建一个operation，并且添加到URLOperation中</span></span><br><span class="line">        operation = createCallback();</span><br><span class="line">        __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) wself = <span class="keyword">self</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//设置operation操作完成以后的回调</span></span><br><span class="line">        operation.completionBlock = ^&#123;</span><br><span class="line">            __<span class="keyword">strong</span> <span class="keyword">typeof</span>(wself) sself = wself;</span><br><span class="line">            <span class="keyword">if</span> (!sself) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            LOCK(sself.operationsLock);</span><br><span class="line">            <span class="comment">//完成以后从URLOperations中移除该URL的operation操作</span></span><br><span class="line">            [sself.URLOperations removeObjectForKey:url];</span><br><span class="line">            UNLOCK(sself.operationsLock);</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//将该url的operation操作添加到URLOperations中</span></span><br><span class="line">        [<span class="keyword">self</span>.URLOperations setObject:operation forKey:url];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//仅在根据Apple的doc完成所有配置后才将操作添加到操作队列。`addOperation：`不同步执行`operation.completionBlock`，所以这不会导致死锁。</span></span><br><span class="line">        <span class="comment">//把operation添加进入NSOperationQueue中，当operation添加到downloadQueue，会触发相应的start方法，开始下载。</span></span><br><span class="line">        [<span class="keyword">self</span>.downloadQueue addOperation:operation];</span><br><span class="line">    &#125;</span><br><span class="line">    UNLOCK(<span class="keyword">self</span>.operationsLock);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取downloadOperationCancelToken</span></span><br><span class="line">    <span class="keyword">id</span> downloadOperationCancelToken = [operation addHandlersForProgress:progressBlock completed:completedBlock];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建一个新的token，给各属性赋值，并返回token</span></span><br><span class="line">    SDWebImageDownloadToken *token = [SDWebImageDownloadToken new];</span><br><span class="line">    token.downloadOperation = operation;</span><br><span class="line">    token.url = url;</span><br><span class="line">    token.downloadOperationCancelToken = downloadOperationCancelToken;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置下载队列全部暂停/开始</span></span><br><span class="line">- (<span class="keyword">void</span>)setSuspended:(<span class="built_in">BOOL</span>)suspended &#123;</span><br><span class="line">    <span class="keyword">self</span>.downloadQueue.suspended = suspended;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全部取消下载队列中的下载操作</span></span><br><span class="line">- (<span class="keyword">void</span>)cancelAllDownloads &#123;</span><br><span class="line">    [<span class="keyword">self</span>.downloadQueue cancelAllOperations];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark Helper methods</span></span><br><span class="line"><span class="comment">//根据task获取下载操作operation</span></span><br><span class="line">- (SDWebImageDownloaderOperation *)operationWithTask:(<span class="built_in">NSURLSessionTask</span> *)task &#123;</span><br><span class="line">    SDWebImageDownloaderOperation *returnOperation = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">for</span> (SDWebImageDownloaderOperation *operation <span class="keyword">in</span> <span class="keyword">self</span>.downloadQueue.operations) &#123;</span><br><span class="line">        <span class="keyword">if</span> (operation.dataTask.taskIdentifier == task.taskIdentifier) &#123;</span><br><span class="line">            returnOperation = operation;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> returnOperation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="NSURLSessionDataDelegate"><a href="#NSURLSessionDataDelegate" class="headerlink" title="NSURLSessionDataDelegate"></a>NSURLSessionDataDelegate</h4><p>当收到数据的时候，会触发这些代理方法，最后调用SDWebImageDownloaderOperation中的代理方法，来实际处理事情。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session</span><br><span class="line"><span class="symbol">          dataTask:</span>(NSURLSessionDataTask *)dataTask</span><br><span class="line"><span class="string">didReceiveResponse:</span>(NSURLResponse *)response</span><br><span class="line"><span class="symbol"> completionHandler:</span>(<span class="keyword">void</span> (^)(NSURLSessionResponseDisposition disposition))completionHandler &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>dataTask];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">dataTask:</span><span class="string">didReceiveResponse:</span><span class="string">completionHandler:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">dataTask:</span>dataTask <span class="string">didReceiveResponse:</span>response <span class="string">completionHandler:</span>completionHandler];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">            completionHandler(NSURLSessionResponseAllow);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session <span class="string">dataTask:</span>(NSURLSessionDataTask *)dataTask <span class="string">didReceiveData:</span>(NSData *)data &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>dataTask];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">dataTask:</span><span class="string">didReceiveData:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">dataTask:</span>dataTask <span class="string">didReceiveData:</span>data];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session</span><br><span class="line"><span class="symbol">          dataTask:</span>(NSURLSessionDataTask *)dataTask</span><br><span class="line"><span class="symbol"> willCacheResponse:</span>(NSCachedURLResponse *)proposedResponse</span><br><span class="line"><span class="symbol"> completionHandler:</span>(<span class="keyword">void</span> (^)(NSCachedURLResponse *cachedResponse))completionHandler &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>dataTask];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">dataTask:</span><span class="string">willCacheResponse:</span><span class="string">completionHandler:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">dataTask:</span>dataTask <span class="string">willCacheResponse:</span>proposedResponse <span class="string">completionHandler:</span>completionHandler];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">            completionHandler(proposedResponse);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="NSURLSessionTaskDelegate"><a href="#NSURLSessionTaskDelegate" class="headerlink" title="NSURLSessionTaskDelegate"></a>NSURLSessionTaskDelegate</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session <span class="string">task:</span>(NSURLSessionTask *)task <span class="string">didCompleteWithError:</span>(NSError *)error &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>task];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">task:</span><span class="string">didCompleteWithError:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">task:</span>task <span class="string">didCompleteWithError:</span>error];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session <span class="string">task:</span>(NSURLSessionTask *)task <span class="string">willPerformHTTPRedirection:</span>(NSHTTPURLResponse *)response <span class="string">newRequest:</span>(NSURLRequest *)request <span class="string">completionHandler:</span>(<span class="keyword">void</span> (^)(NSURLRequest * _Nullable))completionHandler &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>task];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">task:</span><span class="string">willPerformHTTPRedirection:</span><span class="string">newRequest:</span><span class="string">completionHandler:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">task:</span>task <span class="string">willPerformHTTPRedirection:</span>response <span class="string">newRequest:</span>request <span class="string">completionHandler:</span>completionHandler];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">            completionHandler(request);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)<span class="string">URLSession:</span>(NSURLSession *)session <span class="string">task:</span>(NSURLSessionTask *)task <span class="string">didReceiveChallenge:</span>(NSURLAuthenticationChallenge *)challenge <span class="string">completionHandler:</span>(<span class="keyword">void</span> (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential *credential))completionHandler &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Identify the operation that runs this task and pass it the delegate method</span></span><br><span class="line">    SDWebImageDownloaderOperation *dataOperation = [self <span class="string">operationWithTask:</span>task];</span><br><span class="line">    <span class="keyword">if</span> ([dataOperation <span class="string">respondsToSelector:</span><span class="meta">@selector</span>(<span class="string">URLSession:</span><span class="string">task:</span><span class="string">didReceiveChallenge:</span><span class="string">completionHandler:</span>)]) &#123;</span><br><span class="line">        [dataOperation <span class="string">URLSession:</span>session <span class="string">task:</span>task <span class="string">didReceiveChallenge:</span>challenge <span class="string">completionHandler:</span>completionHandler];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (completionHandler) &#123;</span><br><span class="line">            completionHandler(NSURLSessionAuthChallengePerformDefaultHandling, nil);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt; 的图片下载是由 &lt;code&gt;SDWebImageDownloader&lt;/code&gt; 这个类实现的，该类是一个异步下载管理器。主要工作是下载相关配置项的管理，包括下载队列的先后顺序、最大下载任务数量控制、下载队列中的任务创建、取
      
    
    </summary>
    
      <category term="读SDWebImage手札" scheme="http://guohuaden.com/categories/%E8%AF%BBSDWebImage%E6%89%8B%E6%9C%AD/"/>
    
    
      <category term="SDWebImage" scheme="http://guohuaden.com/tags/SDWebImage/"/>
    
  </entry>
  
</feed>
